version: "3.6"

networks:
  revProxy-net:
    external: true

secrets:
  db_password:
    file: db_password.txt

services:
  yt-db:
    image: postgres:14.10-alpine3.18
    container_name: yt-db
    ports:
      - 5432:5432
    restart: always
    env_file:
      - .env
    secrets:
      - db_password
    networks:
      - revProxy-net
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ${DB_LOCATION}:/var/lib/postgresql/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  yt-db-backup:
    container_name: ytdiff_db_dumper
    image: prodrigestivill/postgres-backup-local
    env_file:
      - .env
    secrets:
      - db_password
    environment:
      POSTGRES_HOST: yt-db
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      TZ: Asia/Kolkata
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      SCHEDULE: "@daily"
      BACKUP_DIR: /db_dumps
    volumes:
      - ${DB_DUMP_LOCATION}/db_dumps:/db_dumps
    depends_on:
      - yt-db
    restart: always
    networks:
      - revProxy-net
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  yt-diff:
    # image: purevert/yt-diff:amd64
    image: ghcr.io/sagnikdas53/yt-diff:master
    container_name: yt-diff
    restart: always
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   args:
    #     # This is used to build the frontend in the docker image
    #     - VITE_BASE_PATH=${BASE_URL}
    volumes:
      - ${HOST_SAVE_PATH}:/${SAVE_PATH}
    depends_on:
      - yt-db
    networks:
      - revProxy-net
    # expose:
    #   - ${PORT}
    # ports:
    #   - ${PORT}:${PORT}
    secrets:
      - db_password
    environment:
      - PROTOCOL=${PROTOCOL}
      - HOSTNAME=${HOSTNAME}
      - PORT=${PORT}
      - BASE_URL=${BASE_URL}
      - HIDE_PORTS=${HIDE_PORTS}
      - USE_NATIVE_HTTPS=${NATIVE_HTTPS_SUPPORT}
      # Database configuration
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD_FILE=/run/secrets/db_password
      # Download configuration
      - SAVE_PATH=${SAVE_PATH}
      - SLEEP=${SLEEP}
      - CHUNK_SIZE_DEFAULT=${CHUNK_SIZE_DEFAULT}
      - SAVE_SUBTITLES=${SAVE_SUBTITLES}
      - SAVE_DESCRIPTION=${SAVE_DESCRIPTION}
      - SAVE_COMMENTS=${SAVE_COMMENTS}
      - SAVE_THUMBNAIL=${SAVE_THUMBNAIL}
      # Update configuration
      - TZ_PREFERRED=${TZ_PREFERRED}
      - UPDATE_SCHEDULED=${UPDATE_SCHEDULED}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.ytdiff.entryPoints=web,websecure'
      - 'traefik.http.routers.ytdiff.rule=Host(`${HOSTNAME}`) && PathPrefix(`${BASE_URL}`)'
      - "traefik.http.services.ytdiff.loadbalancer.server.port=${PORT}"
      - 'traefik.http.services.ytdiff.loadBalancer.passHostHeader=true'
      - "traefik.http.routers.ytdiff.middlewares=http-to-https@docker"
      - "traefik.http.routers.ytdiff.tls=true"
      - "traefik.http.routers.ytdiff.tls.certresolver=tailsolver"
      - "traefik.http.routers.ytdiff.tls.domains[0].main=${HOSTNAME}"
      - "com.centurylinklabs.watchtower.enable=true"
    # healthcheck:
    #   test: ["CMD", "wget", "-q", "--spider", "http://localhost:8888/ytdiff"]
    #   interval: 5m
    #   timeout: 5s
    #   start_period: 30s
    #   retries: 3

  adminer:
    image: adminer:4.8.1-standalone
    container_name: adminer
    restart: always
    depends_on:
      - yt-db
    # ports:
    #   - 8080:8080
    networks:
      - revProxy-net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.adminer.entryPoints=web,websecure'
      - 'traefik.http.routers.adminer.rule=Host(`${HOSTNAME}`) && PathPrefix(`/adminer`)'
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - 'traefik.http.services.adminer.loadBalancer.passHostHeader=true'
      - "traefik.http.middlewares.strip-adminer.stripprefix.prefixes=/adminer"
      - "traefik.http.routers.adminer.middlewares=strip-adminer@docker,http-to-https@docker"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.routers.adminer.tls.certresolver=tailsolver"
      - "traefik.http.routers.adminer.tls.domains[0].main=${HOSTNAME}"
      - "com.centurylinklabs.watchtower.enable=true"
