version: "3"

networks:
  revProxy-net:
    external: true

services:
  yt-db:
    image: postgres:14
    container_name: yt-db
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - .env
    networks:
      - revProxy-net
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./yt-data:/var/lib/postgresql/data

  yt-diff:
    image: purevert/yt-diff:stable
    container_name: yt-diff
    # network_mode: service:vpn-proton
    build:
      context: .
      dockerfile: Dockerfile.debian
    volumes:
      - ./yt-dlp:/yt-dlp
    depends_on:
      - yt-db
    networks:
      - revProxy-net
    ports:
      - 8888:8888
    labels:
      - 'traefik.enable=true'
      ## HTTP Router
      #### Entry point where ytdiff is accessible via
      #### Change secure to https in the line below to have accessible without needing to specify a port and change the SSLHost option below
      - 'traefik.http.routers.ytdiff.entryPoints=web,websecure'
      #### Host or Path where ytdiff is accessible
      #### Remove (or change) this rule if you'd rather have ytdiff accessible at a PathPrefix URI
      # I don't like having the socket.io in another path but whatever
      - 'traefik.http.routers.ytdiff.rule=Host(`${HOSTNAME}`) && PathPrefix(`/ytdiff`)'
      #### Set the correct port
      - "traefik.http.services.ytdiff.loadbalancer.server.port=8888"
      - 'traefik.http.services.ytdiff.loadBalancer.passHostHeader=true'
      #### Prefix stripper
      #- "traefik.http.middlewares.strip-ytdiff.stripprefix.prefixes=/ytdiff"
      - "traefik.http.routers.ytdiff.middlewares=http-to-https@docker"
      #### Using the tailscale ones
      - "traefik.http.routers.ytdiff.tls=true"
      - "traefik.http.routers.ytdiff.tls.certresolver=tailsolver"
      - "traefik.http.routers.ytdiff.tls.domains[0].main=${HOSTNAME}"
    #privileged: true

  adminer:
    image: adminer:4.8.1-standalone
    container_name: adminer
    restart: always
    depends_on:
      - yt-db
    ports:
      - 8080:8080
    networks:
      - revProxy-net
    labels:
      - 'traefik.enable=true'
      ## HTTP Router
      #### Entry point where adminer is accessible via
      #### Change secure to https in the line below to have accessible without needing to specify a port and change the SSLHost option below
      - 'traefik.http.routers.adminer.entryPoints=web,websecure'
      #### Host or Path where adminer is accessible
      #### Remove (or change) this rule if you'd rather have adminer accessible at a PathPrefix URI
      - 'traefik.http.routers.adminer.rule=Host(`${HOSTNAME}`) && PathPrefix(`/adminer`)'
      #### Set the correct port
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      - 'traefik.http.services.adminer.loadBalancer.passHostHeader=true'
      #### Prefix stripper
      - "traefik.http.middlewares.strip-adminer.stripprefix.prefixes=/adminer"
      - "traefik.http.routers.adminer.middlewares=strip-adminer@docker,http-to-https@docker"
      #### Using the tailscale ones
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.routers.adminer.tls.certresolver=tailsolver"
      - "traefik.http.routers.adminer.tls.domains[0].main=${HOSTNAME}"
  #http://localhost:8080/?pgsql=yt-db&username=ytdiff&db=vidlist&ns=public

  #vpn-proton:
  #  image: qmcgaw/gluetun
  #  container_name: vpn-proton
  #  cap_add:
  #    - NET_ADMIN
  #  env_file:
  #    - .env
  #  environment:
  #    - VPN_SERVICE_PROVIDER=${SERVICE_PROVIDER_VPN}
  #    - OPENVPN_USER=${USERNAME_VPN}
  #    - OPENVPN_PASSWORD=${PASSWORD_VPN}
  #    - SERVER_COUNTRIES=${SERVER_COUNTRIES_PREFERRED}
  #    - FREE_ONLY=${FREE}
  #    - Tz=${TZ_PREFERRED}
  #  devices:
  #    - /dev/net/tun:/dev/net/tun
  #  volumes:
  #    - ./gluetun:/gluetun
  #  ports:
  #    - 9091:9091
  #    - 51413:51413
  #    - 51413:51413/udp
  #  restart: "unless-stopped"

  # will implement later
  #volumes:
  #  ytdata:
