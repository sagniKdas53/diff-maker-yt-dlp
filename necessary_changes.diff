--- sync_reload.js	2023-02-22 18:29:14.154141714 +0530
+++ index.js	2023-02-22 18:20:51.333418117 +0530
@@ -399,19 +399,19 @@
 const html = "text/html; charset=utf-8";
 const js = "text/javascript; charset=utf-8";
 const staticAssets = {
-    '': { obj: (__dirname + '/index.html'), type: html },
-    '/': { obj: (__dirname + '/index.html'), type: html },
-    '/dbi': { obj: (__dirname + '/dbi.html'), type: html },
-    '/assets/bootstrap.min.css': { obj: (__dirname + '/node_modules/bootstrap/dist/css/bootstrap.min.css'), type: css },
-    '/assets/bootstrap.min.css.map': { obj: (__dirname + '/node_modules/bootstrap/dist/css/bootstrap.min.css.map'), type: css },
-    '/assets/bootstrap.bundle.min.js': { obj: (__dirname + '/node_modules/bootstrap/dist/js/bootstrap.bundle.min.js'), type: js },
-    '/assets/bootstrap.bundle.min.js.map': { obj: (__dirname + '/node_modules/bootstrap/dist/js/bootstrap.bundle.min.js.map'), type: js },
-    '/assets/favicon.ico': { obj: (__dirname + '/favicon.ico'), type: "image/x-icon" },
-    '/assets/socket.io.min.js': { obj: (__dirname + '/node_modules/socket.io/client-dist/socket.io.min.js'), type: js },
-    '/assets/socket.io.min.js.map': { obj: (__dirname + '/node_modules/socket.io/client-dist/socket.io.min.js.map'), type: js },
-    '/assets/nav.png': { obj: (__dirname + '/nav.png'), type: "image/png" },
-    '/assets/client.js': { obj: (__dirname + '/client.js'), type: js }
+    '': { obj: fs.readFileSync(__dirname + '/index.html'), type: html },
+    '/': { obj: fs.readFileSync(__dirname + '/index.html'), type: html },
+    '/dbi': { obj: fs.readFileSync(__dirname + '/dbi.html'), type: html },
+    '/assets/bootstrap.min.css': { obj: fs.readFileSync(__dirname + '/node_modules/bootstrap/dist/css/bootstrap.min.css'), type: css },
+    '/assets/bootstrap.min.css.map': { obj: fs.readFileSync(__dirname + '/node_modules/bootstrap/dist/css/bootstrap.min.css.map'), type: css },
+    '/assets/bootstrap.bundle.min.js': { obj: fs.readFileSync(__dirname + '/node_modules/bootstrap/dist/js/bootstrap.bundle.min.js'), type: js },
+    '/assets/bootstrap.bundle.min.js.map': { obj: fs.readFileSync(__dirname + '/node_modules/bootstrap/dist/js/bootstrap.bundle.min.js.map'), type: js },
+    '/assets/favicon.ico': { obj: fs.readFileSync(__dirname + '/favicon.ico'), type: "image/x-icon" },
+    '/assets/socket.io.min.js': { obj: fs.readFileSync(__dirname + '/node_modules/socket.io/client-dist/socket.io.min.js'), type: js },
+    '/assets/socket.io.min.js.map': { obj: fs.readFileSync(__dirname + '/node_modules/socket.io/client-dist/socket.io.min.js.map'), type: js },
+    '/assets/nav.png': { obj: fs.readFileSync(__dirname + '/nav.png'), type: "image/png" },
+    '/assets/client.js': { obj: fs.readFileSync(__dirname + '/client.js'), type: js }
 };
 
 const server = http.createServer((req, res) => {
@@ -419,7 +419,7 @@
         try {
             var get = req.url.replace(url_base, '')
             res.writeHead(200, { "Content-Type": staticAssets[get].type });
-            res.write(fs.readFileSync(staticAssets[get].obj));
+            res.write(staticAssets[get].obj);
         } catch (error) {
             res.writeHead(404, { "Content-Type": html });
             res.write("Not Found");
