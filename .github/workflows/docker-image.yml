name: Publish multi-arch Docker image on push to master branch

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.2

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # - name: Get Composer Cache Directory
      #   id: composer-cache
      #   run: |
      #     echo "dir=$(composer config cache-files-dir)" >> $GITHUB_ENV

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       /tmp/.buildx-cache
      #       ${{ steps.composer-cache.outputs.dir }}
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD-HHmmss' tz='UTC'}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          platforms: linux/amd64,linux/arm64
          # cache-from: |
          #   type=local,src=/tmp/.buildx-cache
          #   type=local,src=${{ steps.composer-cache.outputs.dir }}
          # cache-to: |
          #   type=local,dest=/tmp/.buildx-cache
          #   type=local,dest=${{ steps.composer-cache.outputs.dir }}
          # Todo: Find if it's possible to build vite woithout this
          build-args: |
            VITE_BASE_PATH=/ytdiff
