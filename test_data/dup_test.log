
> yt-diff@1.3.0 dev
> node --watch index.js

[94m[5/16/2023, 2:10:25 PM] INFO: Server listening on http://localhost:8888/ytdiff
[39m
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'video_lists'
[94m[5/16/2023, 2:10:25 PM] INFO: Connection to server has been established successfully
[39m
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'video_lists' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'playlist_lists'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'playlist_lists' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'playlist_video_indexers'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'playlist_video_indexers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
[94m[5/16/2023, 2:10:25 PM] INFO: video_list and playlist_list tables exist or are created successfully
[39m
Executing (b21bab45-b7a2-4afa-b004-61563ed208a6): START TRANSACTION;
Executing (b21bab45-b7a2-4afa-b004-61563ed208a6): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" WHERE "playlist_list"."playlist_url" = 'None';
Executing (b21bab45-b7a2-4afa-b004-61563ed208a6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_aa83cd513e1c4b5da3a6b4c9267a2796$ BEGIN INSERT INTO "playlist_lists" ("playlist_url","title","playlist_index","monitoring_type","save_dir","createdAt","updatedAt") VALUES ('None','None',-1,1,'','2023-05-16 08:40:25.523 +00:00','2023-05-16 08:40:25.523 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_aa83cd513e1c4b5da3a6b4c9267a2796$ LANGUAGE plpgsql; SELECT (testfunc.response)."playlist_url", (testfunc.response)."title", (testfunc.response)."playlist_index", (testfunc.response)."monitoring_type", (testfunc.response)."save_dir", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b21bab45-b7a2-4afa-b004-61563ed208a6): COMMIT;
[94m[5/16/2023, 2:10:28 PM] INFO: Sleep duration: 3.002 seconds
[39m
[94m[5/16/2023, 2:10:28 PM] INFO: Next scheduled update is on 2023-05-17T00:00:00.000+05:30
[39m
[92m[5/16/2023, 2:10:28 PM] VERBOSE: Download Options:
	yt-dlp --embed-metadata --write-subs --write-auto-subs --write-description --write-comments --write-thumbnail --paths "/home/sagnik/Videos/yt-dlp/{playlist_dir}" "{url}"
[39m
[92m[5/16/2023, 2:10:28 PM] VERBOSE: List Options:
	yt-dlp --playlist-start {start_num} --playlist-end {stop_num} --flat-playlist --print "%(title)s	%(id)s	%(webpage_url)s	%(filesize_approx)s" {body_url}
[39m
[94m[5/16/2023, 2:10:31 PM] INFO: Connected to client id uPwrbp-QddU9lyxkAAAB
[39m
[94m[5/16/2023, 2:10:31 PM] INFO: Connected to client id uPwrbp-QddU9lyxkAAAB
[39m
[94m[5/16/2023, 2:10:31 PM] INFO: Connected to client id uPwrbp-QddU9lyxkAAAB
[39m
[94m[5/16/2023, 2:10:31 PM] INFO: Connected to client id uPwrbp-QddU9lyxkAAAB
[39m
[94m[5/16/2023, 2:10:37 PM] INFO: Connected to client id 5l4mYqoFvNGONkC8AAAD
[39m
[96m[5/16/2023, 2:10:37 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
[96m[5/16/2023, 2:10:37 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:10:37 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:10:37 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[94m[5/16/2023, 2:10:37 PM] INFO: Connected to client id 5l4mYqoFvNGONkC8AAAD
[39m
[94m[5/16/2023, 2:10:37 PM] INFO: Connected to client id 5l4mYqoFvNGONkC8AAAD
[39m
[94m[5/16/2023, 2:10:37 PM] INFO: Connected to client id 5l4mYqoFvNGONkC8AAAD
[39m
[96m[5/16/2023, 2:10:37 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:10:37 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:10:42 PM] TRACE: list_and_download:  body_url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, start_num: 1, stop_num: 11, chunk_size: 11, download_list: [null], sleep_before_listing: true, index: 0, monitoring_type: 1
[39m
[95m[5/16/2023, 2:10:42 PM] DEBUG: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ is a youtube channel
[39m
[96m[5/16/2023, 2:10:45 PM] TRACE: list_spawner: Start: 1, Stop: 11, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[92m[5/16/2023, 2:10:48 PM] VERBOSE: response_list:	[
  "„Éï„Ç©„Éã„Ç§ / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(Cover)\tN029UUlH1Dc\thttps://www.youtube.com/watch?v=N029UUlH1Dc\tNA",
  "„Äêoriginal anime MV„ÄëI‚Äôm Your Treasure Box Ôºä„ÅÇ„Å™„Åü„ÅØ „Éû„É™„É≥„Åõ„Çì„Å°„Çá„ÅÜ„Çí „Åü„Åã„Çâ„Å∞„Åì„Åã„Çâ„Åø„Å§„Åë„Åü„ÄÇ„Äêhololive/ÂÆùÈêò„Éû„É™„É≥„Äë\tvV-5W7SFHDc\thttps://www.youtube.com/watch?v=vV-5W7SFHDc\tNA",
  "„Äêoriginal anime MV„ÄëI‚Äôm Your Treasure Box Ôºä„ÅÇ„Å™„Åü„ÅØ „Éû„É™„É≥„Åõ„Çì„Å°„Çá„ÅÜ„Çí „Åü„Åã„Çâ„Å∞„Åì„Åã„Çâ„Åø„Å§„Åë„Åü„ÄÇ„Äêhololive/ÂÆùÈêò„Éû„É™„É≥„Äë\tvV-5W7SFHDc\thttps://www.youtube.com/watch?v=vV-5W7SFHDc\tNA",
  "Stellar Stellar / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)\ta51VH9BYzZA\thttps://www.youtube.com/watch?v=a51VH9BYzZA\tNA",
  "GETCHA! / calliope √ó suisei(cover)\tEjlMPu5sEgw\thttps://www.youtube.com/watch?v=EjlMPu5sEgw\tNA",
  "GHOST / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)\tIKKar5SS29E\thttps://www.youtube.com/watch?v=IKKar5SS29E\tNA",
  "[Zombie Land Saga] Franchouchou \"Saga Jihen\" / Hoshimachi Suisei with Hololive Fantasy\t-wNSFmqhQsU\thttps://www.youtube.com/watch?v=-wNSFmqhQsU\tNA",
  "„ÄêÔºëÂë®Âπ¥Ë®òÂøµ„Äë„ÉÄ„ÉÄ„ÉÄ„ÉÄÂ§©‰ΩøÔºèÊπä„ÅÇ„Åè„ÅÇ„ÄêÊ≠å„Å£„Å¶„Åø„Åü„Äë\tO8v5S1nhKzo\thttps://www.youtube.com/watch?v=O8v5S1nhKzo\tNA",
  "„Äêoriginal„ÄëAhoy!! Êàë„ÇâÂÆùÈêòÊµ∑Ë≥äÂõ£‚òÜ„Äê„Éõ„É≠„É©„Ç§„Éñ/ÂÆùÈêò„Éû„É™„É≥„Äë\te7VK3pne8N4\thttps://www.youtube.com/watch?v=e7VK3pne8N4\tNA",
  "NEXT COLOR PLANET / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)\tvQHVGXdcqEQ\thttps://www.youtube.com/watch?v=vQHVGXdcqEQ\tNA",
  "KING / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(Cover)\tmLwtfg57kbs\thttps://www.youtube.com/watch?v=mLwtfg57kbs\tNA"
], response_list.length: 11
[39m
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" WHERE "playlist_list"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ';
[91m[5/16/2023, 2:10:48 PM] ERROR: playlist or channel not encountered earlier, saving in playlist
[39m
Executing (default): SELECT "playlist_index" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" DESC LIMIT 1;
[96m[5/16/2023, 2:10:48 PM] TRACE: process_response: Index: -1, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (f1a6bbdf-1347-4ce0-a7c8-7aac5cadf0b0): START TRANSACTION;
Executing (8a662fe5-97e8-4f5d-b015-22a4c4ad8e88): START TRANSACTION;
Executing (c874d478-7c68-44d5-85ad-1b0b0b5b94d2): START TRANSACTION;
Executing (a7fdb553-6931-478a-a1ed-7c9998487f45): START TRANSACTION;
Executing (f1a6bbdf-1347-4ce0-a7c8-7aac5cadf0b0): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=N029UUlH1Dc';
Executing (8a662fe5-97e8-4f5d-b015-22a4c4ad8e88): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=vV-5W7SFHDc';
Executing (c874d478-7c68-44d5-85ad-1b0b0b5b94d2): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=vV-5W7SFHDc';
Executing (a7fdb553-6931-478a-a1ed-7c9998487f45): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=a51VH9BYzZA';
Executing (f1a6bbdf-1347-4ce0-a7c8-7aac5cadf0b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c9cd95b21e7d43b4a71020f7ecf58c8d$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=N029UUlH1Dc','N029UUlH1Dc','„Éï„Ç©„Éã„Ç§ / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(Cover)',-1,false,true,'2023-05-16 08:40:48.168 +00:00','2023-05-16 08:40:48.168 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c9cd95b21e7d43b4a71020f7ecf58c8d$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8a662fe5-97e8-4f5d-b015-22a4c4ad8e88): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a4d825e0b2dc43b8b271baddbe3d84e8$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=vV-5W7SFHDc','vV-5W7SFHDc','„Äêoriginal anime MV„ÄëI‚Äôm Your Treasure Box Ôºä„ÅÇ„Å™„Åü„ÅØ „Éû„É™„É≥„Åõ„Çì„Å°„Çá„ÅÜ„Çí „Åü„Åã„Çâ„Å∞„Åì„Åã„Çâ„Åø„Å§„Åë„Åü„ÄÇ„Äêhololive/ÂÆùÈêò„Éû„É™„É≥„Äë',-1,false,true,'2023-05-16 08:40:48.171 +00:00','2023-05-16 08:40:48.171 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a4d825e0b2dc43b8b271baddbe3d84e8$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f1a6bbdf-1347-4ce0-a7c8-7aac5cadf0b0): COMMIT;
Executing (8a662fe5-97e8-4f5d-b015-22a4c4ad8e88): COMMIT;
Executing (a7fdb553-6931-478a-a1ed-7c9998487f45): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_78ba3ce6b7b44e94995d654d5ee755f2$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=a51VH9BYzZA','a51VH9BYzZA','Stellar Stellar / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:40:48.181 +00:00','2023-05-16 08:40:48.181 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_78ba3ce6b7b44e94995d654d5ee755f2$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c874d478-7c68-44d5-85ad-1b0b0b5b94d2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_929ae2fd73824316ac3af3ae45adcccc$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=vV-5W7SFHDc','vV-5W7SFHDc','„Äêoriginal anime MV„ÄëI‚Äôm Your Treasure Box Ôºä„ÅÇ„Å™„Åü„ÅØ „Éû„É™„É≥„Åõ„Çì„Å°„Çá„ÅÜ„Çí „Åü„Åã„Çâ„Å∞„Åì„Åã„Çâ„Åø„Å§„Åë„Åü„ÄÇ„Äêhololive/ÂÆùÈêò„Éû„É™„É≥„Äë',-1,false,true,'2023-05-16 08:40:48.185 +00:00','2023-05-16 08:40:48.185 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_929ae2fd73824316ac3af3ae45adcccc$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=N029UUlH1Dc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":0}
[39m
Executing (d95f832a-f16a-49bc-9a69-2857e911230e): START TRANSACTION;
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=vV-5W7SFHDc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":1}
[39m
Executing (e2e46d48-f526-40d0-9278-13ba3fa2e24c): START TRANSACTION;
Executing (a7fdb553-6931-478a-a1ed-7c9998487f45): COMMIT;
Executing (d95f832a-f16a-49bc-9a69-2857e911230e): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=EjlMPu5sEgw';
Executing (e2e46d48-f526-40d0-9278-13ba3fa2e24c): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=IKKar5SS29E';
Executing (d95f832a-f16a-49bc-9a69-2857e911230e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bfac784cfcd54f8d8a763d37e28c2942$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=EjlMPu5sEgw','EjlMPu5sEgw','GETCHA! / calliope √ó suisei(cover)',-1,false,true,'2023-05-16 08:40:48.198 +00:00','2023-05-16 08:40:48.198 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bfac784cfcd54f8d8a763d37e28c2942$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e2e46d48-f526-40d0-9278-13ba3fa2e24c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0787c6f04edf4f088b9b8d4d31b58a6d$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=IKKar5SS29E','IKKar5SS29E','GHOST / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:40:48.202 +00:00','2023-05-16 08:40:48.202 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0787c6f04edf4f088b9b8d4d31b58a6d$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=a51VH9BYzZA","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":2}
[39m
Executing (3693595d-78be-4dbf-bd80-92868e4a215a): START TRANSACTION;
Executing (d95f832a-f16a-49bc-9a69-2857e911230e): COMMIT;
Executing (e2e46d48-f526-40d0-9278-13ba3fa2e24c): COMMIT;
Executing (3693595d-78be-4dbf-bd80-92868e4a215a): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=-wNSFmqhQsU';
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=EjlMPu5sEgw","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":3}
[39m
Executing (09518121-d317-4e49-83be-d48b424fa99a): START TRANSACTION;
Executing (3693595d-78be-4dbf-bd80-92868e4a215a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8bd46fdce2dc4391bad5e6326b0f39d2$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=-wNSFmqhQsU','-wNSFmqhQsU','[Zombie Land Saga] Franchouchou "Saga Jihen" / Hoshimachi Suisei with Hololive Fantasy',-1,false,true,'2023-05-16 08:40:48.217 +00:00','2023-05-16 08:40:48.217 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8bd46fdce2dc4391bad5e6326b0f39d2$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (09518121-d317-4e49-83be-d48b424fa99a): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=O8v5S1nhKzo';
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=IKKar5SS29E","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":4}
[39m
Executing (1258c60d-a652-4d3c-a5e0-bc4ea8ccaa36): START TRANSACTION;
Executing (09518121-d317-4e49-83be-d48b424fa99a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a7cf8b63ea1c4737b708932e528027b7$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=O8v5S1nhKzo','O8v5S1nhKzo','„ÄêÔºëÂë®Âπ¥Ë®òÂøµ„Äë„ÉÄ„ÉÄ„ÉÄ„ÉÄÂ§©‰ΩøÔºèÊπä„ÅÇ„Åè„ÅÇ„ÄêÊ≠å„Å£„Å¶„Åø„Åü„Äë',-1,false,true,'2023-05-16 08:40:48.225 +00:00','2023-05-16 08:40:48.225 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a7cf8b63ea1c4737b708932e528027b7$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1258c60d-a652-4d3c-a5e0-bc4ea8ccaa36): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=e7VK3pne8N4';
Executing (3693595d-78be-4dbf-bd80-92868e4a215a): COMMIT;
Executing (299ebfda-c811-43d9-86fd-dd0cf1c900f6): START TRANSACTION;
Executing (09518121-d317-4e49-83be-d48b424fa99a): COMMIT;
Executing (1258c60d-a652-4d3c-a5e0-bc4ea8ccaa36): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1eeef2525cd948578b819a14e4101cd1$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=e7VK3pne8N4','e7VK3pne8N4','„Äêoriginal„ÄëAhoy!! Êàë„ÇâÂÆùÈêòÊµ∑Ë≥äÂõ£‚òÜ„Äê„Éõ„É≠„É©„Ç§„Éñ/ÂÆùÈêò„Éû„É™„É≥„Äë',-1,false,true,'2023-05-16 08:40:48.232 +00:00','2023-05-16 08:40:48.232 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1eeef2525cd948578b819a14e4101cd1$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (299ebfda-c811-43d9-86fd-dd0cf1c900f6): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=vQHVGXdcqEQ';
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=O8v5S1nhKzo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":5}
[39m
Executing (594c31b9-7a10-4afa-b982-3891a52f59d5): START TRANSACTION;
Executing (1258c60d-a652-4d3c-a5e0-bc4ea8ccaa36): COMMIT;
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=-wNSFmqhQsU","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":6}
[39m
Executing (0a66790b-d426-4fe8-a334-41b169eba55a): START TRANSACTION;
Executing (594c31b9-7a10-4afa-b982-3891a52f59d5): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=mLwtfg57kbs';
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=e7VK3pne8N4","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":7}
[39m
Executing (9d4db743-f81b-44b8-b873-721c36d087a3): START TRANSACTION;
Executing (0a66790b-d426-4fe8-a334-41b169eba55a): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=N029UUlH1Dc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 0 LIMIT 1;
Executing (299ebfda-c811-43d9-86fd-dd0cf1c900f6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_32e8d0baf9324e2397283bae352c5ac3$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=vQHVGXdcqEQ','vQHVGXdcqEQ','NEXT COLOR PLANET / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:40:48.245 +00:00','2023-05-16 08:40:48.245 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_32e8d0baf9324e2397283bae352c5ac3$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (594c31b9-7a10-4afa-b982-3891a52f59d5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3793f3380f4f475488be9963f6482233$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=mLwtfg57kbs','mLwtfg57kbs','KING / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(Cover)',-1,false,true,'2023-05-16 08:40:48.247 +00:00','2023-05-16 08:40:48.247 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3793f3380f4f475488be9963f6482233$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9d4db743-f81b-44b8-b873-721c36d087a3): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=vV-5W7SFHDc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 1 LIMIT 1;
Executing (0a66790b-d426-4fe8-a334-41b169eba55a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_15e2264a911a4ca1bc0660a4fba627ca$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('90b1907d-0dc7-4ecb-a311-84f86c5786f5','https://www.youtube.com/watch?v=N029UUlH1Dc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',0,'2023-05-16 08:40:48.251 +00:00','2023-05-16 08:40:48.251 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_15e2264a911a4ca1bc0660a4fba627ca$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (594c31b9-7a10-4afa-b982-3891a52f59d5): COMMIT;
Executing (9d4db743-f81b-44b8-b873-721c36d087a3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eecc8db61ef849a0a8a6c7ba87471126$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('336a7ae9-38f0-4fc7-8c35-f5979f46635c','https://www.youtube.com/watch?v=vV-5W7SFHDc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',1,'2023-05-16 08:40:48.256 +00:00','2023-05-16 08:40:48.256 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eecc8db61ef849a0a8a6c7ba87471126$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (299ebfda-c811-43d9-86fd-dd0cf1c900f6): COMMIT;
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=mLwtfg57kbs","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":8}
[39m
Executing (default): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=vV-5W7SFHDc';
Executing (9d4db743-f81b-44b8-b873-721c36d087a3): COMMIT;
Executing (0a66790b-d426-4fe8-a334-41b169eba55a): COMMIT;
Executing (b83cdaed-61f1-4e3c-bc6d-a33028ea35c1): START TRANSACTION;
Executing (c874d478-7c68-44d5-85ad-1b0b0b5b94d2): COMMIT;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 1)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (1d1b8051-0b5b-4c90-a6d9-59dd7900ddd1): START TRANSACTION;
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=vQHVGXdcqEQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":9}
[39m
Executing (edca0793-5ff6-4255-b63b-edfcd3093c94): START TRANSACTION;
Executing (b83cdaed-61f1-4e3c-bc6d-a33028ea35c1): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=a51VH9BYzZA' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 2 LIMIT 1;
Executing (1d1b8051-0b5b-4c90-a6d9-59dd7900ddd1): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=EjlMPu5sEgw' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 3 LIMIT 1;
Executing (edca0793-5ff6-4255-b63b-edfcd3093c94): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=IKKar5SS29E' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 4 LIMIT 1;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 0)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (56618dda-4bd0-4d7c-97ad-290122cd17f2): START TRANSACTION;
Executing (b83cdaed-61f1-4e3c-bc6d-a33028ea35c1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a238e1cbdb8e4205abbda09f3ae28e76$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('66a42a85-d71a-44c3-958f-e3c11f6070e8','https://www.youtube.com/watch?v=a51VH9BYzZA','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',2,'2023-05-16 08:40:48.273 +00:00','2023-05-16 08:40:48.273 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a238e1cbdb8e4205abbda09f3ae28e76$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d1b8051-0b5b-4c90-a6d9-59dd7900ddd1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7f172b79936b4c198077356140f91f5e$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('568010de-59d8-4402-a535-3b5452991538','https://www.youtube.com/watch?v=EjlMPu5sEgw','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',3,'2023-05-16 08:40:48.275 +00:00','2023-05-16 08:40:48.275 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7f172b79936b4c198077356140f91f5e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (edca0793-5ff6-4255-b63b-edfcd3093c94): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1cf46afcb53a497b930242975f44a6c5$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('244e3ae0-8b52-4cdb-9b5b-5567b6b7a80d','https://www.youtube.com/watch?v=IKKar5SS29E','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',4,'2023-05-16 08:40:48.276 +00:00','2023-05-16 08:40:48.276 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1cf46afcb53a497b930242975f44a6c5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:48 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=vV-5W7SFHDc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":10}
[39m
Executing (471a4de0-c23d-4856-b605-857f2c5b5443): START TRANSACTION;
Executing (b83cdaed-61f1-4e3c-bc6d-a33028ea35c1): COMMIT;
Executing (1d1b8051-0b5b-4c90-a6d9-59dd7900ddd1): COMMIT;
Executing (edca0793-5ff6-4255-b63b-edfcd3093c94): COMMIT;
Executing (471a4de0-c23d-4856-b605-857f2c5b5443): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=-wNSFmqhQsU' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 6 LIMIT 1;
Executing (56618dda-4bd0-4d7c-97ad-290122cd17f2): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=O8v5S1nhKzo' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 5 LIMIT 1;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 3)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (3ba7c99f-edd5-4932-8439-fabcc5dc2448): START TRANSACTION;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 4)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (e31b81a3-f1dc-4ce7-9a31-3e73d426e701): START TRANSACTION;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 5)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (23fcf1f5-1a62-463b-a442-fbb82e151296): START TRANSACTION;
Executing (471a4de0-c23d-4856-b605-857f2c5b5443): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9be2e740f89f49edb3d2e357945108d0$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('f8ff473f-8452-42e8-92c2-69fa07d89eb6','https://www.youtube.com/watch?v=-wNSFmqhQsU','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',6,'2023-05-16 08:40:48.287 +00:00','2023-05-16 08:40:48.287 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9be2e740f89f49edb3d2e357945108d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3ba7c99f-edd5-4932-8439-fabcc5dc2448): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=e7VK3pne8N4' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 7 LIMIT 1;
Executing (e31b81a3-f1dc-4ce7-9a31-3e73d426e701): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=mLwtfg57kbs' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 8 LIMIT 1;
Executing (23fcf1f5-1a62-463b-a442-fbb82e151296): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=vQHVGXdcqEQ' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 9 LIMIT 1;
Executing (56618dda-4bd0-4d7c-97ad-290122cd17f2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_71f988d9c6374140889c8eb0a2ce9ad2$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('9012e940-3fd0-4ca8-82a6-13d720b5d092','https://www.youtube.com/watch?v=O8v5S1nhKzo','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',5,'2023-05-16 08:40:48.293 +00:00','2023-05-16 08:40:48.293 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_71f988d9c6374140889c8eb0a2ce9ad2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3ba7c99f-edd5-4932-8439-fabcc5dc2448): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5747b91dc8784f81a5131e8d09fc7997$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('e2c21bf7-9bf2-44de-8d22-a401f57bba3a','https://www.youtube.com/watch?v=e7VK3pne8N4','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',7,'2023-05-16 08:40:48.294 +00:00','2023-05-16 08:40:48.294 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5747b91dc8784f81a5131e8d09fc7997$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e31b81a3-f1dc-4ce7-9a31-3e73d426e701): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_54158b52d42444e0b912cce5f2b6cddb$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('d9d3dc2c-e588-49d2-9e6d-800ae5f54197','https://www.youtube.com/watch?v=mLwtfg57kbs','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',8,'2023-05-16 08:40:48.296 +00:00','2023-05-16 08:40:48.296 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_54158b52d42444e0b912cce5f2b6cddb$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (23fcf1f5-1a62-463b-a442-fbb82e151296): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f5be61564d2a4c538dab9556b506c319$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('31fdb6ce-cc17-45bd-aed6-3dd2ffa141ab','https://www.youtube.com/watch?v=vQHVGXdcqEQ','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',9,'2023-05-16 08:40:48.298 +00:00','2023-05-16 08:40:48.298 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f5be61564d2a4c538dab9556b506c319$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (471a4de0-c23d-4856-b605-857f2c5b5443): COMMIT;
Executing (3ba7c99f-edd5-4932-8439-fabcc5dc2448): COMMIT;
Executing (e31b81a3-f1dc-4ce7-9a31-3e73d426e701): COMMIT;
Executing (23fcf1f5-1a62-463b-a442-fbb82e151296): COMMIT;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 6)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (929bb1cd-e46c-4ed6-a20f-a81ae804f387): START TRANSACTION;
Executing (56618dda-4bd0-4d7c-97ad-290122cd17f2): COMMIT;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 8)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 10)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 9)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (929bb1cd-e46c-4ed6-a20f-a81ae804f387): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=vV-5W7SFHDc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 10 LIMIT 1;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 7)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
Executing (929bb1cd-e46c-4ed6-a20f-a81ae804f387): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e058d2dd64924ccabd571b1e124387ab$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('599625f5-d08c-4205-a6af-46fcd5d6d05f','https://www.youtube.com/watch?v=vV-5W7SFHDc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',10,'2023-05-16 08:40:48.309 +00:00','2023-05-16 08:40:48.309 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e058d2dd64924ccabd571b1e124387ab$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (929bb1cd-e46c-4ed6-a20f-a81ae804f387): COMMIT;
[91m[5/16/2023, 2:10:48 PM] ERROR: Error
    at Query.run (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.insert (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:2490:35)
    at async playlist_video_indexer.create (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1362:12)
    at async playlist_video_indexer.findOrCreate (/home/sagnik/Projects/yt-diff/node_modules/sequelize/lib/model.js:1422:25)
    at async /home/sagnik/Projects/yt-diff/index.js:425:11
    at async Promise.all (index 2)
    at async process_response (/home/sagnik/Projects/yt-diff/index.js:382:3)
[39m
[96m[5/16/2023, 2:10:48 PM] TRACE: list_background: URL: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, Chunk: 11, Start: 12, Stop: 22
[39m
[96m[5/16/2023, 2:10:48 PM] TRACE: sublist_to_table:  Start: 0, Stop: 10,  Query: "", Order: ["index_in_playlist","ASC"], playlist_url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (default): SELECT count("playlist_video_indexer"."id") AS "count" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ';
Executing (default): SELECT "playlist_video_indexer"."id", "playlist_video_indexer"."index_in_playlist", "playlist_video_indexer"."playlist_url", "video_list"."title" AS "video_list.title", "video_list"."video_id" AS "video_list.video_id", "video_list"."video_url" AS "video_list.video_url", "video_list"."downloaded" AS "video_list.downloaded", "video_list"."available" AS "video_list.available" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' ORDER BY "playlist_video_indexer"."index_in_playlist" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:10:48 PM] TRACE: sublist_to_table:  Start: 0, Stop: 10,  Query: "", Order: ["index_in_playlist","ASC"], playlist_url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (default): SELECT count("playlist_video_indexer"."id") AS "count" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ';
Executing (default): SELECT "playlist_video_indexer"."id", "playlist_video_indexer"."index_in_playlist", "playlist_video_indexer"."playlist_url", "video_list"."title" AS "video_list.title", "video_list"."video_id" AS "video_list.video_id", "video_list"."video_url" AS "video_list.video_url", "video_list"."downloaded" AS "video_list.downloaded", "video_list"."available" AS "video_list.available" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' ORDER BY "playlist_video_indexer"."index_in_playlist" ASC LIMIT 10 OFFSET 0;
Executing (4ae2f9e6-ccf9-4cfa-98eb-7d1359d8fab4): START TRANSACTION;
Executing (4ae2f9e6-ccf9-4cfa-98eb-7d1359d8fab4): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" WHERE "playlist_list"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ';
Executing (4ae2f9e6-ccf9-4cfa-98eb-7d1359d8fab4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3f7f35d0690d4cd1b7f4c75f8c44087d$ BEGIN INSERT INTO "playlist_lists" ("playlist_url","title","playlist_index","monitoring_type","save_dir","createdAt","updatedAt") VALUES ('https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ','Holo List',0,1,'Holo List','2023-05-16 08:40:51.097 +00:00','2023-05-16 08:40:51.097 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3f7f35d0690d4cd1b7f4c75f8c44087d$ LANGUAGE plpgsql; SELECT (testfunc.response)."playlist_url", (testfunc.response)."title", (testfunc.response)."playlist_index", (testfunc.response)."monitoring_type", (testfunc.response)."save_dir", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4ae2f9e6-ccf9-4cfa-98eb-7d1359d8fab4): COMMIT;
[96m[5/16/2023, 2:10:51 PM] TRACE: list_spawner: Start: 12, Stop: 22, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:10:53 PM] TRACE: process_response: Index: 10, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (8b22727d-3a74-41c2-b86b-556dd189e6dc): START TRANSACTION;
Executing (d4a21387-e1fa-48d7-a03b-ecae433fe017): START TRANSACTION;
Executing (4c997cae-7d67-46ff-b506-0ab8eed10fce): START TRANSACTION;
Executing (1faeaeb3-98d5-4343-8201-df68cc0d24d8): START TRANSACTION;
Executing (b74b78ea-fcda-4cbe-86ef-2489a4a82e60): START TRANSACTION;
Executing (8b22727d-3a74-41c2-b86b-556dd189e6dc): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=4muYzftomAE';
Executing (d4a21387-e1fa-48d7-a03b-ecae433fe017): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=3UV8OZj2olg';
Executing (4c997cae-7d67-46ff-b506-0ab8eed10fce): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=j6P_m6adkgc';
Executing (1faeaeb3-98d5-4343-8201-df68cc0d24d8): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=NT6Pf28eCgQ';
Executing (b74b78ea-fcda-4cbe-86ef-2489a4a82e60): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=_VIeV_LZXHM';
Executing (8b22727d-3a74-41c2-b86b-556dd189e6dc): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2714e03ce9d8487daf4eb8a3e94be381$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=4muYzftomAE','4muYzftomAE','flos / Áå´Âèà„Åä„Åã„ÇÜ (Cover)',-1,false,true,'2023-05-16 08:40:53.966 +00:00','2023-05-16 08:40:53.966 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2714e03ce9d8487daf4eb8a3e94be381$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d4a21387-e1fa-48d7-a03b-ecae433fe017): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cd7c995d24a84db4a62df408c72471d0$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=3UV8OZj2olg','3UV8OZj2olg','-ERROR/Â∏∏Èóá„Éà„ÉØ(cover)',-1,false,true,'2023-05-16 08:40:53.967 +00:00','2023-05-16 08:40:53.967 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cd7c995d24a84db4a62df408c72471d0$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4c997cae-7d67-46ff-b506-0ab8eed10fce): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d5543c8f85d04bd38e8a4ae874b34ec9$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=j6P_m6adkgc','j6P_m6adkgc','„ÇÇ„Åê„ÇÇ„ÅêYUMMYÔºÅ/ Áå´Âèà„Åä„Åã„ÇÜ(official)',-1,false,true,'2023-05-16 08:40:53.968 +00:00','2023-05-16 08:40:53.968 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d5543c8f85d04bd38e8a4ae874b34ec9$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1faeaeb3-98d5-4343-8201-df68cc0d24d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c1aebca0cc124990884224bfecf99ad1$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=NT6Pf28eCgQ','NT6Pf28eCgQ','„ÄêInvasion„ÄëI tried singing ''Alien Alien'' - Tokino Sora „ÄêI tried dancing„Äë',-1,false,true,'2023-05-16 08:40:53.969 +00:00','2023-05-16 08:40:53.969 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c1aebca0cc124990884224bfecf99ad1$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8b22727d-3a74-41c2-b86b-556dd189e6dc): COMMIT;
Executing (d4a21387-e1fa-48d7-a03b-ecae433fe017): COMMIT;
Executing (4c997cae-7d67-46ff-b506-0ab8eed10fce): COMMIT;
Executing (b74b78ea-fcda-4cbe-86ef-2489a4a82e60): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eadf95e81e2d41a798ff46daa74ff96d$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=_VIeV_LZXHM','_VIeV_LZXHM','„ÄêOriginal Animation MV„ÄëUnison„Äêhololive/ÂÆùÈêò„Éû„É™„É≥„Äë',-1,false,true,'2023-05-16 08:40:53.973 +00:00','2023-05-16 08:40:53.973 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eadf95e81e2d41a798ff46daa74ff96d$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=4muYzftomAE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":11}
[39m
Executing (24d3455f-b1f6-4c12-a71a-8b77f61acd68): START TRANSACTION;
Executing (1faeaeb3-98d5-4343-8201-df68cc0d24d8): COMMIT;
Executing (24d3455f-b1f6-4c12-a71a-8b77f61acd68): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=4N_HwrzWCac';
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=3UV8OZj2olg","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":12}
[39m
Executing (f218f1f1-5302-4260-a1cc-14abe25bc2d7): START TRANSACTION;
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=j6P_m6adkgc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":13}
[39m
Executing (3e32562a-5918-4522-ad55-ddf459a323b0): START TRANSACTION;
Executing (b74b78ea-fcda-4cbe-86ef-2489a4a82e60): COMMIT;
Executing (24d3455f-b1f6-4c12-a71a-8b77f61acd68): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_536fa9021a90401dbaa1466b7421ff5e$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=4N_HwrzWCac','4N_HwrzWCac','„ÄêÂºï„ÅçÁ±†„Çä„Åå„Äë„Ç∞„ÉÉ„Éê„Ç§ÂÆ£Ë®ÄÔºèÊπä„ÅÇ„Åè„ÅÇ„ÄêÊ≠å„Å£„Å¶„Åø„Åü„Äë',-1,false,true,'2023-05-16 08:40:53.980 +00:00','2023-05-16 08:40:53.980 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_536fa9021a90401dbaa1466b7421ff5e$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f218f1f1-5302-4260-a1cc-14abe25bc2d7): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=A9HY4DsRTCg';
Executing (3e32562a-5918-4522-ad55-ddf459a323b0): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=tuZty35Fk7M';
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=NT6Pf28eCgQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":14}
[39m
Executing (ee407684-538f-4389-9ce8-63ce6697778d): START TRANSACTION;
Executing (24d3455f-b1f6-4c12-a71a-8b77f61acd68): COMMIT;
Executing (f218f1f1-5302-4260-a1cc-14abe25bc2d7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e7a17f58a3504f549b47718977344a04$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=A9HY4DsRTCg','A9HY4DsRTCg','1st Single „Äê REDHEART „Äë',-1,false,true,'2023-05-16 08:40:53.984 +00:00','2023-05-16 08:40:53.984 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e7a17f58a3504f549b47718977344a04$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3e32562a-5918-4522-ad55-ddf459a323b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_123b2c993c0a45138b0c14aaf47c55fa$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=tuZty35Fk7M','tuZty35Fk7M','ÂπΩÈúäÊù±‰∫¨ / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(cover)',-1,false,true,'2023-05-16 08:40:53.985 +00:00','2023-05-16 08:40:53.985 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_123b2c993c0a45138b0c14aaf47c55fa$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ee407684-538f-4389-9ce8-63ce6697778d): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=M85xU-tbQ6c';
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=_VIeV_LZXHM","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":15}
[39m
Executing (38f1cce1-cd11-419a-946e-d631dbb20bc7): START TRANSACTION;
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=4N_HwrzWCac","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":16}
[39m
Executing (521dc89b-4426-4810-bbff-e8cdc7144dd5): START TRANSACTION;
Executing (f218f1f1-5302-4260-a1cc-14abe25bc2d7): COMMIT;
Executing (3e32562a-5918-4522-ad55-ddf459a323b0): COMMIT;
Executing (ee407684-538f-4389-9ce8-63ce6697778d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dbc0240f91fa4189b1f3b2e6d6369731$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=M85xU-tbQ6c','M85xU-tbQ6c','[ORIGINAL SONG] CapSule - Mori Calliope x ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ',-1,false,true,'2023-05-16 08:40:53.990 +00:00','2023-05-16 08:40:53.990 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dbc0240f91fa4189b1f3b2e6d6369731$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (38f1cce1-cd11-419a-946e-d631dbb20bc7): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=mBuHQeL-OO8';
Executing (521dc89b-4426-4810-bbff-e8cdc7144dd5): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=3cqV5BKJHyk';
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=A9HY4DsRTCg","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":17}
[39m
Executing (8b8e40ad-f4c4-4ee1-9521-1d9da77eafa2): START TRANSACTION;
[95m[5/16/2023, 2:10:53 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=tuZty35Fk7M","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":18}
[39m
Executing (65d6ffbe-d990-42cd-ba86-773d2d9aed1f): START TRANSACTION;
Executing (ee407684-538f-4389-9ce8-63ce6697778d): COMMIT;
Executing (521dc89b-4426-4810-bbff-e8cdc7144dd5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e630092d5366457aa1a9912571693156$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=3cqV5BKJHyk','3cqV5BKJHyk','comet/Hoshimati Suisei',-1,false,true,'2023-05-16 08:40:53.996 +00:00','2023-05-16 08:40:53.996 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e630092d5366457aa1a9912571693156$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8b8e40ad-f4c4-4ee1-9521-1d9da77eafa2): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=4muYzftomAE' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 11 LIMIT 1;
Executing (65d6ffbe-d990-42cd-ba86-773d2d9aed1f): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=3UV8OZj2olg' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 12 LIMIT 1;
Executing (38f1cce1-cd11-419a-946e-d631dbb20bc7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d620f4532a6744bfb2e920eeec16207b$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=mBuHQeL-OO8','mBuHQeL-OO8','TEMPLATE / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:40:53.999 +00:00','2023-05-16 08:40:53.999 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d620f4532a6744bfb2e920eeec16207b$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (521dc89b-4426-4810-bbff-e8cdc7144dd5): COMMIT;
Executing (8b8e40ad-f4c4-4ee1-9521-1d9da77eafa2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_46374f959fed4cefafcd29b9fe116ca6$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('4bebc15e-7bba-49b2-8408-cfa62b024558','https://www.youtube.com/watch?v=4muYzftomAE','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',11,'2023-05-16 08:40:54.000 +00:00','2023-05-16 08:40:54.000 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_46374f959fed4cefafcd29b9fe116ca6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (65d6ffbe-d990-42cd-ba86-773d2d9aed1f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ee5ac5b9a0034ba3b5dcb81449cc6f1d$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('3f6baf34-8bac-4565-ba5e-9eb93d3676f5','https://www.youtube.com/watch?v=3UV8OZj2olg','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',12,'2023-05-16 08:40:54.001 +00:00','2023-05-16 08:40:54.001 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ee5ac5b9a0034ba3b5dcb81449cc6f1d$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:54 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=M85xU-tbQ6c","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":19}
[39m
Executing (efa22a53-8060-4808-92a1-4f07efdc3252): START TRANSACTION;
[95m[5/16/2023, 2:10:54 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=3cqV5BKJHyk","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":20}
[39m
Executing (c4ba34c8-ba9a-4e80-9853-f8ade60438d6): START TRANSACTION;
Executing (8b8e40ad-f4c4-4ee1-9521-1d9da77eafa2): COMMIT;
Executing (38f1cce1-cd11-419a-946e-d631dbb20bc7): COMMIT;
Executing (c4ba34c8-ba9a-4e80-9853-f8ade60438d6): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=NT6Pf28eCgQ' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 14 LIMIT 1;
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"4bebc15e-7bba-49b2-8408-cfa62b024558","video_url":"https://www.youtube.com/watch?v=4muYzftomAE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":11,"updatedAt":"2023-05-16T08:40:54.000Z","createdAt":"2023-05-16T08:40:54.000Z"},true]
[39m
Executing (1c5ed704-01ef-4c0c-948b-2b798405c5c1): START TRANSACTION;
Executing (efa22a53-8060-4808-92a1-4f07efdc3252): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=j6P_m6adkgc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 13 LIMIT 1;
Executing (65d6ffbe-d990-42cd-ba86-773d2d9aed1f): COMMIT;
Executing (c4ba34c8-ba9a-4e80-9853-f8ade60438d6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6f44e68b034c4409a8c6a7f50c1a9042$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('f1585ea3-7a19-44a1-abc3-67e2ff9092b0','https://www.youtube.com/watch?v=NT6Pf28eCgQ','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',14,'2023-05-16 08:40:54.009 +00:00','2023-05-16 08:40:54.009 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6f44e68b034c4409a8c6a7f50c1a9042$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1c5ed704-01ef-4c0c-948b-2b798405c5c1): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=_VIeV_LZXHM' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 15 LIMIT 1;
Executing (efa22a53-8060-4808-92a1-4f07efdc3252): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5bad92d2899047579ea71a864d619a39$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('827f03fd-662e-4858-9cef-9a11be9902e0','https://www.youtube.com/watch?v=j6P_m6adkgc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',13,'2023-05-16 08:40:54.012 +00:00','2023-05-16 08:40:54.012 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5bad92d2899047579ea71a864d619a39$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:54 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=mBuHQeL-OO8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":21}
[39m
Executing (1d95fea0-34f7-4da9-a44e-ab679a72b918): START TRANSACTION;
Executing (c4ba34c8-ba9a-4e80-9853-f8ade60438d6): COMMIT;
Executing (1c5ed704-01ef-4c0c-948b-2b798405c5c1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d7402a28c5084c9182a41473e9ad0a0c$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('d06eeec8-5dfd-4233-81ce-a79069034f8f','https://www.youtube.com/watch?v=_VIeV_LZXHM','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',15,'2023-05-16 08:40:54.014 +00:00','2023-05-16 08:40:54.014 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d7402a28c5084c9182a41473e9ad0a0c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"3f6baf34-8bac-4565-ba5e-9eb93d3676f5","video_url":"https://www.youtube.com/watch?v=3UV8OZj2olg","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":12,"updatedAt":"2023-05-16T08:40:54.001Z","createdAt":"2023-05-16T08:40:54.001Z"},true]
[39m
Executing (31cbb4b6-ea63-46e8-922b-723e0c711a11): START TRANSACTION;
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"f1585ea3-7a19-44a1-abc3-67e2ff9092b0","video_url":"https://www.youtube.com/watch?v=NT6Pf28eCgQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":14,"updatedAt":"2023-05-16T08:40:54.009Z","createdAt":"2023-05-16T08:40:54.009Z"},true]
[39m
Executing (1676f9d4-731c-4c6b-a459-ef6804f1151f): START TRANSACTION;
Executing (1c5ed704-01ef-4c0c-948b-2b798405c5c1): COMMIT;
Executing (31cbb4b6-ea63-46e8-922b-723e0c711a11): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=A9HY4DsRTCg' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 17 LIMIT 1;
Executing (1d95fea0-34f7-4da9-a44e-ab679a72b918): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=4N_HwrzWCac' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 16 LIMIT 1;
Executing (efa22a53-8060-4808-92a1-4f07efdc3252): COMMIT;
Executing (1676f9d4-731c-4c6b-a459-ef6804f1151f): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=tuZty35Fk7M' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 18 LIMIT 1;
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"d06eeec8-5dfd-4233-81ce-a79069034f8f","video_url":"https://www.youtube.com/watch?v=_VIeV_LZXHM","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":15,"updatedAt":"2023-05-16T08:40:54.014Z","createdAt":"2023-05-16T08:40:54.014Z"},true]
[39m
Executing (3d38faf1-d065-4660-84e5-1e5070adef1c): START TRANSACTION;
Executing (31cbb4b6-ea63-46e8-922b-723e0c711a11): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9b139a62aecf47e1929b6ed3d59a347b$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('3d19c7d8-74a7-4907-8f76-4676025b502f','https://www.youtube.com/watch?v=A9HY4DsRTCg','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',17,'2023-05-16 08:40:54.020 +00:00','2023-05-16 08:40:54.020 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9b139a62aecf47e1929b6ed3d59a347b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1d95fea0-34f7-4da9-a44e-ab679a72b918): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_119ae8f8f47442418f190ea9a102d850$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('dab5ecba-7ba0-41de-891e-b4924d182aec','https://www.youtube.com/watch?v=4N_HwrzWCac','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',16,'2023-05-16 08:40:54.021 +00:00','2023-05-16 08:40:54.021 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_119ae8f8f47442418f190ea9a102d850$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1676f9d4-731c-4c6b-a459-ef6804f1151f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_30d410423e95449196dd6a3b86d16cc9$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('5d54dfdf-7b11-480e-b755-e9f617955688','https://www.youtube.com/watch?v=tuZty35Fk7M','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',18,'2023-05-16 08:40:54.023 +00:00','2023-05-16 08:40:54.023 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_30d410423e95449196dd6a3b86d16cc9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3d38faf1-d065-4660-84e5-1e5070adef1c): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=M85xU-tbQ6c' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 19 LIMIT 1;
Executing (31cbb4b6-ea63-46e8-922b-723e0c711a11): COMMIT;
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"827f03fd-662e-4858-9cef-9a11be9902e0","video_url":"https://www.youtube.com/watch?v=j6P_m6adkgc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":13,"updatedAt":"2023-05-16T08:40:54.012Z","createdAt":"2023-05-16T08:40:54.012Z"},true]
[39m
Executing (7db8de44-117f-4013-b817-0bb519701b12): START TRANSACTION;
Executing (1676f9d4-731c-4c6b-a459-ef6804f1151f): COMMIT;
Executing (3d38faf1-d065-4660-84e5-1e5070adef1c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2a5fab4f416444d08176eda316c48411$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('074a33eb-6535-4317-be7d-2383f6a6a051','https://www.youtube.com/watch?v=M85xU-tbQ6c','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',19,'2023-05-16 08:40:54.029 +00:00','2023-05-16 08:40:54.029 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2a5fab4f416444d08176eda316c48411$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"3d19c7d8-74a7-4907-8f76-4676025b502f","video_url":"https://www.youtube.com/watch?v=A9HY4DsRTCg","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":17,"updatedAt":"2023-05-16T08:40:54.020Z","createdAt":"2023-05-16T08:40:54.020Z"},true]
[39m
Executing (2ff3bcc6-f8b8-4c07-9aff-b84ce36fd0b1): START TRANSACTION;
Executing (7db8de44-117f-4013-b817-0bb519701b12): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=3cqV5BKJHyk' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 20 LIMIT 1;
Executing (1d95fea0-34f7-4da9-a44e-ab679a72b918): COMMIT;
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"5d54dfdf-7b11-480e-b755-e9f617955688","video_url":"https://www.youtube.com/watch?v=tuZty35Fk7M","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":18,"updatedAt":"2023-05-16T08:40:54.023Z","createdAt":"2023-05-16T08:40:54.023Z"},true]
[39m
Executing (3d38faf1-d065-4660-84e5-1e5070adef1c): COMMIT;
Executing (2ff3bcc6-f8b8-4c07-9aff-b84ce36fd0b1): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=mBuHQeL-OO8' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 21 LIMIT 1;
Executing (7db8de44-117f-4013-b817-0bb519701b12): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_666c6ab8054d45c99c8dc17a00408368$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('a65e5262-d790-4bee-8368-a7dccd10434a','https://www.youtube.com/watch?v=3cqV5BKJHyk','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',20,'2023-05-16 08:40:54.034 +00:00','2023-05-16 08:40:54.034 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_666c6ab8054d45c99c8dc17a00408368$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"074a33eb-6535-4317-be7d-2383f6a6a051","video_url":"https://www.youtube.com/watch?v=M85xU-tbQ6c","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":19,"updatedAt":"2023-05-16T08:40:54.029Z","createdAt":"2023-05-16T08:40:54.029Z"},true]
[39m
Executing (2ff3bcc6-f8b8-4c07-9aff-b84ce36fd0b1): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0b85cbfa940849d5a0ba9830aa0445d3$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('e6c5d79e-7206-44ff-b0ee-844e763f2d1c','https://www.youtube.com/watch?v=mBuHQeL-OO8','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',21,'2023-05-16 08:40:54.035 +00:00','2023-05-16 08:40:54.035 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0b85cbfa940849d5a0ba9830aa0445d3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"dab5ecba-7ba0-41de-891e-b4924d182aec","video_url":"https://www.youtube.com/watch?v=4N_HwrzWCac","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":16,"updatedAt":"2023-05-16T08:40:54.021Z","createdAt":"2023-05-16T08:40:54.021Z"},true]
[39m
Executing (7db8de44-117f-4013-b817-0bb519701b12): COMMIT;
Executing (2ff3bcc6-f8b8-4c07-9aff-b84ce36fd0b1): COMMIT;
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"a65e5262-d790-4bee-8368-a7dccd10434a","video_url":"https://www.youtube.com/watch?v=3cqV5BKJHyk","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":20,"updatedAt":"2023-05-16T08:40:54.034Z","createdAt":"2023-05-16T08:40:54.034Z"},true]
[39m
[95m[5/16/2023, 2:10:54 PM] DEBUG: [{"id":"e6c5d79e-7206-44ff-b0ee-844e763f2d1c","video_url":"https://www.youtube.com/watch?v=mBuHQeL-OO8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":21,"updatedAt":"2023-05-16T08:40:54.035Z","createdAt":"2023-05-16T08:40:54.035Z"},true]
[39m
[96m[5/16/2023, 2:10:54 PM] TRACE: list_background: URL: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, Chunk: 11, Start: 23, Stop: 33
[39m
[96m[5/16/2023, 2:10:57 PM] TRACE: list_spawner: Start: 23, Stop: 33, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:10:59 PM] TRACE: process_response: Index: 21, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (e1891b82-a5a4-4e67-ad76-eba35737e8d7): START TRANSACTION;
Executing (4035efaf-c091-4e2d-8a63-a5734c71aaaf): START TRANSACTION;
Executing (0cdd1aa1-12ab-48b3-80ec-792f6a783bb3): START TRANSACTION;
Executing (9600ab76-ee60-433f-96cb-1a0b038b9a71): START TRANSACTION;
Executing (f8279ab6-596e-4327-8099-492d911ed35b): START TRANSACTION;
Executing (e1891b82-a5a4-4e67-ad76-eba35737e8d7): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=7wbd6ffvXm8';
Executing (4035efaf-c091-4e2d-8a63-a5734c71aaaf): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=ZfDYRy17CBY';
Executing (0cdd1aa1-12ab-48b3-80ec-792f6a783bb3): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=IqT6cHCT1TE';
Executing (9600ab76-ee60-433f-96cb-1a0b038b9a71): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=wHw3jSvZxNI';
Executing (f8279ab6-596e-4327-8099-492d911ed35b): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=K7FqZJS-ZwA';
Executing (e1891b82-a5a4-4e67-ad76-eba35737e8d7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d18a395ae03d4894884f047b39db9b54$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=7wbd6ffvXm8','7wbd6ffvXm8','Cry Baby / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(Cover)',-1,false,true,'2023-05-16 08:40:59.746 +00:00','2023-05-16 08:40:59.746 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d18a395ae03d4894884f047b39db9b54$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (4035efaf-c091-4e2d-8a63-a5734c71aaaf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_87bbddf0c9de4bbb9323556b12cd1a78$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=ZfDYRy17CBY','ZfDYRy17CBY','Bluerose / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:40:59.747 +00:00','2023-05-16 08:40:59.747 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_87bbddf0c9de4bbb9323556b12cd1a78$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0cdd1aa1-12ab-48b3-80ec-792f6a783bb3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_383dcfca0a3442e68c7c31c01715cf70$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=IqT6cHCT1TE','IqT6cHCT1TE','ÈßÜ„Åë„Çç / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:40:59.748 +00:00','2023-05-16 08:40:59.748 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_383dcfca0a3442e68c7c31c01715cf70$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9600ab76-ee60-433f-96cb-1a0b038b9a71): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4a7ef4baeed14530842ebd2e84e6fdae$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=wHw3jSvZxNI','wHw3jSvZxNI','„ÄêMMDÂÖ¨Èñã„ÄëÂ§™ÈôΩÁ≥ª„Éá„Çπ„Ç≥/„Å®„Åç„ÅÆ„Åù„Çâ„ÄêÊ≠å„Å£„Å¶MMD„ÅßË∏ä„Å£„Å¶„Åø„Åü„Äë',-1,false,true,'2023-05-16 08:40:59.749 +00:00','2023-05-16 08:40:59.749 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4a7ef4baeed14530842ebd2e84e6fdae$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e1891b82-a5a4-4e67-ad76-eba35737e8d7): COMMIT;
Executing (4035efaf-c091-4e2d-8a63-a5734c71aaaf): COMMIT;
Executing (0cdd1aa1-12ab-48b3-80ec-792f6a783bb3): COMMIT;
Executing (f8279ab6-596e-4327-8099-492d911ed35b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_eb17b57e5a1b45948956afc8def5e8f1$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=K7FqZJS-ZwA','K7FqZJS-ZwA','„ÄêTokino Sora & Roboco-san„ÄëRemote Controller„ÄêWe tried to sing„Äë',-1,false,true,'2023-05-16 08:40:59.752 +00:00','2023-05-16 08:40:59.752 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_eb17b57e5a1b45948956afc8def5e8f1$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9600ab76-ee60-433f-96cb-1a0b038b9a71): COMMIT;
Executing (f8279ab6-596e-4327-8099-492d911ed35b): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=7wbd6ffvXm8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":22}
[39m
Executing (ca531583-57aa-4042-bc65-a2e9eb0781fa): START TRANSACTION;
Executing (ca531583-57aa-4042-bc65-a2e9eb0781fa): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=u_hUpHUTJwQ';
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=IqT6cHCT1TE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":23}
[39m
Executing (ea73e96e-d932-44c0-a1de-4ed636f4a49c): START TRANSACTION;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=wHw3jSvZxNI","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":24}
[39m
Executing (fa9f481a-1f79-4c26-9212-cba910f3eaab): START TRANSACTION;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=ZfDYRy17CBY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":25}
[39m
Executing (8f08b25f-2c66-40c3-a67d-8469ad37a9da): START TRANSACTION;
Executing (ea73e96e-d932-44c0-a1de-4ed636f4a49c): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=na6bysYNuS0';
Executing (fa9f481a-1f79-4c26-9212-cba910f3eaab): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=4w3zoAbxkbo';
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=K7FqZJS-ZwA","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":26}
[39m
Executing (2249d19e-0d80-42bc-ab72-8388019c874f): START TRANSACTION;
Executing (ca531583-57aa-4042-bc65-a2e9eb0781fa): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d81e49d32b414784be0b5b07b6c4a58b$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=u_hUpHUTJwQ','u_hUpHUTJwQ','„Äêoriginal animation MV„Äë„Éû„É™„É≥Âá∫Ëà™ÔºÅÔºÅ„Äêhololive/ÂÆùÈêò„Éû„É™„É≥„Äë',-1,false,true,'2023-05-16 08:40:59.760 +00:00','2023-05-16 08:40:59.760 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d81e49d32b414784be0b5b07b6c4a58b$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ea73e96e-d932-44c0-a1de-4ed636f4a49c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1669d4c5b9b94769bd535dc23d07b5d6$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=na6bysYNuS0','na6bysYNuS0','„ÄêORIGINAL MV„ÄëPLAY DICE! || HAKOS BAELZ',-1,false,true,'2023-05-16 08:40:59.762 +00:00','2023-05-16 08:40:59.762 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1669d4c5b9b94769bd535dc23d07b5d6$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fa9f481a-1f79-4c26-9212-cba910f3eaab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2de34698cc3c493ba4dd313b9dec886c$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=4w3zoAbxkbo','4w3zoAbxkbo','„ÄêCover/Ê≠å„Å£„Å¶„Åø„Åü„ÄëÂ®ÅÈ¢®Â†Ç„ÄÖ„Äê„Å®„Åç„ÅÆ„Åù„Çâ/AZKi/ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ/Mori Calliope/IRyS„Äë',-1,false,true,'2023-05-16 08:40:59.763 +00:00','2023-05-16 08:40:59.763 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2de34698cc3c493ba4dd313b9dec886c$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2249d19e-0d80-42bc-ab72-8388019c874f): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=9RBY7u5qas8';
Executing (8f08b25f-2c66-40c3-a67d-8469ad37a9da): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=8ZdLXELdF9Q';
Executing (ea73e96e-d932-44c0-a1de-4ed636f4a49c): COMMIT;
Executing (fa9f481a-1f79-4c26-9212-cba910f3eaab): COMMIT;
Executing (2249d19e-0d80-42bc-ab72-8388019c874f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_207f2e50198b4f6ba71f91f76a6ab2a0$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=9RBY7u5qas8','9RBY7u5qas8','KING/Â∏∏Èóá„Éà„ÉØ(cover)',-1,false,true,'2023-05-16 08:40:59.767 +00:00','2023-05-16 08:40:59.767 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_207f2e50198b4f6ba71f91f76a6ab2a0$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ca531583-57aa-4042-bc65-a2e9eb0781fa): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=na6bysYNuS0","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":27}
[39m
Executing (02deba2b-5028-4390-af0e-93e13cda2009): START TRANSACTION;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=4w3zoAbxkbo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":28}
[39m
Executing (878b3cf0-caa5-419e-9fb4-5c0ecc6a1cf3): START TRANSACTION;
Executing (8f08b25f-2c66-40c3-a67d-8469ad37a9da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4b0c367438bf4a7f8a498b2f8241a7da$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=8ZdLXELdF9Q','8ZdLXELdF9Q','„ÄéVIOLET„Äè - Ninomae Ina''nis',-1,false,true,'2023-05-16 08:40:59.770 +00:00','2023-05-16 08:40:59.770 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4b0c367438bf4a7f8a498b2f8241a7da$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (02deba2b-5028-4390-af0e-93e13cda2009): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=Rc_-keez4xs';
Executing (878b3cf0-caa5-419e-9fb4-5c0ecc6a1cf3): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=7wbd6ffvXm8' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 22 LIMIT 1;
Executing (2249d19e-0d80-42bc-ab72-8388019c874f): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=u_hUpHUTJwQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":29}
[39m
Executing (290a7a00-8a82-4ff8-92d1-8ad1c3451334): START TRANSACTION;
Executing (02deba2b-5028-4390-af0e-93e13cda2009): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e72f828c039c477fbec22e4df3628053$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=Rc_-keez4xs','Rc_-keez4xs','„Éà„É™„Ç≥„É≠„Éº„Ç∏„É• / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(cover)',-1,false,true,'2023-05-16 08:40:59.774 +00:00','2023-05-16 08:40:59.774 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e72f828c039c477fbec22e4df3628053$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (878b3cf0-caa5-419e-9fb4-5c0ecc6a1cf3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e77b3a6846da46ccb3a33e2ccbb5140e$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('057d4d69-0505-4b22-97b9-1fb408243c35','https://www.youtube.com/watch?v=7wbd6ffvXm8','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',22,'2023-05-16 08:40:59.775 +00:00','2023-05-16 08:40:59.775 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e77b3a6846da46ccb3a33e2ccbb5140e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8f08b25f-2c66-40c3-a67d-8469ad37a9da): COMMIT;
Executing (02deba2b-5028-4390-af0e-93e13cda2009): COMMIT;
Executing (290a7a00-8a82-4ff8-92d1-8ad1c3451334): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=IqT6cHCT1TE' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 23 LIMIT 1;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=9RBY7u5qas8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":30}
[39m
Executing (c61f502c-3278-488d-b1c6-240e94a96416): START TRANSACTION;
Executing (290a7a00-8a82-4ff8-92d1-8ad1c3451334): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2efe2be65c264b51a73733681407bb8e$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('6146775c-584a-4546-9343-6b5c04fa5a00','https://www.youtube.com/watch?v=IqT6cHCT1TE','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',23,'2023-05-16 08:40:59.781 +00:00','2023-05-16 08:40:59.781 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2efe2be65c264b51a73733681407bb8e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (878b3cf0-caa5-419e-9fb4-5c0ecc6a1cf3): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=8ZdLXELdF9Q","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":31}
[39m
Executing (1262cfe6-3a78-4003-abd8-5cec6d92a842): START TRANSACTION;
Executing (290a7a00-8a82-4ff8-92d1-8ad1c3451334): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"057d4d69-0505-4b22-97b9-1fb408243c35","video_url":"https://www.youtube.com/watch?v=7wbd6ffvXm8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":22,"updatedAt":"2023-05-16T08:40:59.775Z","createdAt":"2023-05-16T08:40:59.775Z"},true]
[39m
Executing (54c4665a-9e52-470d-8026-f8a38fea2d5e): START TRANSACTION;
Executing (1262cfe6-3a78-4003-abd8-5cec6d92a842): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=ZfDYRy17CBY' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 25 LIMIT 1;
Executing (c61f502c-3278-488d-b1c6-240e94a96416): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=wHw3jSvZxNI' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 24 LIMIT 1;
[95m[5/16/2023, 2:10:59 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=Rc_-keez4xs","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":32}
[39m
Executing (e7412cc0-6d70-4900-8695-1b4a415d49ed): START TRANSACTION;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"6146775c-584a-4546-9343-6b5c04fa5a00","video_url":"https://www.youtube.com/watch?v=IqT6cHCT1TE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":23,"updatedAt":"2023-05-16T08:40:59.781Z","createdAt":"2023-05-16T08:40:59.781Z"},true]
[39m
Executing (b5b39061-c544-4215-ac10-da600b71ee42): START TRANSACTION;
Executing (54c4665a-9e52-470d-8026-f8a38fea2d5e): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=K7FqZJS-ZwA' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 26 LIMIT 1;
Executing (1262cfe6-3a78-4003-abd8-5cec6d92a842): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1a232d2b59464db3b43a620cf845d6c2$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('75b401ba-94df-4676-8426-45a5beafb6f5','https://www.youtube.com/watch?v=ZfDYRy17CBY','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',25,'2023-05-16 08:40:59.787 +00:00','2023-05-16 08:40:59.787 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1a232d2b59464db3b43a620cf845d6c2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (c61f502c-3278-488d-b1c6-240e94a96416): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5dd3ea9692734d23ae1d0ae9e01a91c8$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('e528162d-b8c9-4102-b82b-a7894df65b9d','https://www.youtube.com/watch?v=wHw3jSvZxNI','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',24,'2023-05-16 08:40:59.787 +00:00','2023-05-16 08:40:59.787 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5dd3ea9692734d23ae1d0ae9e01a91c8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e7412cc0-6d70-4900-8695-1b4a415d49ed): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=na6bysYNuS0' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 27 LIMIT 1;
Executing (b5b39061-c544-4215-ac10-da600b71ee42): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=4w3zoAbxkbo' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 28 LIMIT 1;
Executing (54c4665a-9e52-470d-8026-f8a38fea2d5e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b033229e62304a7ebc613ae3edf3e63c$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('eeedc155-321c-4c4d-a11f-c8d462642cbd','https://www.youtube.com/watch?v=K7FqZJS-ZwA','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',26,'2023-05-16 08:40:59.790 +00:00','2023-05-16 08:40:59.790 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b033229e62304a7ebc613ae3edf3e63c$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1262cfe6-3a78-4003-abd8-5cec6d92a842): COMMIT;
Executing (c61f502c-3278-488d-b1c6-240e94a96416): COMMIT;
Executing (b5b39061-c544-4215-ac10-da600b71ee42): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0f0d27ce9406456894350f0c1da62668$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('836d3c34-c8a2-4016-b05a-8effa5750eaa','https://www.youtube.com/watch?v=4w3zoAbxkbo','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',28,'2023-05-16 08:40:59.794 +00:00','2023-05-16 08:40:59.794 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0f0d27ce9406456894350f0c1da62668$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (54c4665a-9e52-470d-8026-f8a38fea2d5e): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"75b401ba-94df-4676-8426-45a5beafb6f5","video_url":"https://www.youtube.com/watch?v=ZfDYRy17CBY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":25,"updatedAt":"2023-05-16T08:40:59.787Z","createdAt":"2023-05-16T08:40:59.787Z"},true]
[39m
Executing (9bbf56cf-7bc9-4fd2-ad8b-17fa6caa6ad0): START TRANSACTION;
Executing (e7412cc0-6d70-4900-8695-1b4a415d49ed): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cf72f989d93f4bacaf54ac5a0fde0bec$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('7b4e85a8-fa8f-400d-97f0-f0a0b3accc42','https://www.youtube.com/watch?v=na6bysYNuS0','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',27,'2023-05-16 08:40:59.797 +00:00','2023-05-16 08:40:59.797 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cf72f989d93f4bacaf54ac5a0fde0bec$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5b39061-c544-4215-ac10-da600b71ee42): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"eeedc155-321c-4c4d-a11f-c8d462642cbd","video_url":"https://www.youtube.com/watch?v=K7FqZJS-ZwA","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":26,"updatedAt":"2023-05-16T08:40:59.790Z","createdAt":"2023-05-16T08:40:59.790Z"},true]
[39m
Executing (dc9be480-ff89-4c04-b5ef-c786cefb6995): START TRANSACTION;
Executing (9bbf56cf-7bc9-4fd2-ad8b-17fa6caa6ad0): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=u_hUpHUTJwQ' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 29 LIMIT 1;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"e528162d-b8c9-4102-b82b-a7894df65b9d","video_url":"https://www.youtube.com/watch?v=wHw3jSvZxNI","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":24,"updatedAt":"2023-05-16T08:40:59.787Z","createdAt":"2023-05-16T08:40:59.787Z"},true]
[39m
Executing (eebd579d-9854-4b56-86c7-f531ef2138b0): START TRANSACTION;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"836d3c34-c8a2-4016-b05a-8effa5750eaa","video_url":"https://www.youtube.com/watch?v=4w3zoAbxkbo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":28,"updatedAt":"2023-05-16T08:40:59.794Z","createdAt":"2023-05-16T08:40:59.794Z"},true]
[39m
Executing (9af4f612-09c7-4632-93b3-8949c068cf06): START TRANSACTION;
Executing (dc9be480-ff89-4c04-b5ef-c786cefb6995): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=9RBY7u5qas8' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 30 LIMIT 1;
Executing (9bbf56cf-7bc9-4fd2-ad8b-17fa6caa6ad0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3061bf1bf0ee4642b5a0e93c15b500a2$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('3d868304-96b5-44c4-9b55-5d78fb41b2f9','https://www.youtube.com/watch?v=u_hUpHUTJwQ','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',29,'2023-05-16 08:40:59.803 +00:00','2023-05-16 08:40:59.803 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3061bf1bf0ee4642b5a0e93c15b500a2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eebd579d-9854-4b56-86c7-f531ef2138b0): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=8ZdLXELdF9Q' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 31 LIMIT 1;
Executing (e7412cc0-6d70-4900-8695-1b4a415d49ed): COMMIT;
Executing (9af4f612-09c7-4632-93b3-8949c068cf06): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=Rc_-keez4xs' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 32 LIMIT 1;
Executing (dc9be480-ff89-4c04-b5ef-c786cefb6995): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_44b9872b203e4a158d7bb993171289df$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('d02cb50c-8720-4621-812f-01218c39db51','https://www.youtube.com/watch?v=9RBY7u5qas8','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',30,'2023-05-16 08:40:59.806 +00:00','2023-05-16 08:40:59.806 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_44b9872b203e4a158d7bb993171289df$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9bbf56cf-7bc9-4fd2-ad8b-17fa6caa6ad0): COMMIT;
Executing (eebd579d-9854-4b56-86c7-f531ef2138b0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5f38ef7321c940c491d37ff97da13e39$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('bdf07d3a-228d-4ece-bff7-c614e9786c07','https://www.youtube.com/watch?v=8ZdLXELdF9Q','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',31,'2023-05-16 08:40:59.808 +00:00','2023-05-16 08:40:59.808 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5f38ef7321c940c491d37ff97da13e39$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9af4f612-09c7-4632-93b3-8949c068cf06): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8c810aad66a148009404a45ef50e6a77$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('add67258-e279-4c50-88fe-cbd39a57d326','https://www.youtube.com/watch?v=Rc_-keez4xs','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',32,'2023-05-16 08:40:59.810 +00:00','2023-05-16 08:40:59.810 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8c810aad66a148009404a45ef50e6a77$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (dc9be480-ff89-4c04-b5ef-c786cefb6995): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"7b4e85a8-fa8f-400d-97f0-f0a0b3accc42","video_url":"https://www.youtube.com/watch?v=na6bysYNuS0","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":27,"updatedAt":"2023-05-16T08:40:59.797Z","createdAt":"2023-05-16T08:40:59.797Z"},true]
[39m
Executing (9af4f612-09c7-4632-93b3-8949c068cf06): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"d02cb50c-8720-4621-812f-01218c39db51","video_url":"https://www.youtube.com/watch?v=9RBY7u5qas8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":30,"updatedAt":"2023-05-16T08:40:59.806Z","createdAt":"2023-05-16T08:40:59.806Z"},true]
[39m
Executing (eebd579d-9854-4b56-86c7-f531ef2138b0): COMMIT;
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"3d868304-96b5-44c4-9b55-5d78fb41b2f9","video_url":"https://www.youtube.com/watch?v=u_hUpHUTJwQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":29,"updatedAt":"2023-05-16T08:40:59.803Z","createdAt":"2023-05-16T08:40:59.803Z"},true]
[39m
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"add67258-e279-4c50-88fe-cbd39a57d326","video_url":"https://www.youtube.com/watch?v=Rc_-keez4xs","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":32,"updatedAt":"2023-05-16T08:40:59.810Z","createdAt":"2023-05-16T08:40:59.810Z"},true]
[39m
[95m[5/16/2023, 2:10:59 PM] DEBUG: [{"id":"bdf07d3a-228d-4ece-bff7-c614e9786c07","video_url":"https://www.youtube.com/watch?v=8ZdLXELdF9Q","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":31,"updatedAt":"2023-05-16T08:40:59.808Z","createdAt":"2023-05-16T08:40:59.808Z"},true]
[39m
[96m[5/16/2023, 2:10:59 PM] TRACE: list_background: URL: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, Chunk: 11, Start: 34, Stop: 44
[39m
[96m[5/16/2023, 2:11:02 PM] TRACE: list_spawner: Start: 34, Stop: 44, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:11:10 PM] TRACE: process_response: Index: 32, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (f589b111-7af9-41e8-ada6-fda3c726ef57): START TRANSACTION;
Executing (3d1442db-28c0-49a4-983e-7da01f8cf455): START TRANSACTION;
Executing (f589b111-7af9-41e8-ada6-fda3c726ef57): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=QI96hnhcr2E';
Executing (74df5f6e-ed20-4007-b7e1-7c85ccad6734): START TRANSACTION;
Executing (3d1442db-28c0-49a4-983e-7da01f8cf455): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=Mm87JgTx2Ao';
Executing (74df5f6e-ed20-4007-b7e1-7c85ccad6734): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=UXUn_ZqeM4Q';
Executing (bd4d3d39-c4a5-4e7e-8f70-f46741cd2ed9): START TRANSACTION;
Executing (e49ef999-c214-4ed7-915e-a010a2e932d0): START TRANSACTION;
Executing (f589b111-7af9-41e8-ada6-fda3c726ef57): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f38815bcac874580aeadc434d2e11f32$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=QI96hnhcr2E','QI96hnhcr2E','DO U - Takanashi Kiara (Official Music Video)',-1,false,true,'2023-05-16 08:41:10.947 +00:00','2023-05-16 08:41:10.947 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f38815bcac874580aeadc434d2e11f32$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e49ef999-c214-4ed7-915e-a010a2e932d0): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=7P5oggg7aSE';
Executing (74df5f6e-ed20-4007-b7e1-7c85ccad6734): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a10cfe781e8d4108bbd8189cbd894590$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=UXUn_ZqeM4Q','UXUn_ZqeM4Q','„ÄêÔºíÂë®Âπ¥Ë®òÂøµ„Äë„ÉØ„É≥„É´„Éº„É†„Ç∑„É•„Ç¨„Éº„É©„Ç§„ÉïÔºèÊπä„ÅÇ„Åè„ÅÇ„ÄêÊ≠å„Å£„Å¶„Åø„Åü„Äë',-1,false,true,'2023-05-16 08:41:10.952 +00:00','2023-05-16 08:41:10.952 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a10cfe781e8d4108bbd8189cbd894590$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bd4d3d39-c4a5-4e7e-8f70-f46741cd2ed9): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=8Jz0hUbu1mw';
Executing (3d1442db-28c0-49a4-983e-7da01f8cf455): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b4c0895abc0e4e9c9ad9c9c49926aa71$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=Mm87JgTx2Ao','Mm87JgTx2Ao','„ÄêDanceMV„ÄëËá™ÂàÜÂãùÊâãDazzling / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:41:10.954 +00:00','2023-05-16 08:41:10.954 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b4c0895abc0e4e9c9ad9c9c49926aa71$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e49ef999-c214-4ed7-915e-a010a2e932d0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dcb47363e0f442bd803472967383d5c0$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=7P5oggg7aSE','7P5oggg7aSE','„Äêoriginal„Äë„Å≠„Å≠„Å≠„Å≠„Å≠„Å≠„Å≠„Å≠!Â§ßÁàÜËµ∞„Äê„Éõ„É≠„É©„Ç§„Éñ/Ê°ÉÈà¥„Å≠„Å≠„Äë',-1,false,true,'2023-05-16 08:41:10.955 +00:00','2023-05-16 08:41:10.955 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dcb47363e0f442bd803472967383d5c0$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f589b111-7af9-41e8-ada6-fda3c726ef57): COMMIT;
Executing (bd4d3d39-c4a5-4e7e-8f70-f46741cd2ed9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0e582ec7db5e418d91eb5e934b5e7391$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=8Jz0hUbu1mw','8Jz0hUbu1mw','„ÄêCOVER„ÄëTHE BADDEST - K/DA„ÄêCalli / Moona / Reine / Risu „Äë',-1,false,true,'2023-05-16 08:41:10.957 +00:00','2023-05-16 08:41:10.957 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0e582ec7db5e418d91eb5e934b5e7391$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (74df5f6e-ed20-4007-b7e1-7c85ccad6734): COMMIT;
Executing (3d1442db-28c0-49a4-983e-7da01f8cf455): COMMIT;
Executing (bd4d3d39-c4a5-4e7e-8f70-f46741cd2ed9): COMMIT;
Executing (e49ef999-c214-4ed7-915e-a010a2e932d0): COMMIT;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=QI96hnhcr2E","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":33}
[39m
Executing (25757b26-f4c4-40d8-9e02-2b4230e6240d): START TRANSACTION;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=UXUn_ZqeM4Q","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":34}
[39m
Executing (bb1f69ba-8107-4198-a7e8-3a18f5c5899a): START TRANSACTION;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=Mm87JgTx2Ao","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":35}
[39m
Executing (1f955a13-8735-46d3-891f-9cb4c6750621): START TRANSACTION;
Executing (bb1f69ba-8107-4198-a7e8-3a18f5c5899a): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=Fwc-LH8IGj8';
Executing (25757b26-f4c4-40d8-9e02-2b4230e6240d): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=irMD1KMIYE4';
Executing (bb1f69ba-8107-4198-a7e8-3a18f5c5899a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_480d438b14a24d2b9b76d0bf2a762dba$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=Fwc-LH8IGj8','Fwc-LH8IGj8','4BLOOD - Takanashi Kiara (SONG COVER)',-1,false,true,'2023-05-16 08:41:10.967 +00:00','2023-05-16 08:41:10.967 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_480d438b14a24d2b9b76d0bf2a762dba$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=8Jz0hUbu1mw","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":36}
[39m
Executing (7eea68fe-1ce0-40dc-af2f-e63f3420725d): START TRANSACTION;
Executing (1f955a13-8735-46d3-891f-9cb4c6750621): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=4uqONJT6G-M';
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=7P5oggg7aSE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":37}
[39m
Executing (05512583-d4e8-44e6-b420-fcf91bdbd77c): START TRANSACTION;
Executing (bb1f69ba-8107-4198-a7e8-3a18f5c5899a): COMMIT;
Executing (7eea68fe-1ce0-40dc-af2f-e63f3420725d): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=-t8Za0T1T8M';
Executing (1f955a13-8735-46d3-891f-9cb4c6750621): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5f41e5457b564f24a3ae9da2cafcf8ac$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=4uqONJT6G-M','4uqONJT6G-M','„Åø„Å°„Å•„Çå / ÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ(official)',-1,false,true,'2023-05-16 08:41:10.973 +00:00','2023-05-16 08:41:10.973 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5f41e5457b564f24a3ae9da2cafcf8ac$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (25757b26-f4c4-40d8-9e02-2b4230e6240d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_40bace849d8d4b149e4bdda10fe27059$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=irMD1KMIYE4','irMD1KMIYE4','Â§¢Ëä±ÁÅ´ / ÁôæÈ¨º„ÅÇ„ÇÑ„ÇÅ original',-1,false,true,'2023-05-16 08:41:10.974 +00:00','2023-05-16 08:41:10.974 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_40bace849d8d4b149e4bdda10fe27059$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=Fwc-LH8IGj8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":38}
[39m
Executing (694933f3-6b17-4da1-b5c3-e3c9cda41989): START TRANSACTION;
Executing (7eea68fe-1ce0-40dc-af2f-e63f3420725d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c83f3f4b69d844d09adeb76bd6a8a4f0$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=-t8Za0T1T8M','-t8Za0T1T8M','„ÄêMV„ÄëHERE COMES HOPE -IRyS„ÄêOriginal Song„Äë',-1,false,true,'2023-05-16 08:41:10.976 +00:00','2023-05-16 08:41:10.976 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c83f3f4b69d844d09adeb76bd6a8a4f0$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05512583-d4e8-44e6-b420-fcf91bdbd77c): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=-omKAd_sbFo';
Executing (694933f3-6b17-4da1-b5c3-e3c9cda41989): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=T3lNQRaqZNs';
Executing (7eea68fe-1ce0-40dc-af2f-e63f3420725d): COMMIT;
Executing (1f955a13-8735-46d3-891f-9cb4c6750621): COMMIT;
Executing (25757b26-f4c4-40d8-9e02-2b4230e6240d): COMMIT;
Executing (694933f3-6b17-4da1-b5c3-e3c9cda41989): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8fc2a1464f794f31aa22532c44eec713$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=T3lNQRaqZNs','T3lNQRaqZNs','„Äê„Å°„Çá„Å£„Å®dark„Å´„Äë„Ç™„Éº„Éà„Éï„Ç°„Ç∏„ÉºÔºàcover)„ÄêÊ≠å„Å£„Å¶„Åø„Åü/„Å®„Åç„ÅÆ„Åù„Çâ„Äë',-1,false,true,'2023-05-16 08:41:10.982 +00:00','2023-05-16 08:41:10.982 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8fc2a1464f794f31aa22532c44eec713$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (05512583-d4e8-44e6-b420-fcf91bdbd77c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_69f681fdbe564c90916ece6d3909d7ea$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=-omKAd_sbFo','-omKAd_sbFo','„ÄêÊ≠å„Å£„Å¶„Åø„Åü„Äë„ÉÅ„É•„Éº„É™„É≥„Ç∞„É©„Éñ feat.Sou / „Éä„Éä„É≤„Ç¢„Ç´„É™„ÄêÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ&ÈüøÊú®„Ç¢„Ç™„Äë',-1,false,true,'2023-05-16 08:41:10.984 +00:00','2023-05-16 08:41:10.984 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_69f681fdbe564c90916ece6d3909d7ea$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (694933f3-6b17-4da1-b5c3-e3c9cda41989): COMMIT;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=4uqONJT6G-M","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":39}
[39m
Executing (e0a7cbd4-6921-4968-9ff8-d3aa0ae11cd3): START TRANSACTION;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=-t8Za0T1T8M","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":40}
[39m
Executing (596b8a54-d2a5-4246-be84-dcaa882035be): START TRANSACTION;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=irMD1KMIYE4","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":41}
[39m
Executing (e962357c-14ff-4f9d-bbcb-8a980fef7fab): START TRANSACTION;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=T3lNQRaqZNs","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":42}
[39m
Executing (710273dc-cdc5-4e09-b9cb-6023eb2c88e2): START TRANSACTION;
Executing (e0a7cbd4-6921-4968-9ff8-d3aa0ae11cd3): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=QI96hnhcr2E' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 33 LIMIT 1;
Executing (596b8a54-d2a5-4246-be84-dcaa882035be): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=UXUn_ZqeM4Q' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 34 LIMIT 1;
Executing (e962357c-14ff-4f9d-bbcb-8a980fef7fab): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=Mm87JgTx2Ao' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 35 LIMIT 1;
Executing (05512583-d4e8-44e6-b420-fcf91bdbd77c): COMMIT;
Executing (710273dc-cdc5-4e09-b9cb-6023eb2c88e2): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=8Jz0hUbu1mw' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 36 LIMIT 1;
Executing (e0a7cbd4-6921-4968-9ff8-d3aa0ae11cd3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4abf545efa01414d8d62fa2210035406$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('a3e77de9-51f2-4ef5-b30c-c133b616ae7b','https://www.youtube.com/watch?v=QI96hnhcr2E','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',33,'2023-05-16 08:41:10.992 +00:00','2023-05-16 08:41:10.992 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4abf545efa01414d8d62fa2210035406$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (596b8a54-d2a5-4246-be84-dcaa882035be): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_be6281b9a7a145518c0c36e27693c0d5$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('c55419ea-3970-4f38-8574-322a417b7f00','https://www.youtube.com/watch?v=UXUn_ZqeM4Q','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',34,'2023-05-16 08:41:10.993 +00:00','2023-05-16 08:41:10.993 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_be6281b9a7a145518c0c36e27693c0d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e962357c-14ff-4f9d-bbcb-8a980fef7fab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f39145b6005a4cec97dd83fe715a0249$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('9bfc922d-014d-4ded-b30d-76ba455f292a','https://www.youtube.com/watch?v=Mm87JgTx2Ao','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',35,'2023-05-16 08:41:10.994 +00:00','2023-05-16 08:41:10.994 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f39145b6005a4cec97dd83fe715a0249$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (710273dc-cdc5-4e09-b9cb-6023eb2c88e2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d7549508acbe4a44be2e3f865733a00a$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('f1b2cf32-2115-45e0-977d-2d382624247c','https://www.youtube.com/watch?v=8Jz0hUbu1mw','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',36,'2023-05-16 08:41:10.995 +00:00','2023-05-16 08:41:10.995 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d7549508acbe4a44be2e3f865733a00a$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e0a7cbd4-6921-4968-9ff8-d3aa0ae11cd3): COMMIT;
[95m[5/16/2023, 2:11:10 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=-omKAd_sbFo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":43}
[39m
Executing (14754f84-2a8d-429c-b96a-db9ad4233861): START TRANSACTION;
Executing (14754f84-2a8d-429c-b96a-db9ad4233861): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=7P5oggg7aSE' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 37 LIMIT 1;
Executing (596b8a54-d2a5-4246-be84-dcaa882035be): COMMIT;
Executing (e962357c-14ff-4f9d-bbcb-8a980fef7fab): COMMIT;
Executing (14754f84-2a8d-429c-b96a-db9ad4233861): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_45711012c74c4441935a3287cebb5fe6$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('df06e371-7316-465f-97fa-b8a61845e388','https://www.youtube.com/watch?v=7P5oggg7aSE','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',37,'2023-05-16 08:41:11.000 +00:00','2023-05-16 08:41:11.000 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_45711012c74c4441935a3287cebb5fe6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"c55419ea-3970-4f38-8574-322a417b7f00","video_url":"https://www.youtube.com/watch?v=UXUn_ZqeM4Q","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":34,"updatedAt":"2023-05-16T08:41:10.993Z","createdAt":"2023-05-16T08:41:10.993Z"},true]
[39m
Executing (2c1f3994-3416-4950-912a-8a1effa8dd21): START TRANSACTION;
Executing (710273dc-cdc5-4e09-b9cb-6023eb2c88e2): COMMIT;
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"a3e77de9-51f2-4ef5-b30c-c133b616ae7b","video_url":"https://www.youtube.com/watch?v=QI96hnhcr2E","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":33,"updatedAt":"2023-05-16T08:41:10.992Z","createdAt":"2023-05-16T08:41:10.992Z"},true]
[39m
Executing (abca0186-3c81-4f80-ba17-b9c36a12e83b): START TRANSACTION;
Executing (14754f84-2a8d-429c-b96a-db9ad4233861): COMMIT;
Executing (2c1f3994-3416-4950-912a-8a1effa8dd21): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=Fwc-LH8IGj8' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 38 LIMIT 1;
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"f1b2cf32-2115-45e0-977d-2d382624247c","video_url":"https://www.youtube.com/watch?v=8Jz0hUbu1mw","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":36,"updatedAt":"2023-05-16T08:41:10.995Z","createdAt":"2023-05-16T08:41:10.995Z"},true]
[39m
Executing (23962d03-1057-4d14-90a0-cbfdc422ad23): START TRANSACTION;
Executing (abca0186-3c81-4f80-ba17-b9c36a12e83b): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=4uqONJT6G-M' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 39 LIMIT 1;
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"9bfc922d-014d-4ded-b30d-76ba455f292a","video_url":"https://www.youtube.com/watch?v=Mm87JgTx2Ao","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":35,"updatedAt":"2023-05-16T08:41:10.994Z","createdAt":"2023-05-16T08:41:10.994Z"},true]
[39m
Executing (5c62de41-6e6d-4b51-8c81-a5012c9c77b9): START TRANSACTION;
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"df06e371-7316-465f-97fa-b8a61845e388","video_url":"https://www.youtube.com/watch?v=7P5oggg7aSE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":37,"updatedAt":"2023-05-16T08:41:11.000Z","createdAt":"2023-05-16T08:41:11.000Z"},true]
[39m
Executing (94c7f799-677a-4bae-9783-8f4eac4cdc67): START TRANSACTION;
Executing (2c1f3994-3416-4950-912a-8a1effa8dd21): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_40cb1241a26a4cf68071bc7151e13adc$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('30994862-cb71-4307-8ae1-f1d79ba1bb33','https://www.youtube.com/watch?v=Fwc-LH8IGj8','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',38,'2023-05-16 08:41:11.008 +00:00','2023-05-16 08:41:11.008 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_40cb1241a26a4cf68071bc7151e13adc$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (23962d03-1057-4d14-90a0-cbfdc422ad23): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=-t8Za0T1T8M' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 40 LIMIT 1;
Executing (abca0186-3c81-4f80-ba17-b9c36a12e83b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b0101ad87cab49389a9ec50b90b2e0b2$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('fe9fb287-9f7c-4ce1-bf9f-984f8426d7a0','https://www.youtube.com/watch?v=4uqONJT6G-M','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',39,'2023-05-16 08:41:11.009 +00:00','2023-05-16 08:41:11.009 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b0101ad87cab49389a9ec50b90b2e0b2$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (94c7f799-677a-4bae-9783-8f4eac4cdc67): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=T3lNQRaqZNs' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 42 LIMIT 1;
Executing (2c1f3994-3416-4950-912a-8a1effa8dd21): COMMIT;
Executing (23962d03-1057-4d14-90a0-cbfdc422ad23): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_46a6457955f04f6a88d7599239938a4e$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('e2fcde1e-c7ef-4e9c-938a-f7ed33b0b72a','https://www.youtube.com/watch?v=-t8Za0T1T8M','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',40,'2023-05-16 08:41:11.011 +00:00','2023-05-16 08:41:11.011 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_46a6457955f04f6a88d7599239938a4e$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5c62de41-6e6d-4b51-8c81-a5012c9c77b9): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=irMD1KMIYE4' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 41 LIMIT 1;
Executing (94c7f799-677a-4bae-9783-8f4eac4cdc67): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e467a3f74bf649cd881cb0b07007f3d1$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('41004ef7-8bb7-4492-bf93-0aadec9fa879','https://www.youtube.com/watch?v=T3lNQRaqZNs','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',42,'2023-05-16 08:41:11.014 +00:00','2023-05-16 08:41:11.014 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e467a3f74bf649cd881cb0b07007f3d1$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"30994862-cb71-4307-8ae1-f1d79ba1bb33","video_url":"https://www.youtube.com/watch?v=Fwc-LH8IGj8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":38,"updatedAt":"2023-05-16T08:41:11.008Z","createdAt":"2023-05-16T08:41:11.008Z"},true]
[39m
Executing (09d2bf85-2bce-4157-930f-d3109778683e): START TRANSACTION;
Executing (23962d03-1057-4d14-90a0-cbfdc422ad23): COMMIT;
Executing (5c62de41-6e6d-4b51-8c81-a5012c9c77b9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_817c6a8672a949218c520186f2e10651$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('952cd582-8c08-4278-baf1-14d54b003813','https://www.youtube.com/watch?v=irMD1KMIYE4','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',41,'2023-05-16 08:41:11.017 +00:00','2023-05-16 08:41:11.017 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_817c6a8672a949218c520186f2e10651$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (abca0186-3c81-4f80-ba17-b9c36a12e83b): COMMIT;
Executing (94c7f799-677a-4bae-9783-8f4eac4cdc67): COMMIT;
Executing (09d2bf85-2bce-4157-930f-d3109778683e): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=-omKAd_sbFo' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 43 LIMIT 1;
Executing (5c62de41-6e6d-4b51-8c81-a5012c9c77b9): COMMIT;
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"e2fcde1e-c7ef-4e9c-938a-f7ed33b0b72a","video_url":"https://www.youtube.com/watch?v=-t8Za0T1T8M","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":40,"updatedAt":"2023-05-16T08:41:11.011Z","createdAt":"2023-05-16T08:41:11.011Z"},true]
[39m
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"fe9fb287-9f7c-4ce1-bf9f-984f8426d7a0","video_url":"https://www.youtube.com/watch?v=4uqONJT6G-M","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":39,"updatedAt":"2023-05-16T08:41:11.009Z","createdAt":"2023-05-16T08:41:11.009Z"},true]
[39m
Executing (09d2bf85-2bce-4157-930f-d3109778683e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fce13323a7f84f3389719fd855dc52ad$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('8b922b27-43b9-4fd6-965f-13882dfddda6','https://www.youtube.com/watch?v=-omKAd_sbFo','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',43,'2023-05-16 08:41:11.022 +00:00','2023-05-16 08:41:11.022 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fce13323a7f84f3389719fd855dc52ad$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"41004ef7-8bb7-4492-bf93-0aadec9fa879","video_url":"https://www.youtube.com/watch?v=T3lNQRaqZNs","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":42,"updatedAt":"2023-05-16T08:41:11.014Z","createdAt":"2023-05-16T08:41:11.014Z"},true]
[39m
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"952cd582-8c08-4278-baf1-14d54b003813","video_url":"https://www.youtube.com/watch?v=irMD1KMIYE4","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":41,"updatedAt":"2023-05-16T08:41:11.017Z","createdAt":"2023-05-16T08:41:11.017Z"},true]
[39m
Executing (09d2bf85-2bce-4157-930f-d3109778683e): COMMIT;
[95m[5/16/2023, 2:11:11 PM] DEBUG: [{"id":"8b922b27-43b9-4fd6-965f-13882dfddda6","video_url":"https://www.youtube.com/watch?v=-omKAd_sbFo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":43,"updatedAt":"2023-05-16T08:41:11.022Z","createdAt":"2023-05-16T08:41:11.022Z"},true]
[39m
[96m[5/16/2023, 2:11:11 PM] TRACE: list_background: URL: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, Chunk: 11, Start: 45, Stop: 55
[39m
[96m[5/16/2023, 2:11:14 PM] TRACE: list_spawner: Start: 45, Stop: 55, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:11:17 PM] TRACE: process_response: Index: 43, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (70a22cbe-5a29-4ad3-8aba-188061d8b50d): START TRANSACTION;
Executing (e005d6ba-5832-4aa3-88ac-ee5fa4e3df9f): START TRANSACTION;
Executing (b451ad8b-e61f-47c4-9be8-c7bfac6b9244): START TRANSACTION;
Executing (bcbb4573-6b4c-4842-bf92-33aa1fde7ef6): START TRANSACTION;
Executing (473d136d-5054-4cfd-ba14-bcc9918235ce): START TRANSACTION;
Executing (70a22cbe-5a29-4ad3-8aba-188061d8b50d): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=V_5mwG9M5Eo';
Executing (e005d6ba-5832-4aa3-88ac-ee5fa4e3df9f): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=TfOx00AOfKo';
Executing (b451ad8b-e61f-47c4-9be8-c7bfac6b9244): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=hAI-qjw6J-A';
Executing (bcbb4573-6b4c-4842-bf92-33aa1fde7ef6): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=o14s6S0k5qw';
Executing (473d136d-5054-4cfd-ba14-bcc9918235ce): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=HM_El_RDfLY';
Executing (70a22cbe-5a29-4ad3-8aba-188061d8b50d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_712964544787422282ac9e5be4c0c6cf$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=V_5mwG9M5Eo','V_5mwG9M5Eo','„ÄêJI BU N WOOOOOO„ÄëCOLORS cover / „ÇÜ„ÇãÊ≠å„Äêhololive/ÂÆùÈêò„Éû„É™„É≥„Äë',-1,false,true,'2023-05-16 08:41:17.327 +00:00','2023-05-16 08:41:17.327 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_712964544787422282ac9e5be4c0c6cf$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e005d6ba-5832-4aa3-88ac-ee5fa4e3df9f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c4e3ff75cba2446ca06278ee1b0f00c7$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=TfOx00AOfKo','TfOx00AOfKo','„É©„Ç§„É°„Ç§ / Â∏∏Èóá„Éà„ÉØ(official)',-1,false,true,'2023-05-16 08:41:17.328 +00:00','2023-05-16 08:41:17.328 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c4e3ff75cba2446ca06278ee1b0f00c7$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b451ad8b-e61f-47c4-9be8-c7bfac6b9244): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a8d019a984914f57be7b89fb563c17b2$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=hAI-qjw6J-A','hAI-qjw6J-A','„Äêholo*27 MV„ÄëÊòüË°ó„Åô„ÅÑ„Åõ„ÅÑ - „Éó„É©„Éç„Çø„É™„Ç¶„É†„Äê„Éõ„É≠„É©„Ç§„Éñ x DECO*27„Äë',-1,false,true,'2023-05-16 08:41:17.329 +00:00','2023-05-16 08:41:17.329 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a8d019a984914f57be7b89fb563c17b2$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bcbb4573-6b4c-4842-bf92-33aa1fde7ef6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_12b95cd1743446e18806c3a10a90cdb9$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=o14s6S0k5qw','o14s6S0k5qw','Will / ÁçÖÁôΩ„Åº„Åü„Çì(cover)',-1,false,true,'2023-05-16 08:41:17.331 +00:00','2023-05-16 08:41:17.331 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_12b95cd1743446e18806c3a10a90cdb9$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (70a22cbe-5a29-4ad3-8aba-188061d8b50d): COMMIT;
Executing (e005d6ba-5832-4aa3-88ac-ee5fa4e3df9f): COMMIT;
Executing (b451ad8b-e61f-47c4-9be8-c7bfac6b9244): COMMIT;
Executing (473d136d-5054-4cfd-ba14-bcc9918235ce): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d752c8e700294eef9802877309c75883$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=HM_El_RDfLY','HM_El_RDfLY','Êµ¥ÊßΩ„Å®„Éç„Ç™„É≥„ÉÜ„Éà„É©/ Â∏∏Èóá„Éà„ÉØ √ó Áå´Âèà„Åä„Åã„ÇÜ(cover)',-1,false,true,'2023-05-16 08:41:17.334 +00:00','2023-05-16 08:41:17.334 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d752c8e700294eef9802877309c75883$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bcbb4573-6b4c-4842-bf92-33aa1fde7ef6): COMMIT;
Executing (473d136d-5054-4cfd-ba14-bcc9918235ce): COMMIT;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=V_5mwG9M5Eo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":44}
[39m
Executing (15b2ded1-60ad-4e70-92af-85f9c280de55): START TRANSACTION;
Executing (15b2ded1-60ad-4e70-92af-85f9c280de55): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=53rJX52p3G8';
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=TfOx00AOfKo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":45}
[39m
Executing (782ceef9-d9dc-41a7-9765-a6fff73b9d93): START TRANSACTION;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=hAI-qjw6J-A","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":46}
[39m
Executing (582867e7-caec-41a1-8666-d01fb95b9180): START TRANSACTION;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=o14s6S0k5qw","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":47}
[39m
Executing (fb13b1a5-9772-4472-86d3-6f3e700110ab): START TRANSACTION;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=HM_El_RDfLY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":48}
[39m
Executing (24484ed6-de80-4e61-a51c-04fd73434305): START TRANSACTION;
Executing (782ceef9-d9dc-41a7-9765-a6fff73b9d93): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=PxiiB40eTWY';
Executing (582867e7-caec-41a1-8666-d01fb95b9180): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=H-Gtd9zzeII';
Executing (fb13b1a5-9772-4472-86d3-6f3e700110ab): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=wZHodOVE0sc';
Executing (15b2ded1-60ad-4e70-92af-85f9c280de55): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_641e7be163b14840b25826f036c856a3$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=53rJX52p3G8','53rJX52p3G8','„ÄêIRyS„ÄëPalette / Â∏∏Èóá„Éà„ÉØ„ÄêCOVER„Äë',-1,false,true,'2023-05-16 08:41:17.343 +00:00','2023-05-16 08:41:17.343 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_641e7be163b14840b25826f036c856a3$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (782ceef9-d9dc-41a7-9765-a6fff73b9d93): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_89dc6e05ae034aaaa5fc53f9b3acea1b$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=PxiiB40eTWY','PxiiB40eTWY','„Ç¢„Ç´„Ç∑„Ç¢„Éª„Ç∑„É≥„Éâ„É≠„Éº„É†ÔºèÁ¥´Âí≤„Ç∑„Ç™„É≥„ÄêGLÊñáÂ∫´„Ç§„É°„Éº„Ç∏„ÇΩ„É≥„Ç∞„Äë',-1,false,true,'2023-05-16 08:41:17.344 +00:00','2023-05-16 08:41:17.344 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_89dc6e05ae034aaaa5fc53f9b3acea1b$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (582867e7-caec-41a1-8666-d01fb95b9180): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_94a17072008e4ff1b2a8e008cf4c3297$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=H-Gtd9zzeII','H-Gtd9zzeII','„Äêcover/Ê≠å„Å£„Å¶„Åø„Åü„Äë„É¥„Ç°„É≥„Éë„Ç§„Ç¢/vampire„Äê„Å®„Åç„ÅÆ„Åù„Çâ„Äë',-1,false,true,'2023-05-16 08:41:17.345 +00:00','2023-05-16 08:41:17.345 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_94a17072008e4ff1b2a8e008cf4c3297$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (fb13b1a5-9772-4472-86d3-6f3e700110ab): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f9cd3a10c67c433a911a40c743e62055$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=wZHodOVE0sc','wZHodOVE0sc','„ÄêÁàΩ„ÇÑ„Åã„Å´„Äë„Åü„Å†Âêõ„Å´Êô¥„ÇåÔºàCoverÔºâ„ÄêÊ≠å„Å£„Å¶„Åø„Åü/„Å®„Åç„ÅÆ„Åù„Çâ„Äë',-1,false,true,'2023-05-16 08:41:17.347 +00:00','2023-05-16 08:41:17.347 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f9cd3a10c67c433a911a40c743e62055$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (24484ed6-de80-4e61-a51c-04fd73434305): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=fevB6h3-kfE';
Executing (782ceef9-d9dc-41a7-9765-a6fff73b9d93): COMMIT;
Executing (582867e7-caec-41a1-8666-d01fb95b9180): COMMIT;
Executing (fb13b1a5-9772-4472-86d3-6f3e700110ab): COMMIT;
Executing (15b2ded1-60ad-4e70-92af-85f9c280de55): COMMIT;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=PxiiB40eTWY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":49}
[39m
Executing (1dcfe42e-e455-4a38-9524-532d118414d6): START TRANSACTION;
Executing (24484ed6-de80-4e61-a51c-04fd73434305): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_77680cd34f1547f1ab384935c0727941$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=fevB6h3-kfE','fevB6h3-kfE','„ÄêMV„ÄëGravity / IRyS„ÄêOriginal Song„Äë',-1,false,true,'2023-05-16 08:41:17.353 +00:00','2023-05-16 08:41:17.353 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_77680cd34f1547f1ab384935c0727941$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1dcfe42e-e455-4a38-9524-532d118414d6): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=PFoGNZ05CJw';
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=wZHodOVE0sc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":50}
[39m
Executing (df6e9ba4-ea4f-49ee-9c79-31471eb50858): START TRANSACTION;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=H-Gtd9zzeII","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":51}
[39m
Executing (142c85ee-7b54-48b5-b040-42247f662a4f): START TRANSACTION;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=53rJX52p3G8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":52}
[39m
Executing (3062dbb1-9d58-4212-b5e8-76687194e898): START TRANSACTION;
Executing (1dcfe42e-e455-4a38-9524-532d118414d6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_fa07e33e2b04434fa1887bbdd76b2e5b$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=PFoGNZ05CJw','PFoGNZ05CJw','„ÄêOriginal Song„ÄëWho‚Äôs Toxic ? It‚Äôs You! - Moona Hoshinova„Äê3DMV„Äë',-1,false,true,'2023-05-16 08:41:17.359 +00:00','2023-05-16 08:41:17.359 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_fa07e33e2b04434fa1887bbdd76b2e5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (df6e9ba4-ea4f-49ee-9c79-31471eb50858): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=V_5mwG9M5Eo' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 44 LIMIT 1;
Executing (142c85ee-7b54-48b5-b040-42247f662a4f): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=TfOx00AOfKo' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 45 LIMIT 1;
Executing (3062dbb1-9d58-4212-b5e8-76687194e898): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=hAI-qjw6J-A' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 46 LIMIT 1;
Executing (24484ed6-de80-4e61-a51c-04fd73434305): COMMIT;
Executing (1dcfe42e-e455-4a38-9524-532d118414d6): COMMIT;
Executing (df6e9ba4-ea4f-49ee-9c79-31471eb50858): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_530ebdb1d7284e32b23dea754d78923f$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('07b0274d-9398-47bd-b5b6-f13078bf0c2c','https://www.youtube.com/watch?v=V_5mwG9M5Eo','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',44,'2023-05-16 08:41:17.364 +00:00','2023-05-16 08:41:17.364 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_530ebdb1d7284e32b23dea754d78923f$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (142c85ee-7b54-48b5-b040-42247f662a4f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_32be3b004d99455bb3ab444d1eed139b$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('4481bd14-b0bd-44d4-b19d-c58d9f43ee62','https://www.youtube.com/watch?v=TfOx00AOfKo','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',45,'2023-05-16 08:41:17.366 +00:00','2023-05-16 08:41:17.366 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_32be3b004d99455bb3ab444d1eed139b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3062dbb1-9d58-4212-b5e8-76687194e898): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e0cdcd6c521444494f6cd917be341e9$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('f4c52a9a-0a10-4268-9e78-c786045fe1e0','https://www.youtube.com/watch?v=hAI-qjw6J-A','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',46,'2023-05-16 08:41:17.368 +00:00','2023-05-16 08:41:17.368 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e0cdcd6c521444494f6cd917be341e9$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=PFoGNZ05CJw","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":53}
[39m
Executing (a8332494-730e-4bd9-9bc5-9a06dfd420ed): START TRANSACTION;
Executing (df6e9ba4-ea4f-49ee-9c79-31471eb50858): COMMIT;
Executing (142c85ee-7b54-48b5-b040-42247f662a4f): COMMIT;
[95m[5/16/2023, 2:11:17 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=fevB6h3-kfE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":54}
[39m
Executing (3618ceb5-9ac7-4a90-b817-534bc2b61002): START TRANSACTION;
Executing (a8332494-730e-4bd9-9bc5-9a06dfd420ed): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=o14s6S0k5qw' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 47 LIMIT 1;
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"07b0274d-9398-47bd-b5b6-f13078bf0c2c","video_url":"https://www.youtube.com/watch?v=V_5mwG9M5Eo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":44,"updatedAt":"2023-05-16T08:41:17.364Z","createdAt":"2023-05-16T08:41:17.364Z"},true]
[39m
Executing (248f2cb6-92fd-4b77-b976-f58b2ac036a7): START TRANSACTION;
Executing (3618ceb5-9ac7-4a90-b817-534bc2b61002): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=HM_El_RDfLY' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 48 LIMIT 1;
Executing (3062dbb1-9d58-4212-b5e8-76687194e898): COMMIT;
Executing (a8332494-730e-4bd9-9bc5-9a06dfd420ed): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ea3902eac4134b54ab735dbf1fd088bd$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('c84666d9-0fb4-48dc-abe8-16829ce53a93','https://www.youtube.com/watch?v=o14s6S0k5qw','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',47,'2023-05-16 08:41:17.376 +00:00','2023-05-16 08:41:17.376 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ea3902eac4134b54ab735dbf1fd088bd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (248f2cb6-92fd-4b77-b976-f58b2ac036a7): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=PxiiB40eTWY' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 49 LIMIT 1;
Executing (3618ceb5-9ac7-4a90-b817-534bc2b61002): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3e60c883ec954341a9884589e0703194$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('8c1741de-504e-4f60-9324-01d969802e3d','https://www.youtube.com/watch?v=HM_El_RDfLY','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',48,'2023-05-16 08:41:17.378 +00:00','2023-05-16 08:41:17.378 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3e60c883ec954341a9884589e0703194$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"4481bd14-b0bd-44d4-b19d-c58d9f43ee62","video_url":"https://www.youtube.com/watch?v=TfOx00AOfKo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":45,"updatedAt":"2023-05-16T08:41:17.366Z","createdAt":"2023-05-16T08:41:17.366Z"},true]
[39m
Executing (8c7205bd-07ff-4de8-b47d-1f55107590e6): START TRANSACTION;
Executing (a8332494-730e-4bd9-9bc5-9a06dfd420ed): COMMIT;
Executing (248f2cb6-92fd-4b77-b976-f58b2ac036a7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cdf825e6be8442be8f1c00342a583512$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('83ef715c-4a1d-4aee-abc6-be26567487d4','https://www.youtube.com/watch?v=PxiiB40eTWY','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',49,'2023-05-16 08:41:17.380 +00:00','2023-05-16 08:41:17.380 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cdf825e6be8442be8f1c00342a583512$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"f4c52a9a-0a10-4268-9e78-c786045fe1e0","video_url":"https://www.youtube.com/watch?v=hAI-qjw6J-A","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":46,"updatedAt":"2023-05-16T08:41:17.368Z","createdAt":"2023-05-16T08:41:17.368Z"},true]
[39m
Executing (cbba67ba-c5e9-4e76-8e7a-10b9bafb2035): START TRANSACTION;
Executing (3618ceb5-9ac7-4a90-b817-534bc2b61002): COMMIT;
Executing (8c7205bd-07ff-4de8-b47d-1f55107590e6): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=wZHodOVE0sc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 50 LIMIT 1;
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"8c1741de-504e-4f60-9324-01d969802e3d","video_url":"https://www.youtube.com/watch?v=HM_El_RDfLY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":48,"updatedAt":"2023-05-16T08:41:17.378Z","createdAt":"2023-05-16T08:41:17.378Z"},true]
[39m
Executing (d574382a-d374-4807-aae6-0d0a3ceddbe7): START TRANSACTION;
Executing (248f2cb6-92fd-4b77-b976-f58b2ac036a7): COMMIT;
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"c84666d9-0fb4-48dc-abe8-16829ce53a93","video_url":"https://www.youtube.com/watch?v=o14s6S0k5qw","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":47,"updatedAt":"2023-05-16T08:41:17.376Z","createdAt":"2023-05-16T08:41:17.376Z"},true]
[39m
Executing (13b935b4-57da-4e1d-ac88-66b69b5da983): START TRANSACTION;
Executing (cbba67ba-c5e9-4e76-8e7a-10b9bafb2035): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=H-Gtd9zzeII' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 51 LIMIT 1;
Executing (d574382a-d374-4807-aae6-0d0a3ceddbe7): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=53rJX52p3G8' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 52 LIMIT 1;
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"83ef715c-4a1d-4aee-abc6-be26567487d4","video_url":"https://www.youtube.com/watch?v=PxiiB40eTWY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":49,"updatedAt":"2023-05-16T08:41:17.380Z","createdAt":"2023-05-16T08:41:17.380Z"},true]
[39m
Executing (8182b0d0-f5ea-45ed-9947-b3ad6e059b6f): START TRANSACTION;
Executing (13b935b4-57da-4e1d-ac88-66b69b5da983): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=PFoGNZ05CJw' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 53 LIMIT 1;
Executing (8c7205bd-07ff-4de8-b47d-1f55107590e6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cd295f36ecb14097a68cfa969554f8a6$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('c067ba81-93e3-4d55-95df-2a2cd7c9e501','https://www.youtube.com/watch?v=wZHodOVE0sc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',50,'2023-05-16 08:41:17.393 +00:00','2023-05-16 08:41:17.393 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cd295f36ecb14097a68cfa969554f8a6$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d574382a-d374-4807-aae6-0d0a3ceddbe7): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f43735f6b1e34a07a1a6fad4f9f43a65$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('35ee7229-5305-4348-a91d-ee0b4dc74be8','https://www.youtube.com/watch?v=53rJX52p3G8','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',52,'2023-05-16 08:41:17.394 +00:00','2023-05-16 08:41:17.394 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f43735f6b1e34a07a1a6fad4f9f43a65$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8182b0d0-f5ea-45ed-9947-b3ad6e059b6f): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=fevB6h3-kfE' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 54 LIMIT 1;
Executing (13b935b4-57da-4e1d-ac88-66b69b5da983): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_75ae9bca104a4dd498f718746a61d4dd$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('8b225dea-d532-450d-84bf-f52e9151da4b','https://www.youtube.com/watch?v=PFoGNZ05CJw','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',53,'2023-05-16 08:41:17.397 +00:00','2023-05-16 08:41:17.397 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_75ae9bca104a4dd498f718746a61d4dd$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cbba67ba-c5e9-4e76-8e7a-10b9bafb2035): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5c712317141246cdbf66bb12711943a8$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('f147ee68-c097-44be-8745-dd2d6738da4e','https://www.youtube.com/watch?v=H-Gtd9zzeII','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',51,'2023-05-16 08:41:17.398 +00:00','2023-05-16 08:41:17.398 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5c712317141246cdbf66bb12711943a8$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (d574382a-d374-4807-aae6-0d0a3ceddbe7): COMMIT;
Executing (8182b0d0-f5ea-45ed-9947-b3ad6e059b6f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a33752d1ce294cc4a8adf63e7a9caee4$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('26e302ac-4996-49dd-8558-7d37488fe2cf','https://www.youtube.com/watch?v=fevB6h3-kfE','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',54,'2023-05-16 08:41:17.400 +00:00','2023-05-16 08:41:17.400 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a33752d1ce294cc4a8adf63e7a9caee4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (13b935b4-57da-4e1d-ac88-66b69b5da983): COMMIT;
Executing (8c7205bd-07ff-4de8-b47d-1f55107590e6): COMMIT;
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"35ee7229-5305-4348-a91d-ee0b4dc74be8","video_url":"https://www.youtube.com/watch?v=53rJX52p3G8","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":52,"updatedAt":"2023-05-16T08:41:17.394Z","createdAt":"2023-05-16T08:41:17.394Z"},true]
[39m
Executing (8182b0d0-f5ea-45ed-9947-b3ad6e059b6f): COMMIT;
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"8b225dea-d532-450d-84bf-f52e9151da4b","video_url":"https://www.youtube.com/watch?v=PFoGNZ05CJw","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":53,"updatedAt":"2023-05-16T08:41:17.397Z","createdAt":"2023-05-16T08:41:17.397Z"},true]
[39m
Executing (cbba67ba-c5e9-4e76-8e7a-10b9bafb2035): COMMIT;
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"26e302ac-4996-49dd-8558-7d37488fe2cf","video_url":"https://www.youtube.com/watch?v=fevB6h3-kfE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":54,"updatedAt":"2023-05-16T08:41:17.400Z","createdAt":"2023-05-16T08:41:17.400Z"},true]
[39m
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"c067ba81-93e3-4d55-95df-2a2cd7c9e501","video_url":"https://www.youtube.com/watch?v=wZHodOVE0sc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":50,"updatedAt":"2023-05-16T08:41:17.393Z","createdAt":"2023-05-16T08:41:17.393Z"},true]
[39m
[95m[5/16/2023, 2:11:17 PM] DEBUG: [{"id":"f147ee68-c097-44be-8745-dd2d6738da4e","video_url":"https://www.youtube.com/watch?v=H-Gtd9zzeII","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":51,"updatedAt":"2023-05-16T08:41:17.398Z","createdAt":"2023-05-16T08:41:17.398Z"},true]
[39m
[96m[5/16/2023, 2:11:17 PM] TRACE: list_background: URL: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, Chunk: 11, Start: 56, Stop: 66
[39m
[96m[5/16/2023, 2:11:20 PM] TRACE: list_spawner: Start: 56, Stop: 66, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:11:23 PM] TRACE: process_response: Index: 54, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (ad24f1f7-1d0a-4057-8883-30496a1e4160): START TRANSACTION;
Executing (13accb43-62ab-4bca-86fd-589fba8964ae): START TRANSACTION;
Executing (8c3b9c23-7a10-4f16-9888-0c2f7e7ad552): START TRANSACTION;
Executing (3e6ffb9d-0567-4c22-ad94-d42a71521f8b): START TRANSACTION;
Executing (f09635f7-3169-4da9-a24f-93fe555f8108): START TRANSACTION;
Executing (ad24f1f7-1d0a-4057-8883-30496a1e4160): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=Lxr3BV-t0Tc';
Executing (13accb43-62ab-4bca-86fd-589fba8964ae): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=_8L2KJeoHGo';
Executing (8c3b9c23-7a10-4f16-9888-0c2f7e7ad552): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=mDN9o6GQdm4';
Executing (3e6ffb9d-0567-4c22-ad94-d42a71521f8b): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=BQ76G9I3gIc';
Executing (f09635f7-3169-4da9-a24f-93fe555f8108): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=BQ76G9I3gIc';
Executing (ad24f1f7-1d0a-4057-8883-30496a1e4160): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8943bdfc71ab47fb85135856479d3269$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=Lxr3BV-t0Tc','Lxr3BV-t0Tc','„ÄêIRyS„Äëdiorama „Äê1st EP Original Song MV„Äë',-1,false,true,'2023-05-16 08:41:23.814 +00:00','2023-05-16 08:41:23.814 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8943bdfc71ab47fb85135856479d3269$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (13accb43-62ab-4bca-86fd-589fba8964ae): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6582f3f0ac1f4a6a989a59df2bf10880$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=_8L2KJeoHGo','_8L2KJeoHGo','QUEEN/Â∏∏Èóá„Éà„ÉØ(cover)',-1,false,true,'2023-05-16 08:41:23.816 +00:00','2023-05-16 08:41:23.816 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6582f3f0ac1f4a6a989a59df2bf10880$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8c3b9c23-7a10-4f16-9888-0c2f7e7ad552): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0f55c5c1efa843e591f16b738da5ecc7$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=mDN9o6GQdm4','mDN9o6GQdm4','„ÄêIRyS„Äë Shiny Smily Story  / hololive IDOL PROJECT „ÄêCOVER„Äë',-1,false,true,'2023-05-16 08:41:23.817 +00:00','2023-05-16 08:41:23.817 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0f55c5c1efa843e591f16b738da5ecc7$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3e6ffb9d-0567-4c22-ad94-d42a71521f8b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cb76697fd3ac4e9bba6da943ad1971c2$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=BQ76G9I3gIc','BQ76G9I3gIc','„ÄêÂ§ß‰∫∫„Å£„ÅΩ„Åè„Äë„Ç®„É≥„É¥„Ç£„Éº„Éô„Ç§„Éì„Éº„ÄêÊ≠å„Å£„Å¶„Åø„Åü(cover)/„Å®„Åç„ÅÆ„Åù„Çâ„Äë',-1,false,true,'2023-05-16 08:41:23.819 +00:00','2023-05-16 08:41:23.819 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cb76697fd3ac4e9bba6da943ad1971c2$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f09635f7-3169-4da9-a24f-93fe555f8108): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_37fcd94dc63643dea862ad3caa09551c$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=BQ76G9I3gIc','BQ76G9I3gIc','„ÄêÂ§ß‰∫∫„Å£„ÅΩ„Åè„Äë„Ç®„É≥„É¥„Ç£„Éº„Éô„Ç§„Éì„Éº„ÄêÊ≠å„Å£„Å¶„Åø„Åü(cover)/„Å®„Åç„ÅÆ„Åù„Çâ„Äë',-1,false,true,'2023-05-16 08:41:23.821 +00:00','2023-05-16 08:41:23.821 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_37fcd94dc63643dea862ad3caa09551c$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ad24f1f7-1d0a-4057-8883-30496a1e4160): COMMIT;
Executing (13accb43-62ab-4bca-86fd-589fba8964ae): COMMIT;
Executing (8c3b9c23-7a10-4f16-9888-0c2f7e7ad552): COMMIT;
Executing (3e6ffb9d-0567-4c22-ad94-d42a71521f8b): COMMIT;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=Lxr3BV-t0Tc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":55}
[39m
Executing (fb2c83ae-b3bf-4cc4-81dd-12a755e11ac4): START TRANSACTION;
Executing (fb2c83ae-b3bf-4cc4-81dd-12a755e11ac4): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=pgQ7t90WqQI';
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=BQ76G9I3gIc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":56}
[39m
Executing (f04593ae-f593-41b6-96e7-aa8dd0118237): START TRANSACTION;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=_8L2KJeoHGo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":57}
[39m
Executing (ec975556-0dc7-4edd-8496-e17487cab051): START TRANSACTION;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=mDN9o6GQdm4","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":58}
[39m
Executing (7992577c-f226-4b62-8550-16ef92e5cb60): START TRANSACTION;
Executing (f04593ae-f593-41b6-96e7-aa8dd0118237): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=ITPpK7GXoEc';
Executing (ec975556-0dc7-4edd-8496-e17487cab051): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=OG6yRuj3KkY';
Executing (7992577c-f226-4b62-8550-16ef92e5cb60): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=HrT8Oon9Kxs';
Executing (fb2c83ae-b3bf-4cc4-81dd-12a755e11ac4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_af4ba0e9b34c4263a54abf5f0ac1eab6$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=pgQ7t90WqQI','pgQ7t90WqQI','Los!Los!Los! / ÁçÖÁôΩ„Åº„Åü„Çì(cover) -VARK LIVE version',-1,false,true,'2023-05-16 08:41:23.839 +00:00','2023-05-16 08:41:23.839 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_af4ba0e9b34c4263a54abf5f0ac1eab6$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f04593ae-f593-41b6-96e7-aa8dd0118237): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_7ba3a7f7b1394cce8e41925add44c1ee$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=ITPpK7GXoEc','ITPpK7GXoEc','„Éû„Ç§„Ç™„Éâ„É¨ÔºÅËàûËàû„Çø„Ç§„É† „Äê„Å®„Åç„ÅÆ„Åù„ÇâÔºÜ„Åï„Åè„Çâ„Åø„Åì√ómaimai „Åß„Çâ„Å£„Åè„Åô Splash „ÄëMV',-1,false,true,'2023-05-16 08:41:23.841 +00:00','2023-05-16 08:41:23.841 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_7ba3a7f7b1394cce8e41925add44c1ee$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (ec975556-0dc7-4edd-8496-e17487cab051): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c05ef3f24c5b4663be12dcab5213bb7b$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=OG6yRuj3KkY','OG6yRuj3KkY','„ÄêON STAGE!ÂèéÈå≤„ÄëStep and Go!!(Short ver.)MV„Äê„Å®„Åç„ÅÆ„Åù„Çâ„Ç™„É™„Ç∏„Éä„É´Ê•ΩÊõ≤„Äë',-1,false,true,'2023-05-16 08:41:23.842 +00:00','2023-05-16 08:41:23.842 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c05ef3f24c5b4663be12dcab5213bb7b$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7992577c-f226-4b62-8550-16ef92e5cb60): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_82a0bfa8603c45f5b3e55631eece5cc8$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=HrT8Oon9Kxs','HrT8Oon9Kxs','„ÄêMV„ÄëDaikirai Na Hazu Datta - Honeyworks || HAKOS BAELZ X IRYS COVER',-1,false,true,'2023-05-16 08:41:23.844 +00:00','2023-05-16 08:41:23.844 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_82a0bfa8603c45f5b3e55631eece5cc8$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (f04593ae-f593-41b6-96e7-aa8dd0118237): COMMIT;
Executing (ec975556-0dc7-4edd-8496-e17487cab051): COMMIT;
Executing (fb2c83ae-b3bf-4cc4-81dd-12a755e11ac4): COMMIT;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=ITPpK7GXoEc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":59}
[39m
Executing (b5417547-449d-4586-9dc2-bed6b3586e19): START TRANSACTION;
Executing (7992577c-f226-4b62-8550-16ef92e5cb60): COMMIT;
Executing (b5417547-449d-4586-9dc2-bed6b3586e19): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=MAhcVce-mQE';
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=OG6yRuj3KkY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":60}
[39m
Executing (6c947775-c56b-4c6f-b677-19753e4d1a1f): START TRANSACTION;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=pgQ7t90WqQI","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":61}
[39m
Executing (cbd8a675-d667-417e-8c22-6ad055c1191c): START TRANSACTION;
Executing (b5417547-449d-4586-9dc2-bed6b3586e19): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2926d567b04d4400a60eb2503b8e0367$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=MAhcVce-mQE','MAhcVce-mQE','„Äå„Åì„ÅÆ‰∏ñÁïå„Åß„ÄçMusicVideo(Short ver.Ôºâ„Äê„Å®„Åç„ÅÆ„Åù„Çâ„Äë',-1,false,true,'2023-05-16 08:41:23.854 +00:00','2023-05-16 08:41:23.854 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2926d567b04d4400a60eb2503b8e0367$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6c947775-c56b-4c6f-b677-19753e4d1a1f): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=3pzh6AaXi9s';
Executing (cbd8a675-d667-417e-8c22-6ad055c1191c): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=Lxr3BV-t0Tc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 55 LIMIT 1;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=HrT8Oon9Kxs","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":62}
[39m
Executing (eff02c97-842f-49fe-b55f-b491a31322c9): START TRANSACTION;
Executing (b5417547-449d-4586-9dc2-bed6b3586e19): COMMIT;
Executing (6c947775-c56b-4c6f-b677-19753e4d1a1f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1a2c96cb59ee42a79965f84bc4a356a1$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=3pzh6AaXi9s','3pzh6AaXi9s','„ÄêMV„ÄëErande Kurete Arigato - Honeyworks„ÄêIRyS x Baelz Cover„Äë',-1,false,true,'2023-05-16 08:41:23.865 +00:00','2023-05-16 08:41:23.865 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1a2c96cb59ee42a79965f84bc4a356a1$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (cbd8a675-d667-417e-8c22-6ad055c1191c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cbdebc065e8e48d4bd3483f32daf4764$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('7666a376-2421-4236-be97-9c7b3afa95d5','https://www.youtube.com/watch?v=Lxr3BV-t0Tc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',55,'2023-05-16 08:41:23.866 +00:00','2023-05-16 08:41:23.866 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cbdebc065e8e48d4bd3483f32daf4764$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (eff02c97-842f-49fe-b55f-b491a31322c9): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=BQ76G9I3gIc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 56 LIMIT 1;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=MAhcVce-mQE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":63}
[39m
Executing (e08e19ef-ec8e-43ba-b255-1bfad3c2c49f): START TRANSACTION;
Executing (6c947775-c56b-4c6f-b677-19753e4d1a1f): COMMIT;
Executing (cbd8a675-d667-417e-8c22-6ad055c1191c): COMMIT;
Executing (eff02c97-842f-49fe-b55f-b491a31322c9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a320601ef68b42fa9c94afae7ca32701$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('9ba95a94-8ef4-4efb-a972-1e6ab6c24614','https://www.youtube.com/watch?v=BQ76G9I3gIc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',56,'2023-05-16 08:41:23.874 +00:00','2023-05-16 08:41:23.874 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a320601ef68b42fa9c94afae7ca32701$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e08e19ef-ec8e-43ba-b255-1bfad3c2c49f): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=_8L2KJeoHGo' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 57 LIMIT 1;
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=3pzh6AaXi9s","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":64}
[39m
Executing (default): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=BQ76G9I3gIc';
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"7666a376-2421-4236-be97-9c7b3afa95d5","video_url":"https://www.youtube.com/watch?v=Lxr3BV-t0Tc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":55,"updatedAt":"2023-05-16T08:41:23.866Z","createdAt":"2023-05-16T08:41:23.866Z"},true]
[39m
Executing (12f530f0-10d1-4b48-8a92-cdea7ae85f1d): START TRANSACTION;
Executing (e08e19ef-ec8e-43ba-b255-1bfad3c2c49f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_82f4e5ef02244d4a9f0f9f651bb79dc5$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('6cc4740f-9b1a-47e2-815f-7502ef5cdfce','https://www.youtube.com/watch?v=_8L2KJeoHGo','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',57,'2023-05-16 08:41:23.879 +00:00','2023-05-16 08:41:23.879 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_82f4e5ef02244d4a9f0f9f651bb79dc5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (7851d57f-d69e-4a06-89ba-a82e4403fc96): START TRANSACTION;
Executing (f09635f7-3169-4da9-a24f-93fe555f8108): COMMIT;
Executing (12f530f0-10d1-4b48-8a92-cdea7ae85f1d): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=mDN9o6GQdm4' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 58 LIMIT 1;
Executing (eff02c97-842f-49fe-b55f-b491a31322c9): COMMIT;
Executing (e08e19ef-ec8e-43ba-b255-1bfad3c2c49f): COMMIT;
Executing (7851d57f-d69e-4a06-89ba-a82e4403fc96): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=ITPpK7GXoEc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 59 LIMIT 1;
Executing (12f530f0-10d1-4b48-8a92-cdea7ae85f1d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d05ba28117074b01acac25a802de75c3$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('277242d2-824c-45d3-98a2-b674ad0a0772','https://www.youtube.com/watch?v=mDN9o6GQdm4','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',58,'2023-05-16 08:41:23.886 +00:00','2023-05-16 08:41:23.886 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d05ba28117074b01acac25a802de75c3$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:23 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=BQ76G9I3gIc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":65}
[39m
Executing (e88b4f29-c628-4f7b-9520-6d5516c31aa6): START TRANSACTION;
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"6cc4740f-9b1a-47e2-815f-7502ef5cdfce","video_url":"https://www.youtube.com/watch?v=_8L2KJeoHGo","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":57,"updatedAt":"2023-05-16T08:41:23.879Z","createdAt":"2023-05-16T08:41:23.879Z"},true]
[39m
Executing (cd65742b-368d-4a1d-8f80-f09889477cce): START TRANSACTION;
Executing (7851d57f-d69e-4a06-89ba-a82e4403fc96): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e4863cdcfc0a4ea1a9ef86f6c0bebe4b$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('ffb729d3-e8b2-47c2-996e-b829159316c8','https://www.youtube.com/watch?v=ITPpK7GXoEc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',59,'2023-05-16 08:41:23.891 +00:00','2023-05-16 08:41:23.891 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e4863cdcfc0a4ea1a9ef86f6c0bebe4b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (12f530f0-10d1-4b48-8a92-cdea7ae85f1d): COMMIT;
Executing (e88b4f29-c628-4f7b-9520-6d5516c31aa6): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=OG6yRuj3KkY' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 60 LIMIT 1;
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"9ba95a94-8ef4-4efb-a972-1e6ab6c24614","video_url":"https://www.youtube.com/watch?v=BQ76G9I3gIc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":56,"updatedAt":"2023-05-16T08:41:23.874Z","createdAt":"2023-05-16T08:41:23.874Z"},true]
[39m
Executing (0165abdb-d760-40ad-8712-8dc6c3fd507c): START TRANSACTION;
Executing (cd65742b-368d-4a1d-8f80-f09889477cce): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=pgQ7t90WqQI' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 61 LIMIT 1;
Executing (7851d57f-d69e-4a06-89ba-a82e4403fc96): COMMIT;
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"277242d2-824c-45d3-98a2-b674ad0a0772","video_url":"https://www.youtube.com/watch?v=mDN9o6GQdm4","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":58,"updatedAt":"2023-05-16T08:41:23.886Z","createdAt":"2023-05-16T08:41:23.886Z"},true]
[39m
Executing (e16420d5-95c3-4a47-ad20-7d769d12aa6a): START TRANSACTION;
Executing (e88b4f29-c628-4f7b-9520-6d5516c31aa6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_48d711b539c448cca8e8705bc534df09$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('8528c56d-e715-4a5d-810a-1a5b39b96810','https://www.youtube.com/watch?v=OG6yRuj3KkY','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',60,'2023-05-16 08:41:23.899 +00:00','2023-05-16 08:41:23.899 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_48d711b539c448cca8e8705bc534df09$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0165abdb-d760-40ad-8712-8dc6c3fd507c): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=HrT8Oon9Kxs' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 62 LIMIT 1;
Executing (cd65742b-368d-4a1d-8f80-f09889477cce): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_1d3d48aa48214cc497db818116c6f871$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('7abaa0a8-2407-4ddb-9637-657246b705bf','https://www.youtube.com/watch?v=pgQ7t90WqQI','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',61,'2023-05-16 08:41:23.902 +00:00','2023-05-16 08:41:23.902 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_1d3d48aa48214cc497db818116c6f871$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"ffb729d3-e8b2-47c2-996e-b829159316c8","video_url":"https://www.youtube.com/watch?v=ITPpK7GXoEc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":59,"updatedAt":"2023-05-16T08:41:23.891Z","createdAt":"2023-05-16T08:41:23.891Z"},true]
[39m
Executing (3dbfed73-9507-4289-97cf-2d97c5912077): START TRANSACTION;
Executing (e16420d5-95c3-4a47-ad20-7d769d12aa6a): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=MAhcVce-mQE' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 63 LIMIT 1;
Executing (e88b4f29-c628-4f7b-9520-6d5516c31aa6): COMMIT;
Executing (cd65742b-368d-4a1d-8f80-f09889477cce): COMMIT;
Executing (3dbfed73-9507-4289-97cf-2d97c5912077): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=3pzh6AaXi9s' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 64 LIMIT 1;
Executing (e16420d5-95c3-4a47-ad20-7d769d12aa6a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_669893589e424452b229ccd1a7e74ad5$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('64a956a2-b233-450b-a011-e08e0042013c','https://www.youtube.com/watch?v=MAhcVce-mQE','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',63,'2023-05-16 08:41:23.910 +00:00','2023-05-16 08:41:23.910 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_669893589e424452b229ccd1a7e74ad5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (0165abdb-d760-40ad-8712-8dc6c3fd507c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_efd74277a0a94825b5b8c213cb2aecd0$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('7e82245a-04be-4bdf-8510-ba086a788d65','https://www.youtube.com/watch?v=HrT8Oon9Kxs','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',62,'2023-05-16 08:41:23.911 +00:00','2023-05-16 08:41:23.911 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_efd74277a0a94825b5b8c213cb2aecd0$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"7abaa0a8-2407-4ddb-9637-657246b705bf","video_url":"https://www.youtube.com/watch?v=pgQ7t90WqQI","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":61,"updatedAt":"2023-05-16T08:41:23.902Z","createdAt":"2023-05-16T08:41:23.902Z"},true]
[39m
Executing (15edc9b8-3d84-47b9-a0e5-515d077387d8): START TRANSACTION;
Executing (3dbfed73-9507-4289-97cf-2d97c5912077): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b369581c6e8f4bfe9d92bcf6d8b3e3e4$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('f89b3664-2ffb-434e-9eb6-5a2e597f6d5d','https://www.youtube.com/watch?v=3pzh6AaXi9s','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',64,'2023-05-16 08:41:23.915 +00:00','2023-05-16 08:41:23.915 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b369581c6e8f4bfe9d92bcf6d8b3e3e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e16420d5-95c3-4a47-ad20-7d769d12aa6a): COMMIT;
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"8528c56d-e715-4a5d-810a-1a5b39b96810","video_url":"https://www.youtube.com/watch?v=OG6yRuj3KkY","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":60,"updatedAt":"2023-05-16T08:41:23.899Z","createdAt":"2023-05-16T08:41:23.899Z"},true]
[39m
Executing (15edc9b8-3d84-47b9-a0e5-515d077387d8): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=BQ76G9I3gIc' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 65 LIMIT 1;
Executing (3dbfed73-9507-4289-97cf-2d97c5912077): COMMIT;
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"64a956a2-b233-450b-a011-e08e0042013c","video_url":"https://www.youtube.com/watch?v=MAhcVce-mQE","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":63,"updatedAt":"2023-05-16T08:41:23.910Z","createdAt":"2023-05-16T08:41:23.910Z"},true]
[39m
Executing (0165abdb-d760-40ad-8712-8dc6c3fd507c): COMMIT;
Executing (15edc9b8-3d84-47b9-a0e5-515d077387d8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_54dd7b7f0606485794212f3847f1d613$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('dcc39021-34c5-40bc-a7c8-4234a892b34b','https://www.youtube.com/watch?v=BQ76G9I3gIc','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',65,'2023-05-16 08:41:23.925 +00:00','2023-05-16 08:41:23.925 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_54dd7b7f0606485794212f3847f1d613$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"f89b3664-2ffb-434e-9eb6-5a2e597f6d5d","video_url":"https://www.youtube.com/watch?v=3pzh6AaXi9s","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":64,"updatedAt":"2023-05-16T08:41:23.915Z","createdAt":"2023-05-16T08:41:23.915Z"},true]
[39m
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"7e82245a-04be-4bdf-8510-ba086a788d65","video_url":"https://www.youtube.com/watch?v=HrT8Oon9Kxs","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":62,"updatedAt":"2023-05-16T08:41:23.911Z","createdAt":"2023-05-16T08:41:23.911Z"},true]
[39m
Executing (15edc9b8-3d84-47b9-a0e5-515d077387d8): COMMIT;
[95m[5/16/2023, 2:11:23 PM] DEBUG: [{"id":"dcc39021-34c5-40bc-a7c8-4234a892b34b","video_url":"https://www.youtube.com/watch?v=BQ76G9I3gIc","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":65,"updatedAt":"2023-05-16T08:41:23.925Z","createdAt":"2023-05-16T08:41:23.925Z"},true]
[39m
[96m[5/16/2023, 2:11:23 PM] TRACE: list_background: URL: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, Chunk: 11, Start: 67, Stop: 77
[39m
[96m[5/16/2023, 2:11:26 PM] TRACE: list_spawner: Start: 67, Stop: 77, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:11:30 PM] TRACE: process_response: Index: 65, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (49808ab1-6126-48f0-970d-887b933c7b54): START TRANSACTION;
Executing (db9ed8ce-240e-4661-b526-1bf48d867ff3): START TRANSACTION;
Executing (bc4d33da-6d76-47ff-bb3c-9afbf4e4f684): START TRANSACTION;
Executing (49808ab1-6126-48f0-970d-887b933c7b54): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=Z9oZ4r0cxME';
Executing (db9ed8ce-240e-4661-b526-1bf48d867ff3): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=VJY1oluYoVQ';
Executing (bc4d33da-6d76-47ff-bb3c-9afbf4e4f684): SELECT "video_url", "video_id", "title", "approximate_size", "downloaded", "available", "createdAt", "updatedAt" FROM "video_lists" AS "video_list" WHERE "video_list"."video_url" = 'https://www.youtube.com/watch?v=wMzflx4bQQQ';
Executing (49808ab1-6126-48f0-970d-887b933c7b54): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_93e14f393b54429096e6cf6c977c0fc8$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=Z9oZ4r0cxME','Z9oZ4r0cxME','„Äê„Å®„Åç„ÅÆ„Åù„Çâ √ó „Ç∑„Ç∞„Éä„É´P„ÄëWandering Days„Äê„Ç™„É™„Ç∏„Éä„É´„Éª„Éú„Ç´„É≠P„Ç≥„É©„ÉúÁ¨¨2Âºæ„Äë',-1,false,true,'2023-05-16 08:41:30.221 +00:00','2023-05-16 08:41:30.221 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_93e14f393b54429096e6cf6c977c0fc8$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db9ed8ce-240e-4661-b526-1bf48d867ff3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_76bb701289dc4ad2b8d395ff7c8a12b5$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=VJY1oluYoVQ','VJY1oluYoVQ','Infinity/Akaihaato√óHAACHAMA„ÄêFanMV„Äë#„ÅØ„ÅÇ„Å°„ÇÉ„ÅæÂãïÁîª',-1,false,true,'2023-05-16 08:41:30.223 +00:00','2023-05-16 08:41:30.223 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_76bb701289dc4ad2b8d395ff7c8a12b5$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (49808ab1-6126-48f0-970d-887b933c7b54): COMMIT;
Executing (bc4d33da-6d76-47ff-bb3c-9afbf4e4f684): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "video_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dde2b92d00cd4227998d1b9ab8e113dc$ BEGIN INSERT INTO "video_lists" ("video_url","video_id","title","approximate_size","downloaded","available","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=wMzflx4bQQQ','wMzflx4bQQQ','„ÄêSong/Ê≠åÊû†„ÄëÊ•Ω„Åó„Åè1ÊôÇÈñìÊ≠å„Å£„Å¶„Åè„ÇàÔºÅÔºÅ„Äê#„Å®„Åç„ÅÆ„Åù„ÇâÁîüÊîæÈÄÅ „Äë',-1,false,true,'2023-05-16 08:41:30.227 +00:00','2023-05-16 08:41:30.227 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dde2b92d00cd4227998d1b9ab8e113dc$ LANGUAGE plpgsql; SELECT (testfunc.response)."video_url", (testfunc.response)."video_id", (testfunc.response)."title", (testfunc.response)."approximate_size", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db9ed8ce-240e-4661-b526-1bf48d867ff3): COMMIT;
Executing (bc4d33da-6d76-47ff-bb3c-9afbf4e4f684): COMMIT;
[95m[5/16/2023, 2:11:30 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=Z9oZ4r0cxME","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":66}
[39m
Executing (eb6461e8-4b4d-4ac9-8ab3-ad18637dd5cf): START TRANSACTION;
Executing (eb6461e8-4b4d-4ac9-8ab3-ad18637dd5cf): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=Z9oZ4r0cxME' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 66 LIMIT 1;
[95m[5/16/2023, 2:11:30 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=wMzflx4bQQQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":67}
[39m
Executing (99f5a16f-7f90-4929-a292-59e8aef9b5d0): START TRANSACTION;
[95m[5/16/2023, 2:11:30 PM] DEBUG: {"video_url":"https://www.youtube.com/watch?v=VJY1oluYoVQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":68}
[39m
Executing (94981ff5-0197-4a65-b1d8-fd9ecd44a94e): START TRANSACTION;
Executing (eb6461e8-4b4d-4ac9-8ab3-ad18637dd5cf): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f3446c86ee3b4a8491a341201150d53b$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('cdb7cc0d-0bfd-4332-9b49-6fdea9d52203','https://www.youtube.com/watch?v=Z9oZ4r0cxME','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',66,'2023-05-16 08:41:30.241 +00:00','2023-05-16 08:41:30.241 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f3446c86ee3b4a8491a341201150d53b$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99f5a16f-7f90-4929-a292-59e8aef9b5d0): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=wMzflx4bQQQ' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 67 LIMIT 1;
Executing (94981ff5-0197-4a65-b1d8-fd9ecd44a94e): SELECT "id", "video_url", "playlist_url", "index_in_playlist", "createdAt", "updatedAt" FROM "playlist_video_indexers" AS "playlist_video_indexer" WHERE "playlist_video_indexer"."video_url" = 'https://www.youtube.com/watch?v=VJY1oluYoVQ' AND "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' AND "playlist_video_indexer"."index_in_playlist" = 68 LIMIT 1;
Executing (eb6461e8-4b4d-4ac9-8ab3-ad18637dd5cf): COMMIT;
Executing (99f5a16f-7f90-4929-a292-59e8aef9b5d0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5cb2e820a4ff443d912a2aa540d3c647$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('2b15938e-0ea1-4652-9ef8-8f510ce876bf','https://www.youtube.com/watch?v=wMzflx4bQQQ','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',67,'2023-05-16 08:41:30.249 +00:00','2023-05-16 08:41:30.249 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5cb2e820a4ff443d912a2aa540d3c647$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
[95m[5/16/2023, 2:11:30 PM] DEBUG: [{"id":"cdb7cc0d-0bfd-4332-9b49-6fdea9d52203","video_url":"https://www.youtube.com/watch?v=Z9oZ4r0cxME","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":66,"updatedAt":"2023-05-16T08:41:30.241Z","createdAt":"2023-05-16T08:41:30.241Z"},true]
[39m
Executing (94981ff5-0197-4a65-b1d8-fd9ecd44a94e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "playlist_video_indexers", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_625286c648554f5ca34f277e6b2ec9f5$ BEGIN INSERT INTO "playlist_video_indexers" ("id","video_url","playlist_url","index_in_playlist","createdAt","updatedAt") VALUES ('f9464d7b-c8ff-41e3-a0a0-cc3b4457329a','https://www.youtube.com/watch?v=VJY1oluYoVQ','https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ',68,'2023-05-16 08:41:30.251 +00:00','2023-05-16 08:41:30.251 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_625286c648554f5ca34f277e6b2ec9f5$ LANGUAGE plpgsql; SELECT (testfunc.response)."id", (testfunc.response)."video_url", (testfunc.response)."playlist_url", (testfunc.response)."index_in_playlist", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (99f5a16f-7f90-4929-a292-59e8aef9b5d0): COMMIT;
Executing (94981ff5-0197-4a65-b1d8-fd9ecd44a94e): COMMIT;
[95m[5/16/2023, 2:11:30 PM] DEBUG: [{"id":"2b15938e-0ea1-4652-9ef8-8f510ce876bf","video_url":"https://www.youtube.com/watch?v=wMzflx4bQQQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":67,"updatedAt":"2023-05-16T08:41:30.249Z","createdAt":"2023-05-16T08:41:30.249Z"},true]
[39m
[95m[5/16/2023, 2:11:30 PM] DEBUG: [{"id":"f9464d7b-c8ff-41e3-a0a0-cc3b4457329a","video_url":"https://www.youtube.com/watch?v=VJY1oluYoVQ","playlist_url":"https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ","index_in_playlist":68,"updatedAt":"2023-05-16T08:41:30.251Z","createdAt":"2023-05-16T08:41:30.251Z"},true]
[39m
[96m[5/16/2023, 2:11:30 PM] TRACE: list_background: URL: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ, Chunk: 11, Start: 78, Stop: 88
[39m
[96m[5/16/2023, 2:11:33 PM] TRACE: list_spawner: Start: 78, Stop: 88, Url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:11:36 PM] TRACE: Done processing playlist: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
[96m[5/16/2023, 2:11:36 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:11:36 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:11:36 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:11:36 PM] TRACE: playlists_to_table: Start: 0, Stop: 10, Order: 1, Type: ASC, Query: ""
[39m
Executing (default): SELECT count(*) AS "count" FROM "playlist_lists" AS "playlist_list";
Executing (default): SELECT "playlist_url", "title", "playlist_index", "monitoring_type", "save_dir", "createdAt", "updatedAt" FROM "playlist_lists" AS "playlist_list" ORDER BY "playlist_list"."playlist_index" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:11:36 PM] TRACE: sublist_to_table:  Start: 0, Stop: 10,  Query: "", Order: ["index_in_playlist","ASC"], playlist_url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (default): SELECT count("playlist_video_indexer"."id") AS "count" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ';
Executing (default): SELECT "playlist_video_indexer"."id", "playlist_video_indexer"."index_in_playlist", "playlist_video_indexer"."playlist_url", "video_list"."title" AS "video_list.title", "video_list"."video_id" AS "video_list.video_id", "video_list"."video_url" AS "video_list.video_url", "video_list"."downloaded" AS "video_list.downloaded", "video_list"."available" AS "video_list.available" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' ORDER BY "playlist_video_indexer"."index_in_playlist" ASC LIMIT 10 OFFSET 0;
[96m[5/16/2023, 2:11:36 PM] TRACE: sublist_to_table:  Start: 0, Stop: 10,  Query: "", Order: ["index_in_playlist","ASC"], playlist_url: https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ
[39m
Executing (default): SELECT count("playlist_video_indexer"."id") AS "count" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ';
Executing (default): SELECT "playlist_video_indexer"."id", "playlist_video_indexer"."index_in_playlist", "playlist_video_indexer"."playlist_url", "video_list"."title" AS "video_list.title", "video_list"."video_id" AS "video_list.video_id", "video_list"."video_url" AS "video_list.video_url", "video_list"."downloaded" AS "video_list.downloaded", "video_list"."available" AS "video_list.available" FROM "playlist_video_indexers" AS "playlist_video_indexer" LEFT OUTER JOIN "video_lists" AS "video_list" ON "playlist_video_indexer"."video_url" = "video_list"."video_url" WHERE "playlist_video_indexer"."playlist_url" = 'https://www.youtube.com/playlist?list=PL4Oo6H2hGqj3UQ4gjhpmCL9y8DKrrrSvZ' ORDER BY "playlist_video_indexer"."index_in_playlist" ASC LIMIT 10 OFFSET 0;
