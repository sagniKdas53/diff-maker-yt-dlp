Server listening on http://localhost:8888
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'vid_lists'
Connection has been established successfully.
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'vid_lists' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'play_lists'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'play_lists' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
vid_list and play_lists tables exist or are created successfully!
{ data: 'Connected', id: 'hNeqKgi0a65ZgXc8AAAB' }
{ data: 'Connected', id: '-jgMP7kCyQbq-UYyAAAD' }
body_url: https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt start_num: 1 stop_num: 10
[
  'LS-6 | Trust Farm |【Arknights】\tTftQ5nW0yNM\thttps://www.youtube.com/watch?v=TftQ5nW0yNM',
  'CE-6 | Trust Farm (2 Versions) |【Arknights】\tx3We0qzt560\thttps://www.youtube.com/watch?v=x3We0qzt560',
  '【明日方舟/Arknights】[AP-5] - Low Rarity Squad - Arknights Strategy\tt_1JJ01NYpg\thttps://www.youtube.com/watch?v=t_1JJ01NYpg',
  '【明日方舟/Arknights】[AP-4] - Low Lvl-Rarity Squad - Arknights Strategy\tx0bei3FcK2g\thttps://www.youtube.com/watch?v=x0bei3FcK2g',
  '【明日方舟/Arknights】[AP-3] - Low Lvl-Rarity Squad - Arknights Strategy\ttNAeHgKSjdU\thttps://www.youtube.com/watch?v=tNAeHgKSjdU',
  '【明日方舟/Arknights】[AP-2] - Low Lvl-Rarity Squad - Arknights Strategy\t_bWH7kgZKzE\thttps://www.youtube.com/watch?v=_bWH7kgZKzE',
  '【明日方舟/Arknights】[AP-1] - Low Lvl-Rarity Squad - Arknights Strategy\tZUTkCCT4RVw\thttps://www.youtube.com/watch?v=ZUTkCCT4RVw',
  '【明日方舟/Arknights】[SK-5] How to fix the "Shaw" issue - Low Rarity Squad - Arknights Strategy\tGBUbjuARUMM\thttps://www.youtube.com/watch?v=GBUbjuARUMM',
  '【明日方舟/Arknights】[SK-5] - Low Lvl-Rarity Squad - Arknights Strategy\tg9Sz9qOh60o\thttps://www.youtube.com/watch?v=g9Sz9qOh60o',
  '【明日方舟/Arknights】[SK-4] - Low Lvl-Rarity Squad - Arknights Strategy\tZKSNiuPi3gY\thttps://www.youtube.com/watch?v=ZKSNiuPi3gY'
] 10
Executing (default): SELECT "title", "url", "order_added", "createdAt", "updatedAt" FROM "play_lists" AS "play_lists" WHERE "play_lists"."url" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): UPDATE "play_lists" SET "updatedAt"=$1 WHERE "url" = $2
playlist updated

listing in background

body_url https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt start_num 1 stop_num 10 chunk_size 10
response None
resposne != 'done':  true
start_num: 11 stop_num: 20 chunk_size: 10
response 
resposne != 'done':  true
start_num: 21 stop_num: 30 chunk_size: 10
response 
resposne != 'done':  true
start_num: 31 stop_num: 40 chunk_size: 10
response 
resposne != 'done':  true
breaking to not crash and burn
================================
Outside loop
response 
resposne != 'done':  true
done listing
Executing (631b1e25-5c3c-4566-aa6f-02a8ebc030b2): START TRANSACTION;
Executing (3dc5e961-bfa9-4769-acd2-dd53b7edc3d4): START TRANSACTION;
Executing (631b1e25-5c3c-4566-aa6f-02a8ebc030b2): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=TftQ5nW0yNM' LIMIT 1;
Executing (3dc5e961-bfa9-4769-acd2-dd53b7edc3d4): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=x3We0qzt560' LIMIT 1;
Executing (631b1e25-5c3c-4566-aa6f-02a8ebc030b2): COMMIT;
Updating entry
Executing (f75c6354-de7b-4ad4-909f-c83ae104cfa4): START TRANSACTION;
Executing (3dc5e961-bfa9-4769-acd2-dd53b7edc3d4): COMMIT;
Executing (f75c6354-de7b-4ad4-909f-c83ae104cfa4): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=t_1JJ01NYpg' LIMIT 1;
Updating entry
Executing (0ebfff66-ccd3-47c1-a4ce-77728adcee48): START TRANSACTION;
Executing (f75c6354-de7b-4ad4-909f-c83ae104cfa4): COMMIT;
Executing (0ebfff66-ccd3-47c1-a4ce-77728adcee48): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=x0bei3FcK2g' LIMIT 1;
Updating entry
Executing (d053d3d5-d9f3-417b-9edd-003c87803a1e): START TRANSACTION;
Executing (7cfc767d-2be9-49ef-88b5-2be7876e5667): START TRANSACTION;
Executing (0ebfff66-ccd3-47c1-a4ce-77728adcee48): COMMIT;
Executing (d053d3d5-d9f3-417b-9edd-003c87803a1e): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=tNAeHgKSjdU' LIMIT 1;
Executing (7cfc767d-2be9-49ef-88b5-2be7876e5667): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=_bWH7kgZKzE' LIMIT 1;
Updating entry
Executing (4895b566-c98a-4b57-b6c8-2009b19ce77b): START TRANSACTION;
Executing (d053d3d5-d9f3-417b-9edd-003c87803a1e): COMMIT;
Executing (7cfc767d-2be9-49ef-88b5-2be7876e5667): COMMIT;
Executing (4895b566-c98a-4b57-b6c8-2009b19ce77b): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=ZUTkCCT4RVw' LIMIT 1;
Updating entry
Executing (1bbbb1d1-cdcb-4eb4-816d-fc20f07c08d0): START TRANSACTION;
Updating entry
Executing (09ec5056-b2f2-4586-a4ff-1f6e3967da0b): START TRANSACTION;
Executing (4895b566-c98a-4b57-b6c8-2009b19ce77b): COMMIT;
Executing (c471d610-0def-4ba1-9071-31b6f0c467b0): START TRANSACTION;
Executing (1bbbb1d1-cdcb-4eb4-816d-fc20f07c08d0): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=GBUbjuARUMM' LIMIT 1;
Executing (09ec5056-b2f2-4586-a4ff-1f6e3967da0b): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=g9Sz9qOh60o' LIMIT 1;
Updating entry
Executing (c471d610-0def-4ba1-9071-31b6f0c467b0): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=ZKSNiuPi3gY' LIMIT 1;
Executing (1bbbb1d1-cdcb-4eb4-816d-fc20f07c08d0): COMMIT;
Executing (09ec5056-b2f2-4586-a4ff-1f6e3967da0b): COMMIT;
Updating entry
Updating entry
Executing (c471d610-0def-4ba1-9071-31b6f0c467b0): COMMIT;
Updating entry
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '20';
31 40  [] 0
done
31 40 【明日方舟/Arknights】[CE-3] - Low Lvl-Rarity Squad - Arknights Strategy	0gCRaiF4ANw	https://www.youtube.com/watch?v=0gCRaiF4ANw
【明日方舟/Arknights】[CE-2] - Low Lvl-Rarity Squad - Arknights Strategy	MKGo6BbhHR0	https://www.youtube.com/watch?v=MKGo6BbhHR0
【明日方舟/Arknights】[CE-1] - Low Lvl-Rarity Squad - Arknights Strategy	oRImX2rQ_YY	https://www.youtube.com/watch?v=oRImX2rQ_YY
【明日方舟/Arknights】[LS-5] - Low Lvl-Rarity Squad - Arknights Strategy	mKbAK1-Q6fI	https://www.youtube.com/watch?v=mKbAK1-Q6fI
【明日方舟/Arknights】[LS-4] - Low Lvl-Rarity Squad - Arknights Strategy	ElelB6uh3ro	https://www.youtube.com/watch?v=ElelB6uh3ro
【明日方舟/Arknights】[LS-3] - Low Lvl-Rarity Squad - Arknights Strategy	tK1W62oUa0Q	https://www.youtube.com/watch?v=tK1W62oUa0Q
【明日方舟/Arknights】[LS-2] - Low Lvl-Rarity Squad - Arknights Strategy	oE2Lta6Bm1E	https://www.youtube.com/watch?v=oE2Lta6Bm1E
【明日方舟/Arknights】[LS-1] - Low Lvl-Rarity Squad - Arknights Strategy	hYutVgnjpw4	https://www.youtube.com/watch?v=hYutVgnjpw4
CE-6 | Low End Squad |【Arknights】	wrN6P_L4vxA	https://www.youtube.com/watch?v=wrN6P_L4vxA
LS-6 | Low End Squad |【Arknights】	0AW7lJoN5e8	https://www.youtube.com/watch?v=0AW7lJoN5e8
 [
  '【明日方舟/Arknights】[CE-3] - Low Lvl-Rarity Squad - Arknights Strategy\t0gCRaiF4ANw\thttps://www.youtube.com/watch?v=0gCRaiF4ANw',
  '【明日方舟/Arknights】[CE-2] - Low Lvl-Rarity Squad - Arknights Strategy\tMKGo6BbhHR0\thttps://www.youtube.com/watch?v=MKGo6BbhHR0',
  '【明日方舟/Arknights】[CE-1] - Low Lvl-Rarity Squad - Arknights Strategy\toRImX2rQ_YY\thttps://www.youtube.com/watch?v=oRImX2rQ_YY',
  '【明日方舟/Arknights】[LS-5] - Low Lvl-Rarity Squad - Arknights Strategy\tmKbAK1-Q6fI\thttps://www.youtube.com/watch?v=mKbAK1-Q6fI',
  '【明日方舟/Arknights】[LS-4] - Low Lvl-Rarity Squad - Arknights Strategy\tElelB6uh3ro\thttps://www.youtube.com/watch?v=ElelB6uh3ro',
  '【明日方舟/Arknights】[LS-3] - Low Lvl-Rarity Squad - Arknights Strategy\ttK1W62oUa0Q\thttps://www.youtube.com/watch?v=tK1W62oUa0Q',
  '【明日方舟/Arknights】[LS-2] - Low Lvl-Rarity Squad - Arknights Strategy\toE2Lta6Bm1E\thttps://www.youtube.com/watch?v=oE2Lta6Bm1E',
  '【明日方舟/Arknights】[LS-1] - Low Lvl-Rarity Squad - Arknights Strategy\thYutVgnjpw4\thttps://www.youtube.com/watch?v=hYutVgnjpw4',
  'CE-6 | Low End Squad |【Arknights】\twrN6P_L4vxA\thttps://www.youtube.com/watch?v=wrN6P_L4vxA',
  'LS-6 | Low End Squad |【Arknights】\t0AW7lJoN5e8\thttps://www.youtube.com/watch?v=0AW7lJoN5e8'
] 10
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
31 40 【明日方舟/Arknights】[CE-3] - Low Lvl-Rarity Squad - Arknights Strategy	0gCRaiF4ANw	https://www.youtube.com/watch?v=0gCRaiF4ANw
【明日方舟/Arknights】[CE-2] - Low Lvl-Rarity Squad - Arknights Strategy	MKGo6BbhHR0	https://www.youtube.com/watch?v=MKGo6BbhHR0
【明日方舟/Arknights】[CE-1] - Low Lvl-Rarity Squad - Arknights Strategy	oRImX2rQ_YY	https://www.youtube.com/watch?v=oRImX2rQ_YY
【明日方舟/Arknights】[LS-5] - Low Lvl-Rarity Squad - Arknights Strategy	mKbAK1-Q6fI	https://www.youtube.com/watch?v=mKbAK1-Q6fI
【明日方舟/Arknights】[LS-4] - Low Lvl-Rarity Squad - Arknights Strategy	ElelB6uh3ro	https://www.youtube.com/watch?v=ElelB6uh3ro
【明日方舟/Arknights】[LS-3] - Low Lvl-Rarity Squad - Arknights Strategy	tK1W62oUa0Q	https://www.youtube.com/watch?v=tK1W62oUa0Q
【明日方舟/Arknights】[LS-2] - Low Lvl-Rarity Squad - Arknights Strategy	oE2Lta6Bm1E	https://www.youtube.com/watch?v=oE2Lta6Bm1E
【明日方舟/Arknights】[LS-1] - Low Lvl-Rarity Squad - Arknights Strategy	hYutVgnjpw4	https://www.youtube.com/watch?v=hYutVgnjpw4
CE-6 | Low End Squad |【Arknights】	wrN6P_L4vxA	https://www.youtube.com/watch?v=wrN6P_L4vxA
LS-6 | Low End Squad |【Arknights】	0AW7lJoN5e8	https://www.youtube.com/watch?v=0AW7lJoN5e8
【明日方舟/Arknights】[SK-3] - Low Lvl-Rarity Squad - Arknights Strategy	9WKUyI92fpc	https://www.youtube.com/watch?v=9WKUyI92fpc
【明日方舟/Arknights】[SK-2] - Low Lvl-Rarity Squad - Arknights Strategy	5yI0ZwJUCFE	https://www.youtube.com/watch?v=5yI0ZwJUCFE
【明日方舟/Arknights】[SK-1] - Low Lvl-Rarity Squad - Arknights Strategy	iiBMSo6vgzc	https://www.youtube.com/watch?v=iiBMSo6vgzc
【明日方舟/Arknights】[CA-5] - Low Rarity Squad - Arknights Strategy	zCKsX4yMNKA	https://www.youtube.com/watch?v=zCKsX4yMNKA
【明日方舟/Arknights】[CA-4] - Low Lvl-Rarity Squad - Arknights Strategy	ueJAJD90DiM	https://www.youtube.com/watch?v=ueJAJD90DiM
【明日方舟/Arknights】[CA-3] - Low Lvl-Rarity Squad - Arknights Strategy	aPbOPcKj3tA	https://www.youtube.com/watch?v=aPbOPcKj3tA
【明日方舟/Arknights】[CA-2] - Low Lvl-Rarity Squad - Arknights Strategy	AE8RnBDMQJU	https://www.youtube.com/watch?v=AE8RnBDMQJU
【明日方舟/Arknights】[CA-1] - Low Lvl-Rarity Squad - Arknights Strategy	O4KIOf29BZc	https://www.youtube.com/watch?v=O4KIOf29BZc
【明日方舟/Arknights】[CE-5] - Low Lvl-Rarity Squad - Arknights Strategy	eucMkZ_9Qo0	https://www.youtube.com/watch?v=eucMkZ_9Qo0
【明日方舟/Arknights】[CE-4] - Low Lvl-Rarity Squad - Arknights Strategy	dSk5HDLxVtk	https://www.youtube.com/watch?v=dSk5HDLxVtk
 [
  '【明日方舟/Arknights】[CE-3] - Low Lvl-Rarity Squad - Arknights Strategy\t0gCRaiF4ANw\thttps://www.youtube.com/watch?v=0gCRaiF4ANw',
  '【明日方舟/Arknights】[CE-2] - Low Lvl-Rarity Squad - Arknights Strategy\tMKGo6BbhHR0\thttps://www.youtube.com/watch?v=MKGo6BbhHR0',
  '【明日方舟/Arknights】[CE-1] - Low Lvl-Rarity Squad - Arknights Strategy\toRImX2rQ_YY\thttps://www.youtube.com/watch?v=oRImX2rQ_YY',
  '【明日方舟/Arknights】[LS-5] - Low Lvl-Rarity Squad - Arknights Strategy\tmKbAK1-Q6fI\thttps://www.youtube.com/watch?v=mKbAK1-Q6fI',
  '【明日方舟/Arknights】[LS-4] - Low Lvl-Rarity Squad - Arknights Strategy\tElelB6uh3ro\thttps://www.youtube.com/watch?v=ElelB6uh3ro',
  '【明日方舟/Arknights】[LS-3] - Low Lvl-Rarity Squad - Arknights Strategy\ttK1W62oUa0Q\thttps://www.youtube.com/watch?v=tK1W62oUa0Q',
  '【明日方舟/Arknights】[LS-2] - Low Lvl-Rarity Squad - Arknights Strategy\toE2Lta6Bm1E\thttps://www.youtube.com/watch?v=oE2Lta6Bm1E',
  '【明日方舟/Arknights】[LS-1] - Low Lvl-Rarity Squad - Arknights Strategy\thYutVgnjpw4\thttps://www.youtube.com/watch?v=hYutVgnjpw4',
  'CE-6 | Low End Squad |【Arknights】\twrN6P_L4vxA\thttps://www.youtube.com/watch?v=wrN6P_L4vxA',
  'LS-6 | Low End Squad |【Arknights】\t0AW7lJoN5e8\thttps://www.youtube.com/watch?v=0AW7lJoN5e8',
  '【明日方舟/Arknights】[SK-3] - Low Lvl-Rarity Squad - Arknights Strategy\t9WKUyI92fpc\thttps://www.youtube.com/watch?v=9WKUyI92fpc',
  '【明日方舟/Arknights】[SK-2] - Low Lvl-Rarity Squad - Arknights Strategy\t5yI0ZwJUCFE\thttps://www.youtube.com/watch?v=5yI0ZwJUCFE',
  '【明日方舟/Arknights】[SK-1] - Low Lvl-Rarity Squad - Arknights Strategy\tiiBMSo6vgzc\thttps://www.youtube.com/watch?v=iiBMSo6vgzc',
  '【明日方舟/Arknights】[CA-5] - Low Rarity Squad - Arknights Strategy\tzCKsX4yMNKA\thttps://www.youtube.com/watch?v=zCKsX4yMNKA',
  '【明日方舟/Arknights】[CA-4] - Low Lvl-Rarity Squad - Arknights Strategy\tueJAJD90DiM\thttps://www.youtube.com/watch?v=ueJAJD90DiM',
  '【明日方舟/Arknights】[CA-3] - Low Lvl-Rarity Squad - Arknights Strategy\taPbOPcKj3tA\thttps://www.youtube.com/watch?v=aPbOPcKj3tA',
  '【明日方舟/Arknights】[CA-2] - Low Lvl-Rarity Squad - Arknights Strategy\tAE8RnBDMQJU\thttps://www.youtube.com/watch?v=AE8RnBDMQJU',
  '【明日方舟/Arknights】[CA-1] - Low Lvl-Rarity Squad - Arknights Strategy\tO4KIOf29BZc\thttps://www.youtube.com/watch?v=O4KIOf29BZc',
  '【明日方舟/Arknights】[CE-5] - Low Lvl-Rarity Squad - Arknights Strategy\teucMkZ_9Qo0\thttps://www.youtube.com/watch?v=eucMkZ_9Qo0',
  '【明日方舟/Arknights】[CE-4] - Low Lvl-Rarity Squad - Arknights Strategy\tdSk5HDLxVtk\thttps://www.youtube.com/watch?v=dSk5HDLxVtk'
] 20
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '30';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL0vfts4VzfNg__PkSVKhrYvdc35kHybBy';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL0vfts4VzfNg__PkSVKhrYvdc35kHybBy' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL0vfts4VzfNg__PkSVKhrYvdc35kHybBy';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL0vfts4VzfNg__PkSVKhrYvdc35kHybBy' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL0vfts4VzfNg__PkSVKhrYvdc35kHybBy';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL0vfts4VzfNg__PkSVKhrYvdc35kHybBy' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLmNp3NTX4KXIxmyNoDh2j6lsrzIQwp72S';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLmNp3NTX4KXIxmyNoDh2j6lsrzIQwp72S' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLmNp3NTX4KXIxmyNoDh2j6lsrzIQwp72S';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLmNp3NTX4KXIxmyNoDh2j6lsrzIQwp72S' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLmNp3NTX4KXIxmyNoDh2j6lsrzIQwp72S';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLmNp3NTX4KXIxmyNoDh2j6lsrzIQwp72S' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PLNgrku2z_iBlzKLmFg0R2BwRZUh1Cyrzt' LIMIT 10 OFFSET '0';
body_url: https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU start_num: 1 stop_num: 10
[
  'FGO Servant Spotlight: Saber (Artoria/Altria) Analysis, Guide and Tips\tYtfqMvy9Km0\thttps://www.youtube.com/watch?v=YtfqMvy9Km0',
  'FGO Servant Spotlight: Gilgamesh Analysis, Guide and Tips\t_W8LbgoYJ4E\thttps://www.youtube.com/watch?v=_W8LbgoYJ4E',
  "FGO Servant Spotlight: Jeanne d'Arc Analysis, Guide and Tips\tzjnbAQQ8GaU\thttps://www.youtube.com/watch?v=zjnbAQQ8GaU",
  'FGO Servant Spotlight: Emiya / Archer Analysis, Guide and Tips\tJ0jmpLr_-8k\thttps://www.youtube.com/watch?v=J0jmpLr_-8k',
  'FGO Servant Spotlight: Nero Analysis, Guide and Tips\tZcWKzSWNoTw\thttps://www.youtube.com/watch?v=ZcWKzSWNoTw',
  'FGO Servant Spotlight: Hercules Analysis, Guide and Tips\tM8vyzZOlXGs\thttps://www.youtube.com/watch?v=M8vyzZOlXGs',
  'FGO Servant Spotlight: Vlad III Analysis, Guide and Tips\t_aUdMslhSuk\thttps://www.youtube.com/watch?v=_aUdMslhSuk',
  'FGO Servant Spotlight: Lancelot Analysis, Guide and Tips\tBCwp2N8OUOY\thttps://www.youtube.com/watch?v=BCwp2N8OUOY',
  'FGO Servant Spotlight: Altera Analysis, Guide and Tips\tSil9fb73Yvo\thttps://www.youtube.com/watch?v=Sil9fb73Yvo',
  'FGO Servant Spotlight: Orion Analysis, Guide and Tips\tcJm9yEpgVYg\thttps://www.youtube.com/watch?v=cJm9yEpgVYg'
] 10
Executing (default): SELECT "title", "url", "order_added", "createdAt", "updatedAt" FROM "play_lists" AS "play_lists" WHERE "play_lists"."url" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
playlist not enocuntered

listing in background

body_url https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU start_num 1 stop_num 10 chunk_size 10
response None
resposne != 'done':  true
start_num: 11 stop_num: 20 chunk_size: 10
response 
resposne != 'done':  true
start_num: 21 stop_num: 30 chunk_size: 10
response 
resposne != 'done':  true
start_num: 31 stop_num: 40 chunk_size: 10
response 
resposne != 'done':  true
breaking to not crash and burn
================================
Outside loop
response 
resposne != 'done':  true
done listing
Executing (47c532fe-28c0-4bbf-98f3-295f623e343c): START TRANSACTION;
Executing (548893c4-a0e1-45ca-b0e8-088c9687daf4): START TRANSACTION;
Executing (47c532fe-28c0-4bbf-98f3-295f623e343c): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=YtfqMvy9Km0' LIMIT 1;
Executing (548893c4-a0e1-45ca-b0e8-088c9687daf4): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=_W8LbgoYJ4E' LIMIT 1;
Executing (47c532fe-28c0-4bbf-98f3-295f623e343c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f670741b3a99459c97624ade06b854c6$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=YtfqMvy9Km0','YtfqMvy9Km0','FGO Servant Spotlight: Saber (Artoria/Altria) Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:34.749 +00:00','2023-02-15 11:55:34.749 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f670741b3a99459c97624ade06b854c6$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (548893c4-a0e1-45ca-b0e8-088c9687daf4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0e13cfcec86c4f058cd361b5cd10a130$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=_W8LbgoYJ4E','_W8LbgoYJ4E','FGO Servant Spotlight: Gilgamesh Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:34.751 +00:00','2023-02-15 11:55:34.751 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0e13cfcec86c4f058cd361b5cd10a130$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (47c532fe-28c0-4bbf-98f3-295f623e343c): COMMIT;
Executing (548893c4-a0e1-45ca-b0e8-088c9687daf4): COMMIT;
Updating entry
Executing (a3ed9e35-18bd-4c80-9a79-43eada518894): START TRANSACTION;
Executing (a3ed9e35-18bd-4c80-9a79-43eada518894): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=zjnbAQQ8GaU' LIMIT 1;
Updating entry
Executing (509752a5-2b78-4550-9811-79221fd7c9ea): START TRANSACTION;
Executing (a3ed9e35-18bd-4c80-9a79-43eada518894): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_85e3bf2cb26d4417aaf19183f7297357$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=zjnbAQQ8GaU','zjnbAQQ8GaU','FGO Servant Spotlight: Jeanne d''Arc Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:34.985 +00:00','2023-02-15 11:55:34.985 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_85e3bf2cb26d4417aaf19183f7297357$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (509752a5-2b78-4550-9811-79221fd7c9ea): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=J0jmpLr_-8k' LIMIT 1;
Executing (a3ed9e35-18bd-4c80-9a79-43eada518894): COMMIT;
Executing (5d0ee8ac-4ee4-4a35-b5ce-b4958b21405b): START TRANSACTION;
Executing (99f3e2af-8535-4aba-a7f6-e6298ecee53f): START TRANSACTION;
Executing (509752a5-2b78-4550-9811-79221fd7c9ea): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_3fbb4e66829a46f9a829f24b1e6d58e0$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=J0jmpLr_-8k','J0jmpLr_-8k','FGO Servant Spotlight: Emiya / Archer Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:35.066 +00:00','2023-02-15 11:55:35.066 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_3fbb4e66829a46f9a829f24b1e6d58e0$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (5d0ee8ac-4ee4-4a35-b5ce-b4958b21405b): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=ZcWKzSWNoTw' LIMIT 1;
Executing (99f3e2af-8535-4aba-a7f6-e6298ecee53f): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=M8vyzZOlXGs' LIMIT 1;
Executing (5d0ee8ac-4ee4-4a35-b5ce-b4958b21405b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_484806d79d7547fabacaf9af324336ef$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=ZcWKzSWNoTw','ZcWKzSWNoTw','FGO Servant Spotlight: Nero Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:35.072 +00:00','2023-02-15 11:55:35.072 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_484806d79d7547fabacaf9af324336ef$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (509752a5-2b78-4550-9811-79221fd7c9ea): COMMIT;
Updating entry
Executing (75a33ce2-5f2f-44f4-a1c9-7231d0fcca97): START TRANSACTION;
Executing (5d0ee8ac-4ee4-4a35-b5ce-b4958b21405b): COMMIT;
Executing (75a33ce2-5f2f-44f4-a1c9-7231d0fcca97): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=_aUdMslhSuk' LIMIT 1;
Executing (6d97441c-f5f0-497b-8b92-442418a590ca): START TRANSACTION;
Executing (99f3e2af-8535-4aba-a7f6-e6298ecee53f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f447ba178b7d49eeb6d65e0584c80678$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=M8vyzZOlXGs','M8vyzZOlXGs','FGO Servant Spotlight: Hercules Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:35.082 +00:00','2023-02-15 11:55:35.082 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f447ba178b7d49eeb6d65e0584c80678$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Updating entry
Executing (ac90fbff-4167-4c9d-9eac-127861126ee6): START TRANSACTION;
Executing (75a33ce2-5f2f-44f4-a1c9-7231d0fcca97): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f3c1dd30e951402d98ac93c59b771dbb$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=_aUdMslhSuk','_aUdMslhSuk','FGO Servant Spotlight: Vlad III Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:35.086 +00:00','2023-02-15 11:55:35.086 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f3c1dd30e951402d98ac93c59b771dbb$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6d97441c-f5f0-497b-8b92-442418a590ca): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=BCwp2N8OUOY' LIMIT 1;
Updating entry
Executing (76e2fd3f-d56e-4ffb-bcf8-584029e75d9b): START TRANSACTION;
Executing (ac90fbff-4167-4c9d-9eac-127861126ee6): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=Sil9fb73Yvo' LIMIT 1;
Executing (75a33ce2-5f2f-44f4-a1c9-7231d0fcca97): COMMIT;
Executing (99f3e2af-8535-4aba-a7f6-e6298ecee53f): COMMIT;
Executing (ac90fbff-4167-4c9d-9eac-127861126ee6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_28d3632c18b94d6aa249cbdc9015cf27$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=Sil9fb73Yvo','Sil9fb73Yvo','FGO Servant Spotlight: Altera Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:35.093 +00:00','2023-02-15 11:55:35.093 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_28d3632c18b94d6aa249cbdc9015cf27$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (6d97441c-f5f0-497b-8b92-442418a590ca): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_febf211ebf7e466c9a52f9984be248bf$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=BCwp2N8OUOY','BCwp2N8OUOY','FGO Servant Spotlight: Lancelot Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:35.096 +00:00','2023-02-15 11:55:35.096 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_febf211ebf7e466c9a52f9984be248bf$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (76e2fd3f-d56e-4ffb-bcf8-584029e75d9b): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=cJm9yEpgVYg' LIMIT 1;
Executing (ac90fbff-4167-4c9d-9eac-127861126ee6): COMMIT;
Executing (76e2fd3f-d56e-4ffb-bcf8-584029e75d9b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5f1d36723a1442e48aa39eccb2285199$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=cJm9yEpgVYg','cJm9yEpgVYg','FGO Servant Spotlight: Orion Analysis, Guide and Tips',false,true,'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:35.100 +00:00','2023-02-15 11:55:35.100 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5f1d36723a1442e48aa39eccb2285199$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Updating entry
Updating entry
Updating entry
Executing (76e2fd3f-d56e-4ffb-bcf8-584029e75d9b): COMMIT;
Executing (6d97441c-f5f0-497b-8b92-442418a590ca): COMMIT;
Updating entry
Updating entry
Executing (bc4511c3-3a13-4329-b144-a01d18d5e9cd): START TRANSACTION;
Executing (bc4511c3-3a13-4329-b144-a01d18d5e9cd): SELECT "title", "url", "order_added", "createdAt", "updatedAt" FROM "play_lists" AS "play_lists" WHERE "play_lists"."url" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (bc4511c3-3a13-4329-b144-a01d18d5e9cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "play_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d4fdcba301834002aa707d5607b86587$ BEGIN INSERT INTO "play_lists" ("title","url","createdAt","updatedAt") VALUES ('Servant Spotlight
','https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU','2023-02-15 11:55:37.558 +00:00','2023-02-15 11:55:37.558 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d4fdcba301834002aa707d5607b86587$ LANGUAGE plpgsql; SELECT (testfunc.response)."title", (testfunc.response)."url", (testfunc.response)."order_added", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (bc4511c3-3a13-4329-b144-a01d18d5e9cd): COMMIT;
31 40 FGO Servant Spotlight: Marie Antoinette Analysis, Guide and Tips	6AA5V4AuBfM	https://www.youtube.com/watch?v=6AA5V4AuBfM
FGO Servant Spotlight: Saint Martha Analysis, Guide and Tips	SxXj7g9zBm8	https://www.youtube.com/watch?v=SxXj7g9zBm8
FGO Servant Spotlight: Elisabeth (Halloween) Analysis, Guide and Tips	YzH_gBQvCQw	https://www.youtube.com/watch?v=YzH_gBQvCQw
FGO Servant Spotlight: Tamamo no Mae Analysis, Guide and Tips	PDgcvQS85tY	https://www.youtube.com/watch?v=PDgcvQS85tY
FGO Servant Spotlight: Okita Analysis, Guide and Tips	s9RVT4NScS0	https://www.youtube.com/watch?v=s9RVT4NScS0
FGO Servant Spotlight: Nobunaga Analysis, Guide and Tips	KKPBhs5J574	https://www.youtube.com/watch?v=KKPBhs5J574
FGO Servant Spotlight: Scathach Analysis, Guide and Tips	uR5Ax-yN6fU	https://www.youtube.com/watch?v=uR5Ax-yN6fU
FGO Servant Spotlight: Diarmuid Analysis, Guide and Tips	1debNi9SIFU	https://www.youtube.com/watch?v=1debNi9SIFU
FGO Servant Spotlight: Fergus Analysis, Guide and Tips	kRvMGz4XOpI	https://www.youtube.com/watch?v=kRvMGz4XOpI
FGO Servant Spotlight: Jack the Ripper Analysis, Guide and Tips	ok4RhfgW76c	https://www.youtube.com/watch?v=ok4RhfgW76c
FGO Servant Spotlight: Nursery Rhyme Analysis, Guide and Tips	AE7VNEecAWQ	https://www.youtube.com/watch?v=AE7VNEecAWQ
FGO Servant Spotlight: Saber Santa Alter Analysis, Guide and Tips	4JzWVtkUnGk	https://www.youtube.com/watch?v=4JzWVtkUnGk
FGO Servant Spotlight: Elizabeth (Lancer) Analysis, Guide and Tips	1OiuPvs-zCc	https://www.youtube.com/watch?v=1OiuPvs-zCc
FGO Servant Spotlight: Carmilla Analysis, Guide and Tips	myke2ds-p6k	https://www.youtube.com/watch?v=myke2ds-p6k
FGO Servant Spotlight: Frankenstein Analysis, Guide and Tips	e0B1RMyax6E	https://www.youtube.com/watch?v=e0B1RMyax6E
FGO Servant Spotlight: Mordred Analysis, Guide and Tips	UuSVR8KMtO4	https://www.youtube.com/watch?v=UuSVR8KMtO4
FGO Servant Spotlight: Nikola Tesla Analysis, Guide and Tips	4xBljLb-Ht4	https://www.youtube.com/watch?v=4xBljLb-Ht4
FGO Servant Spotlight: Arturia Alter Lancer Analysis, Guide and Tips	B3MqDQXyl2w	https://www.youtube.com/watch?v=B3MqDQXyl2w
FGO Servant Spotlight: Arjuna Analysis, Guide and Tips	3rylXDep4i4	https://www.youtube.com/watch?v=3rylXDep4i4
FGO Servant Spotlight: Karna Analysis, Guide and Tips	eotnsjtpPHM	https://www.youtube.com/watch?v=eotnsjtpPHM
FGO Servant Spotlight: Kintoki Analysis, Guide and Tips	RQnhYQNUZvQ	https://www.youtube.com/watch?v=RQnhYQNUZvQ
FGO Servant Spotlight: Saber Alter Analysis, Guide and Tips	DLPr-XxlV58	https://www.youtube.com/watch?v=DLPr-XxlV58
FGO Servant Spotlight: Atalanta Analysis, Guide and Tips	KzC2Bt35Yoo	https://www.youtube.com/watch?v=KzC2Bt35Yoo
FGO Servant Spotlight: Zhuge Liang / Waver Analysis, Guide and Tips	Qc5ZpM_mdag	https://www.youtube.com/watch?v=Qc5ZpM_mdag
FGO Servant Spotlight: Hector Analysis, Guide and Tips	tD99g1eD_eQ	https://www.youtube.com/watch?v=tD99g1eD_eQ
FGO Servant Spotlight: Euryale Analysis, Guide and Tips	GVQe2jE8bqw	https://www.youtube.com/watch?v=GVQe2jE8bqw
 [
  'FGO Servant Spotlight: Marie Antoinette Analysis, Guide and Tips\t6AA5V4AuBfM\thttps://www.youtube.com/watch?v=6AA5V4AuBfM',
  'FGO Servant Spotlight: Saint Martha Analysis, Guide and Tips\tSxXj7g9zBm8\thttps://www.youtube.com/watch?v=SxXj7g9zBm8',
  'FGO Servant Spotlight: Elisabeth (Halloween) Analysis, Guide and Tips\tYzH_gBQvCQw\thttps://www.youtube.com/watch?v=YzH_gBQvCQw',
  'FGO Servant Spotlight: Tamamo no Mae Analysis, Guide and Tips\tPDgcvQS85tY\thttps://www.youtube.com/watch?v=PDgcvQS85tY',
  'FGO Servant Spotlight: Okita Analysis, Guide and Tips\ts9RVT4NScS0\thttps://www.youtube.com/watch?v=s9RVT4NScS0',
  'FGO Servant Spotlight: Nobunaga Analysis, Guide and Tips\tKKPBhs5J574\thttps://www.youtube.com/watch?v=KKPBhs5J574',
  'FGO Servant Spotlight: Scathach Analysis, Guide and Tips\tuR5Ax-yN6fU\thttps://www.youtube.com/watch?v=uR5Ax-yN6fU',
  'FGO Servant Spotlight: Diarmuid Analysis, Guide and Tips\t1debNi9SIFU\thttps://www.youtube.com/watch?v=1debNi9SIFU',
  'FGO Servant Spotlight: Fergus Analysis, Guide and Tips\tkRvMGz4XOpI\thttps://www.youtube.com/watch?v=kRvMGz4XOpI',
  'FGO Servant Spotlight: Jack the Ripper Analysis, Guide and Tips\tok4RhfgW76c\thttps://www.youtube.com/watch?v=ok4RhfgW76c',
  'FGO Servant Spotlight: Nursery Rhyme Analysis, Guide and Tips\tAE7VNEecAWQ\thttps://www.youtube.com/watch?v=AE7VNEecAWQ',
  'FGO Servant Spotlight: Saber Santa Alter Analysis, Guide and Tips\t4JzWVtkUnGk\thttps://www.youtube.com/watch?v=4JzWVtkUnGk',
  'FGO Servant Spotlight: Elizabeth (Lancer) Analysis, Guide and Tips\t1OiuPvs-zCc\thttps://www.youtube.com/watch?v=1OiuPvs-zCc',
  'FGO Servant Spotlight: Carmilla Analysis, Guide and Tips\tmyke2ds-p6k\thttps://www.youtube.com/watch?v=myke2ds-p6k',
  'FGO Servant Spotlight: Frankenstein Analysis, Guide and Tips\te0B1RMyax6E\thttps://www.youtube.com/watch?v=e0B1RMyax6E',
  'FGO Servant Spotlight: Mordred Analysis, Guide and Tips\tUuSVR8KMtO4\thttps://www.youtube.com/watch?v=UuSVR8KMtO4',
  'FGO Servant Spotlight: Nikola Tesla Analysis, Guide and Tips\t4xBljLb-Ht4\thttps://www.youtube.com/watch?v=4xBljLb-Ht4',
  'FGO Servant Spotlight: Arturia Alter Lancer Analysis, Guide and Tips\tB3MqDQXyl2w\thttps://www.youtube.com/watch?v=B3MqDQXyl2w',
  'FGO Servant Spotlight: Arjuna Analysis, Guide and Tips\t3rylXDep4i4\thttps://www.youtube.com/watch?v=3rylXDep4i4',
  'FGO Servant Spotlight: Karna Analysis, Guide and Tips\teotnsjtpPHM\thttps://www.youtube.com/watch?v=eotnsjtpPHM',
  'FGO Servant Spotlight: Kintoki Analysis, Guide and Tips\tRQnhYQNUZvQ\thttps://www.youtube.com/watch?v=RQnhYQNUZvQ',
  'FGO Servant Spotlight: Saber Alter Analysis, Guide and Tips\tDLPr-XxlV58\thttps://www.youtube.com/watch?v=DLPr-XxlV58',
  'FGO Servant Spotlight: Atalanta Analysis, Guide and Tips\tKzC2Bt35Yoo\thttps://www.youtube.com/watch?v=KzC2Bt35Yoo',
  'FGO Servant Spotlight: Zhuge Liang / Waver Analysis, Guide and Tips\tQc5ZpM_mdag\thttps://www.youtube.com/watch?v=Qc5ZpM_mdag',
  'FGO Servant Spotlight: Hector Analysis, Guide and Tips\ttD99g1eD_eQ\thttps://www.youtube.com/watch?v=tD99g1eD_eQ',
  'FGO Servant Spotlight: Euryale Analysis, Guide and Tips\tGVQe2jE8bqw\thttps://www.youtube.com/watch?v=GVQe2jE8bqw'
] 26
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Marie Antoinette Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Saint Martha Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Elisabeth (Halloween) Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Tamamo no Mae Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Okita Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Nobunaga Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Scathach Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Diarmuid Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Fergus Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Nursery Rhyme Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Saber Santa Alter Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Elizabeth (Lancer) Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Carmilla Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Jack the Ripper Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Frankenstein Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Mordred Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Nikola Tesla Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Arturia Alter Lancer Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Karna Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Kintoki Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Saber Alter Analysis, Guide and Tips saved
FGO Servant Spotlight: Atalanta Analysis, Guide and Tips saved
FGO Servant Spotlight: Arjuna Analysis, Guide and Tips saved
FGO Servant Spotlight: Zhuge Liang / Waver Analysis, Guide and Tips saved
FGO Servant Spotlight: Hector Analysis, Guide and Tips saved
FGO Servant Spotlight: Euryale Analysis, Guide and Tips saved
31 40 FGO Servant Spotlight: Marie Antoinette Analysis, Guide and Tips	6AA5V4AuBfM	https://www.youtube.com/watch?v=6AA5V4AuBfM
FGO Servant Spotlight: Saint Martha Analysis, Guide and Tips	SxXj7g9zBm8	https://www.youtube.com/watch?v=SxXj7g9zBm8
FGO Servant Spotlight: Elisabeth (Halloween) Analysis, Guide and Tips	YzH_gBQvCQw	https://www.youtube.com/watch?v=YzH_gBQvCQw
FGO Servant Spotlight: Tamamo no Mae Analysis, Guide and Tips	PDgcvQS85tY	https://www.youtube.com/watch?v=PDgcvQS85tY
FGO Servant Spotlight: Okita Analysis, Guide and Tips	s9RVT4NScS0	https://www.youtube.com/watch?v=s9RVT4NScS0
FGO Servant Spotlight: Nobunaga Analysis, Guide and Tips	KKPBhs5J574	https://www.youtube.com/watch?v=KKPBhs5J574
FGO Servant Spotlight: Scathach Analysis, Guide and Tips	uR5Ax-yN6fU	https://www.youtube.com/watch?v=uR5Ax-yN6fU
FGO Servant Spotlight: Diarmuid Analysis, Guide and Tips	1debNi9SIFU	https://www.youtube.com/watch?v=1debNi9SIFU
FGO Servant Spotlight: Fergus Analysis, Guide and Tips	kRvMGz4XOpI	https://www.youtube.com/watch?v=kRvMGz4XOpI
FGO Servant Spotlight: Jack the Ripper Analysis, Guide and Tips	ok4RhfgW76c	https://www.youtube.com/watch?v=ok4RhfgW76c
FGO Servant Spotlight: Nursery Rhyme Analysis, Guide and Tips	AE7VNEecAWQ	https://www.youtube.com/watch?v=AE7VNEecAWQ
FGO Servant Spotlight: Saber Santa Alter Analysis, Guide and Tips	4JzWVtkUnGk	https://www.youtube.com/watch?v=4JzWVtkUnGk
FGO Servant Spotlight: Elizabeth (Lancer) Analysis, Guide and Tips	1OiuPvs-zCc	https://www.youtube.com/watch?v=1OiuPvs-zCc
FGO Servant Spotlight: Carmilla Analysis, Guide and Tips	myke2ds-p6k	https://www.youtube.com/watch?v=myke2ds-p6k
FGO Servant Spotlight: Frankenstein Analysis, Guide and Tips	e0B1RMyax6E	https://www.youtube.com/watch?v=e0B1RMyax6E
FGO Servant Spotlight: Mordred Analysis, Guide and Tips	UuSVR8KMtO4	https://www.youtube.com/watch?v=UuSVR8KMtO4
FGO Servant Spotlight: Nikola Tesla Analysis, Guide and Tips	4xBljLb-Ht4	https://www.youtube.com/watch?v=4xBljLb-Ht4
FGO Servant Spotlight: Arturia Alter Lancer Analysis, Guide and Tips	B3MqDQXyl2w	https://www.youtube.com/watch?v=B3MqDQXyl2w
FGO Servant Spotlight: Arjuna Analysis, Guide and Tips	3rylXDep4i4	https://www.youtube.com/watch?v=3rylXDep4i4
FGO Servant Spotlight: Karna Analysis, Guide and Tips	eotnsjtpPHM	https://www.youtube.com/watch?v=eotnsjtpPHM
FGO Servant Spotlight: Kintoki Analysis, Guide and Tips	RQnhYQNUZvQ	https://www.youtube.com/watch?v=RQnhYQNUZvQ
FGO Servant Spotlight: Saber Alter Analysis, Guide and Tips	DLPr-XxlV58	https://www.youtube.com/watch?v=DLPr-XxlV58
FGO Servant Spotlight: Atalanta Analysis, Guide and Tips	KzC2Bt35Yoo	https://www.youtube.com/watch?v=KzC2Bt35Yoo
FGO Servant Spotlight: Zhuge Liang / Waver Analysis, Guide and Tips	Qc5ZpM_mdag	https://www.youtube.com/watch?v=Qc5ZpM_mdag
FGO Servant Spotlight: Hector Analysis, Guide and Tips	tD99g1eD_eQ	https://www.youtube.com/watch?v=tD99g1eD_eQ
FGO Servant Spotlight: Euryale Analysis, Guide and Tips	GVQe2jE8bqw	https://www.youtube.com/watch?v=GVQe2jE8bqw
FGO Servant Spotlight: David Analysis, Guide and Tips	iWdpLODv1HY	https://www.youtube.com/watch?v=iWdpLODv1HY
FGO Servant Spotlight: Anne Bonny & Mary Read Analysis, Guide and Tips	OP06SIBi7UI	https://www.youtube.com/watch?v=OP06SIBi7UI
FGO Servant Spotlight: Medea Lily Analysis, Guide and Tips	Cqmks6v7Q9c	https://www.youtube.com/watch?v=Cqmks6v7Q9c
FGO Servant Spotlight: Francis Drake Analysis, Guide and Tips	CQWfip9ouHE	https://www.youtube.com/watch?v=CQWfip9ouHE
 [
  'FGO Servant Spotlight: Marie Antoinette Analysis, Guide and Tips\t6AA5V4AuBfM\thttps://www.youtube.com/watch?v=6AA5V4AuBfM',
  'FGO Servant Spotlight: Saint Martha Analysis, Guide and Tips\tSxXj7g9zBm8\thttps://www.youtube.com/watch?v=SxXj7g9zBm8',
  'FGO Servant Spotlight: Elisabeth (Halloween) Analysis, Guide and Tips\tYzH_gBQvCQw\thttps://www.youtube.com/watch?v=YzH_gBQvCQw',
  'FGO Servant Spotlight: Tamamo no Mae Analysis, Guide and Tips\tPDgcvQS85tY\thttps://www.youtube.com/watch?v=PDgcvQS85tY',
  'FGO Servant Spotlight: Okita Analysis, Guide and Tips\ts9RVT4NScS0\thttps://www.youtube.com/watch?v=s9RVT4NScS0',
  'FGO Servant Spotlight: Nobunaga Analysis, Guide and Tips\tKKPBhs5J574\thttps://www.youtube.com/watch?v=KKPBhs5J574',
  'FGO Servant Spotlight: Scathach Analysis, Guide and Tips\tuR5Ax-yN6fU\thttps://www.youtube.com/watch?v=uR5Ax-yN6fU',
  'FGO Servant Spotlight: Diarmuid Analysis, Guide and Tips\t1debNi9SIFU\thttps://www.youtube.com/watch?v=1debNi9SIFU',
  'FGO Servant Spotlight: Fergus Analysis, Guide and Tips\tkRvMGz4XOpI\thttps://www.youtube.com/watch?v=kRvMGz4XOpI',
  'FGO Servant Spotlight: Jack the Ripper Analysis, Guide and Tips\tok4RhfgW76c\thttps://www.youtube.com/watch?v=ok4RhfgW76c',
  'FGO Servant Spotlight: Nursery Rhyme Analysis, Guide and Tips\tAE7VNEecAWQ\thttps://www.youtube.com/watch?v=AE7VNEecAWQ',
  'FGO Servant Spotlight: Saber Santa Alter Analysis, Guide and Tips\t4JzWVtkUnGk\thttps://www.youtube.com/watch?v=4JzWVtkUnGk',
  'FGO Servant Spotlight: Elizabeth (Lancer) Analysis, Guide and Tips\t1OiuPvs-zCc\thttps://www.youtube.com/watch?v=1OiuPvs-zCc',
  'FGO Servant Spotlight: Carmilla Analysis, Guide and Tips\tmyke2ds-p6k\thttps://www.youtube.com/watch?v=myke2ds-p6k',
  'FGO Servant Spotlight: Frankenstein Analysis, Guide and Tips\te0B1RMyax6E\thttps://www.youtube.com/watch?v=e0B1RMyax6E',
  'FGO Servant Spotlight: Mordred Analysis, Guide and Tips\tUuSVR8KMtO4\thttps://www.youtube.com/watch?v=UuSVR8KMtO4',
  'FGO Servant Spotlight: Nikola Tesla Analysis, Guide and Tips\t4xBljLb-Ht4\thttps://www.youtube.com/watch?v=4xBljLb-Ht4',
  'FGO Servant Spotlight: Arturia Alter Lancer Analysis, Guide and Tips\tB3MqDQXyl2w\thttps://www.youtube.com/watch?v=B3MqDQXyl2w',
  'FGO Servant Spotlight: Arjuna Analysis, Guide and Tips\t3rylXDep4i4\thttps://www.youtube.com/watch?v=3rylXDep4i4',
  'FGO Servant Spotlight: Karna Analysis, Guide and Tips\teotnsjtpPHM\thttps://www.youtube.com/watch?v=eotnsjtpPHM',
  'FGO Servant Spotlight: Kintoki Analysis, Guide and Tips\tRQnhYQNUZvQ\thttps://www.youtube.com/watch?v=RQnhYQNUZvQ',
  'FGO Servant Spotlight: Saber Alter Analysis, Guide and Tips\tDLPr-XxlV58\thttps://www.youtube.com/watch?v=DLPr-XxlV58',
  'FGO Servant Spotlight: Atalanta Analysis, Guide and Tips\tKzC2Bt35Yoo\thttps://www.youtube.com/watch?v=KzC2Bt35Yoo',
  'FGO Servant Spotlight: Zhuge Liang / Waver Analysis, Guide and Tips\tQc5ZpM_mdag\thttps://www.youtube.com/watch?v=Qc5ZpM_mdag',
  'FGO Servant Spotlight: Hector Analysis, Guide and Tips\ttD99g1eD_eQ\thttps://www.youtube.com/watch?v=tD99g1eD_eQ',
  'FGO Servant Spotlight: Euryale Analysis, Guide and Tips\tGVQe2jE8bqw\thttps://www.youtube.com/watch?v=GVQe2jE8bqw',
  'FGO Servant Spotlight: David Analysis, Guide and Tips\tiWdpLODv1HY\thttps://www.youtube.com/watch?v=iWdpLODv1HY',
  'FGO Servant Spotlight: Anne Bonny & Mary Read Analysis, Guide and Tips\tOP06SIBi7UI\thttps://www.youtube.com/watch?v=OP06SIBi7UI',
  'FGO Servant Spotlight: Medea Lily Analysis, Guide and Tips\tCqmks6v7Q9c\thttps://www.youtube.com/watch?v=Cqmks6v7Q9c',
  'FGO Servant Spotlight: Francis Drake Analysis, Guide and Tips\tCQWfip9ouHE\thttps://www.youtube.com/watch?v=CQWfip9ouHE'
] 30
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
31 40 FGO Servant Spotlight: Marie Antoinette Analysis, Guide and Tips	6AA5V4AuBfM	https://www.youtube.com/watch?v=6AA5V4AuBfM
FGO Servant Spotlight: Saint Martha Analysis, Guide and Tips	SxXj7g9zBm8	https://www.youtube.com/watch?v=SxXj7g9zBm8
FGO Servant Spotlight: Elisabeth (Halloween) Analysis, Guide and Tips	YzH_gBQvCQw	https://www.youtube.com/watch?v=YzH_gBQvCQw
FGO Servant Spotlight: Tamamo no Mae Analysis, Guide and Tips	PDgcvQS85tY	https://www.youtube.com/watch?v=PDgcvQS85tY
FGO Servant Spotlight: Okita Analysis, Guide and Tips	s9RVT4NScS0	https://www.youtube.com/watch?v=s9RVT4NScS0
FGO Servant Spotlight: Nobunaga Analysis, Guide and Tips	KKPBhs5J574	https://www.youtube.com/watch?v=KKPBhs5J574
FGO Servant Spotlight: Scathach Analysis, Guide and Tips	uR5Ax-yN6fU	https://www.youtube.com/watch?v=uR5Ax-yN6fU
FGO Servant Spotlight: Diarmuid Analysis, Guide and Tips	1debNi9SIFU	https://www.youtube.com/watch?v=1debNi9SIFU
FGO Servant Spotlight: Fergus Analysis, Guide and Tips	kRvMGz4XOpI	https://www.youtube.com/watch?v=kRvMGz4XOpI
FGO Servant Spotlight: Jack the Ripper Analysis, Guide and Tips	ok4RhfgW76c	https://www.youtube.com/watch?v=ok4RhfgW76c
FGO Servant Spotlight: Nursery Rhyme Analysis, Guide and Tips	AE7VNEecAWQ	https://www.youtube.com/watch?v=AE7VNEecAWQ
FGO Servant Spotlight: Saber Santa Alter Analysis, Guide and Tips	4JzWVtkUnGk	https://www.youtube.com/watch?v=4JzWVtkUnGk
FGO Servant Spotlight: Elizabeth (Lancer) Analysis, Guide and Tips	1OiuPvs-zCc	https://www.youtube.com/watch?v=1OiuPvs-zCc
FGO Servant Spotlight: Carmilla Analysis, Guide and Tips	myke2ds-p6k	https://www.youtube.com/watch?v=myke2ds-p6k
FGO Servant Spotlight: Frankenstein Analysis, Guide and Tips	e0B1RMyax6E	https://www.youtube.com/watch?v=e0B1RMyax6E
FGO Servant Spotlight: Mordred Analysis, Guide and Tips	UuSVR8KMtO4	https://www.youtube.com/watch?v=UuSVR8KMtO4
FGO Servant Spotlight: Nikola Tesla Analysis, Guide and Tips	4xBljLb-Ht4	https://www.youtube.com/watch?v=4xBljLb-Ht4
FGO Servant Spotlight: Arturia Alter Lancer Analysis, Guide and Tips	B3MqDQXyl2w	https://www.youtube.com/watch?v=B3MqDQXyl2w
FGO Servant Spotlight: Arjuna Analysis, Guide and Tips	3rylXDep4i4	https://www.youtube.com/watch?v=3rylXDep4i4
FGO Servant Spotlight: Karna Analysis, Guide and Tips	eotnsjtpPHM	https://www.youtube.com/watch?v=eotnsjtpPHM
FGO Servant Spotlight: Kintoki Analysis, Guide and Tips	RQnhYQNUZvQ	https://www.youtube.com/watch?v=RQnhYQNUZvQ
FGO Servant Spotlight: Saber Alter Analysis, Guide and Tips	DLPr-XxlV58	https://www.youtube.com/watch?v=DLPr-XxlV58
FGO Servant Spotlight: Atalanta Analysis, Guide and Tips	KzC2Bt35Yoo	https://www.youtube.com/watch?v=KzC2Bt35Yoo
FGO Servant Spotlight: Zhuge Liang / Waver Analysis, Guide and Tips	Qc5ZpM_mdag	https://www.youtube.com/watch?v=Qc5ZpM_mdag
FGO Servant Spotlight: Hector Analysis, Guide and Tips	tD99g1eD_eQ	https://www.youtube.com/watch?v=tD99g1eD_eQ
FGO Servant Spotlight: Euryale Analysis, Guide and Tips	GVQe2jE8bqw	https://www.youtube.com/watch?v=GVQe2jE8bqw
FGO Servant Spotlight: David Analysis, Guide and Tips	iWdpLODv1HY	https://www.youtube.com/watch?v=iWdpLODv1HY
FGO Servant Spotlight: Anne Bonny & Mary Read Analysis, Guide and Tips	OP06SIBi7UI	https://www.youtube.com/watch?v=OP06SIBi7UI
FGO Servant Spotlight: Medea Lily Analysis, Guide and Tips	Cqmks6v7Q9c	https://www.youtube.com/watch?v=Cqmks6v7Q9c
FGO Servant Spotlight: Francis Drake Analysis, Guide and Tips	CQWfip9ouHE	https://www.youtube.com/watch?v=CQWfip9ouHE
 [
  'FGO Servant Spotlight: Marie Antoinette Analysis, Guide and Tips\t6AA5V4AuBfM\thttps://www.youtube.com/watch?v=6AA5V4AuBfM',
  'FGO Servant Spotlight: Saint Martha Analysis, Guide and Tips\tSxXj7g9zBm8\thttps://www.youtube.com/watch?v=SxXj7g9zBm8',
  'FGO Servant Spotlight: Elisabeth (Halloween) Analysis, Guide and Tips\tYzH_gBQvCQw\thttps://www.youtube.com/watch?v=YzH_gBQvCQw',
  'FGO Servant Spotlight: Tamamo no Mae Analysis, Guide and Tips\tPDgcvQS85tY\thttps://www.youtube.com/watch?v=PDgcvQS85tY',
  'FGO Servant Spotlight: Okita Analysis, Guide and Tips\ts9RVT4NScS0\thttps://www.youtube.com/watch?v=s9RVT4NScS0',
  'FGO Servant Spotlight: Nobunaga Analysis, Guide and Tips\tKKPBhs5J574\thttps://www.youtube.com/watch?v=KKPBhs5J574',
  'FGO Servant Spotlight: Scathach Analysis, Guide and Tips\tuR5Ax-yN6fU\thttps://www.youtube.com/watch?v=uR5Ax-yN6fU',
  'FGO Servant Spotlight: Diarmuid Analysis, Guide and Tips\t1debNi9SIFU\thttps://www.youtube.com/watch?v=1debNi9SIFU',
  'FGO Servant Spotlight: Fergus Analysis, Guide and Tips\tkRvMGz4XOpI\thttps://www.youtube.com/watch?v=kRvMGz4XOpI',
  'FGO Servant Spotlight: Jack the Ripper Analysis, Guide and Tips\tok4RhfgW76c\thttps://www.youtube.com/watch?v=ok4RhfgW76c',
  'FGO Servant Spotlight: Nursery Rhyme Analysis, Guide and Tips\tAE7VNEecAWQ\thttps://www.youtube.com/watch?v=AE7VNEecAWQ',
  'FGO Servant Spotlight: Saber Santa Alter Analysis, Guide and Tips\t4JzWVtkUnGk\thttps://www.youtube.com/watch?v=4JzWVtkUnGk',
  'FGO Servant Spotlight: Elizabeth (Lancer) Analysis, Guide and Tips\t1OiuPvs-zCc\thttps://www.youtube.com/watch?v=1OiuPvs-zCc',
  'FGO Servant Spotlight: Carmilla Analysis, Guide and Tips\tmyke2ds-p6k\thttps://www.youtube.com/watch?v=myke2ds-p6k',
  'FGO Servant Spotlight: Frankenstein Analysis, Guide and Tips\te0B1RMyax6E\thttps://www.youtube.com/watch?v=e0B1RMyax6E',
  'FGO Servant Spotlight: Mordred Analysis, Guide and Tips\tUuSVR8KMtO4\thttps://www.youtube.com/watch?v=UuSVR8KMtO4',
  'FGO Servant Spotlight: Nikola Tesla Analysis, Guide and Tips\t4xBljLb-Ht4\thttps://www.youtube.com/watch?v=4xBljLb-Ht4',
  'FGO Servant Spotlight: Arturia Alter Lancer Analysis, Guide and Tips\tB3MqDQXyl2w\thttps://www.youtube.com/watch?v=B3MqDQXyl2w',
  'FGO Servant Spotlight: Arjuna Analysis, Guide and Tips\t3rylXDep4i4\thttps://www.youtube.com/watch?v=3rylXDep4i4',
  'FGO Servant Spotlight: Karna Analysis, Guide and Tips\teotnsjtpPHM\thttps://www.youtube.com/watch?v=eotnsjtpPHM',
  'FGO Servant Spotlight: Kintoki Analysis, Guide and Tips\tRQnhYQNUZvQ\thttps://www.youtube.com/watch?v=RQnhYQNUZvQ',
  'FGO Servant Spotlight: Saber Alter Analysis, Guide and Tips\tDLPr-XxlV58\thttps://www.youtube.com/watch?v=DLPr-XxlV58',
  'FGO Servant Spotlight: Atalanta Analysis, Guide and Tips\tKzC2Bt35Yoo\thttps://www.youtube.com/watch?v=KzC2Bt35Yoo',
  'FGO Servant Spotlight: Zhuge Liang / Waver Analysis, Guide and Tips\tQc5ZpM_mdag\thttps://www.youtube.com/watch?v=Qc5ZpM_mdag',
  'FGO Servant Spotlight: Hector Analysis, Guide and Tips\ttD99g1eD_eQ\thttps://www.youtube.com/watch?v=tD99g1eD_eQ',
  'FGO Servant Spotlight: Euryale Analysis, Guide and Tips\tGVQe2jE8bqw\thttps://www.youtube.com/watch?v=GVQe2jE8bqw',
  'FGO Servant Spotlight: David Analysis, Guide and Tips\tiWdpLODv1HY\thttps://www.youtube.com/watch?v=iWdpLODv1HY',
  'FGO Servant Spotlight: Anne Bonny & Mary Read Analysis, Guide and Tips\tOP06SIBi7UI\thttps://www.youtube.com/watch?v=OP06SIBi7UI',
  'FGO Servant Spotlight: Medea Lily Analysis, Guide and Tips\tCqmks6v7Q9c\thttps://www.youtube.com/watch?v=Cqmks6v7Q9c',
  'FGO Servant Spotlight: Francis Drake Analysis, Guide and Tips\tCQWfip9ouHE\thttps://www.youtube.com/watch?v=CQWfip9ouHE'
] 30
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: David Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Anne Bonny & Mary Read Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Medea Lily Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
FGO Servant Spotlight: Francis Drake Analysis, Guide and Tips saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): SELECT count(*) AS "count" FROM "play_lists" AS "play_lists";
Executing (default): SELECT "title", "url", "order_added", "createdAt", "updatedAt" FROM "play_lists" AS "play_lists" LIMIT 10 OFFSET '0';
{ data: 'Connected', id: '0gl9MAVzjuqHUstRAAAF' }
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '30';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '40';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://www.youtube.com/playlist?list=PL-t3uv00jzrTeLvvZHKsqB0OgWEVFm2HU' LIMIT 10 OFFSET '30';
{ data: 'Connected', id: 'X82aprJ5rewlu65sAAAH' }
{ data: 'Connected', id: 'IrZYmY9ROHlA_w1CAAAJ' }
body_url: https://youtu.be/SXeeRgEY2UE start_num:  stop_num: 
[
  'stderr: WARNING: [youtube] SXeeRgEY2UE: nsig extraction failed: You may experience throttling for some formats',
  '         Install PhantomJS to workaround the issue. Please download it from https://phantomjs.org/download.html',
  '         n = 1L-hIFEaOKsSOI6bjJ ; player = https://www.youtube.com/s/player/d405f6b4/player_ias.vflset/en_US/base.js',
  'I Built A Laser Chainsaw\tSXeeRgEY2UE\thttps://www.youtube.com/watch?v=SXeeRgEY2UE'
] 4

listing in background

body_url None start_num 1 stop_num 10 chunk_size 10
response None
resposne != 'done':  true
start_num: 11 stop_num: 20 chunk_size: 10
response 
resposne != 'done':  true
start_num: 21 stop_num: 30 chunk_size: 10
response 
resposne != 'done':  true
start_num: 31 stop_num: 40 chunk_size: 10
response 
resposne != 'done':  true
breaking to not crash and burn
================================
Outside loop
response 
resposne != 'done':  true
done listing
Executing (d8b23792-abdc-4a00-a24b-5def16b29ee2): START TRANSACTION;
Executing (d8b23792-abdc-4a00-a24b-5def16b29ee2): COMMIT;
Executing (5cc2c151-b81d-4490-a54d-1dad302b8ed1): START TRANSACTION;
Executing (cd9ce0de-738b-4a49-8921-cea5084a1c31): START TRANSACTION;
Executing (5cc2c151-b81d-4490-a54d-1dad302b8ed1): COMMIT;
Executing (cd9ce0de-738b-4a49-8921-cea5084a1c31): COMMIT;
Executing (e73d3334-3fbd-4fb5-b1d9-987ee050d6da): START TRANSACTION;
Executing (e73d3334-3fbd-4fb5-b1d9-987ee050d6da): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=SXeeRgEY2UE' LIMIT 1;
Executing (e73d3334-3fbd-4fb5-b1d9-987ee050d6da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_5811fc1072f54c228984d9e2abd5e8a2$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=SXeeRgEY2UE','SXeeRgEY2UE','I Built A Laser Chainsaw',false,true,'None','2023-02-15 12:23:03.343 +00:00','2023-02-15 12:23:03.343 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_5811fc1072f54c228984d9e2abd5e8a2$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (e73d3334-3fbd-4fb5-b1d9-987ee050d6da): COMMIT;
Updating entry
31 40 stderr: ERROR: [generic] None: 'None' is not a valid URL. Set --default-search "ytsearch" (or run  yt-dlp "ytsearch:None" ) to search YouTube
 [
  `stderr: ERROR: [generic] None: 'None' is not a valid URL. Set --default-search "ytsearch" (or run  yt-dlp "ytsearch:None" ) to search YouTube`
] 1
31 40 stderr: ERROR: [generic] None: 'None' is not a valid URL. Set --default-search "ytsearch" (or run  yt-dlp "ytsearch:None" ) to search YouTube
 [
  `stderr: ERROR: [generic] None: 'None' is not a valid URL. Set --default-search "ytsearch" (or run  yt-dlp "ytsearch:None" ) to search YouTube`
] 1
31 40 stderr: ERROR: [generic] None: 'None' is not a valid URL. Set --default-search "ytsearch" (or run  yt-dlp "ytsearch:None" ) to search YouTube
 [
  `stderr: ERROR: [generic] None: 'None' is not a valid URL. Set --default-search "ytsearch" (or run  yt-dlp "ytsearch:None" ) to search YouTube`
] 1
body_url: https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC start_num:  stop_num: 
[
  'stderr: WARNING: [youtube:tab] YouTube said: INFO - 24 unavailable videos are hidden',
  'Best HFY Reddit Stories: A Job For A Deathworlder (r/HFY)\tDXPzVZX5Wwo\thttps://www.youtube.com/watch?v=DXPzVZX5Wwo',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 2] (r/HFY)\tkLQxdT34Htg\thttps://www.youtube.com/watch?v=kLQxdT34Htg',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 3] (r/HFY)\tLfd_buIqfKQ\thttps://www.youtube.com/watch?v=Lfd_buIqfKQ',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 4] (r/HFY)\tzqXBQzB1OFE\thttps://www.youtube.com/watch?v=zqXBQzB1OFE',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 5] (r/HFY)\t683iklsG0e4\thttps://www.youtube.com/watch?v=683iklsG0e4',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 6] (Humans Are Space Orcs)\t824tEV4-08I\thttps://www.youtube.com/watch?v=824tEV4-08I',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 7][Part 1] (r/HFY)\tebsGZSfxxxo\thttps://www.youtube.com/watch?v=ebsGZSfxxxo',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 7][Part 2] (r/HFY)\tqA1Ta9HO23s\thttps://www.youtube.com/watch?v=qA1Ta9HO23s',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 8] (Humans Are Space Orcs)\t79z0pahFafg\thttps://www.youtube.com/watch?v=79z0pahFafg',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 9] (Humans Are Space Orcs)\te4eTQL-bHbA\thttps://www.youtube.com/watch?v=e4eTQL-bHbA'
] 11
Executing (default): SELECT "title", "url", "order_added", "createdAt", "updatedAt" FROM "play_lists" AS "play_lists" WHERE "play_lists"."url" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
playlist not enocuntered

listing in background

body_url https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC start_num 1 stop_num 10 chunk_size 10
response None
resposne != 'done':  true
start_num: 11 stop_num: 20 chunk_size: 10
response 
resposne != 'done':  true
start_num: 21 stop_num: 30 chunk_size: 10
response 
resposne != 'done':  true
start_num: 31 stop_num: 40 chunk_size: 10
response 
resposne != 'done':  true
breaking to not crash and burn
================================
Outside loop
response 
resposne != 'done':  true
done listing
Executing (ef339c53-a6cc-408f-b9e3-4284b8f27cb4): START TRANSACTION;
Executing (ef339c53-a6cc-408f-b9e3-4284b8f27cb4): COMMIT;
Executing (91a5117a-7d12-4af0-8966-d4c9594e741d): START TRANSACTION;
Executing (91a5117a-7d12-4af0-8966-d4c9594e741d): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=DXPzVZX5Wwo' LIMIT 1;
Executing (91a5117a-7d12-4af0-8966-d4c9594e741d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b61882a8df4a4fddb1fc9d74032b1a38$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=DXPzVZX5Wwo','DXPzVZX5Wwo','Best HFY Reddit Stories: A Job For A Deathworlder (r/HFY)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.193 +00:00','2023-02-15 12:24:04.193 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b61882a8df4a4fddb1fc9d74032b1a38$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (91a5117a-7d12-4af0-8966-d4c9594e741d): COMMIT;
Executing (2ab81cbc-1c3a-441d-b77c-cb5774ca700e): START TRANSACTION;
Executing (db45ae5f-e5d5-45af-bbfa-2cb877c52836): START TRANSACTION;
Updating entry
Executing (2f549757-0278-4394-b8fc-7cee2609a92c): START TRANSACTION;
Executing (2ab81cbc-1c3a-441d-b77c-cb5774ca700e): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=kLQxdT34Htg' LIMIT 1;
Executing (db45ae5f-e5d5-45af-bbfa-2cb877c52836): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=Lfd_buIqfKQ' LIMIT 1;
Executing (2f549757-0278-4394-b8fc-7cee2609a92c): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=zqXBQzB1OFE' LIMIT 1;
Executing (2ab81cbc-1c3a-441d-b77c-cb5774ca700e): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bd889013220b4901810a1f7a8171486a$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=kLQxdT34Htg','kLQxdT34Htg','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 2] (r/HFY)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.510 +00:00','2023-02-15 12:24:04.510 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bd889013220b4901810a1f7a8171486a$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (db45ae5f-e5d5-45af-bbfa-2cb877c52836): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a6a3cda0b3924e6cb99846509ca83930$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=Lfd_buIqfKQ','Lfd_buIqfKQ','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 3] (r/HFY)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.515 +00:00','2023-02-15 12:24:04.515 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a6a3cda0b3924e6cb99846509ca83930$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (2f549757-0278-4394-b8fc-7cee2609a92c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8f50e13c1e064648962ebab796443a4e$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=zqXBQzB1OFE','zqXBQzB1OFE','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 4] (r/HFY)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.527 +00:00','2023-02-15 12:24:04.527 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8f50e13c1e064648962ebab796443a4e$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3df82e12-9c1f-404d-baf8-ef8fc419a2da): START TRANSACTION;
Executing (2ab81cbc-1c3a-441d-b77c-cb5774ca700e): COMMIT;
Executing (db45ae5f-e5d5-45af-bbfa-2cb877c52836): COMMIT;
Executing (2f549757-0278-4394-b8fc-7cee2609a92c): COMMIT;
Executing (3df82e12-9c1f-404d-baf8-ef8fc419a2da): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=683iklsG0e4' LIMIT 1;
Executing (b60da0ce-a1b3-44c2-8175-904ad4eacd39): START TRANSACTION;
Updating entry
Executing (5bb11bca-edc7-4bff-89f0-38cd0617e24f): START TRANSACTION;
Updating entry
Executing (b5c93e01-a9f0-483f-b23e-bda6e7d01db9): START TRANSACTION;
Updating entry
Executing (8b14a1d7-0833-4142-96b3-4224934570d4): START TRANSACTION;
Executing (3df82e12-9c1f-404d-baf8-ef8fc419a2da): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8ad23c06794c4de6814a51f1ec595579$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=683iklsG0e4','683iklsG0e4','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 5] (r/HFY)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.543 +00:00','2023-02-15 12:24:04.543 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8ad23c06794c4de6814a51f1ec595579$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b60da0ce-a1b3-44c2-8175-904ad4eacd39): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=824tEV4-08I' LIMIT 1;
Executing (5bb11bca-edc7-4bff-89f0-38cd0617e24f): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=ebsGZSfxxxo' LIMIT 1;
Executing (b5c93e01-a9f0-483f-b23e-bda6e7d01db9): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=qA1Ta9HO23s' LIMIT 1;
Executing (8b14a1d7-0833-4142-96b3-4224934570d4): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=79z0pahFafg' LIMIT 1;
Executing (5bb11bca-edc7-4bff-89f0-38cd0617e24f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_9ceca85e1a5044c2a0d411c82b620591$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=ebsGZSfxxxo','ebsGZSfxxxo','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 7][Part 1] (r/HFY)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.553 +00:00','2023-02-15 12:24:04.553 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_9ceca85e1a5044c2a0d411c82b620591$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b5c93e01-a9f0-483f-b23e-bda6e7d01db9): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d25ca028313c4a669828b1d97148fa64$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=qA1Ta9HO23s','qA1Ta9HO23s','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 7][Part 2] (r/HFY)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.558 +00:00','2023-02-15 12:24:04.558 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d25ca028313c4a669828b1d97148fa64$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (8b14a1d7-0833-4142-96b3-4224934570d4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c830a910dabc46269a612ccee86c5392$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=79z0pahFafg','79z0pahFafg','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 8] (Humans Are Space Orcs)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.580 +00:00','2023-02-15 12:24:04.580 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c830a910dabc46269a612ccee86c5392$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (b60da0ce-a1b3-44c2-8175-904ad4eacd39): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a537edbe6db549dfbe8815947cae4932$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=824tEV4-08I','824tEV4-08I','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 6] (Humans Are Space Orcs)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.583 +00:00','2023-02-15 12:24:04.583 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a537edbe6db549dfbe8815947cae4932$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (3df82e12-9c1f-404d-baf8-ef8fc419a2da): COMMIT;
Executing (5bb11bca-edc7-4bff-89f0-38cd0617e24f): COMMIT;
Executing (b5c93e01-a9f0-483f-b23e-bda6e7d01db9): COMMIT;
Executing (8b14a1d7-0833-4142-96b3-4224934570d4): COMMIT;
Executing (b60da0ce-a1b3-44c2-8175-904ad4eacd39): COMMIT;
Updating entry
Executing (9112b01b-a010-4c2f-9a5f-51e8da92f562): START TRANSACTION;
Updating entry
Executing (9112b01b-a010-4c2f-9a5f-51e8da92f562): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."url" = 'https://www.youtube.com/watch?v=e4eTQL-bHbA' LIMIT 1;
Updating entry
Updating entry
Updating entry
Executing (9112b01b-a010-4c2f-9a5f-51e8da92f562): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "vid_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c87d7c9434f249aea08379ccf6380c5b$ BEGIN INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ('https://www.youtube.com/watch?v=e4eTQL-bHbA','e4eTQL-bHbA','Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 9] (Humans Are Space Orcs)',false,true,'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:04.600 +00:00','2023-02-15 12:24:04.600 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c87d7c9434f249aea08379ccf6380c5b$ LANGUAGE plpgsql; SELECT (testfunc.response)."url", (testfunc.response)."id", (testfunc.response)."title", (testfunc.response)."downloaded", (testfunc.response)."available", (testfunc.response)."reference", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (9112b01b-a010-4c2f-9a5f-51e8da92f562): COMMIT;
Updating entry
Executing (1f807202-8ff2-4fef-b7bc-b7e2b5009c37): START TRANSACTION;
Executing (1f807202-8ff2-4fef-b7bc-b7e2b5009c37): SELECT "title", "url", "order_added", "createdAt", "updatedAt" FROM "play_lists" AS "play_lists" WHERE "play_lists"."url" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (1f807202-8ff2-4fef-b7bc-b7e2b5009c37): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "play_lists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cccb5b149478486f8f98f0890006f39b$ BEGIN INSERT INTO "play_lists" ("title","url","createdAt","updatedAt") VALUES ('A Job For A Deathworlder by u/Lanzen_Jars
','https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC','2023-02-15 12:24:06.780 +00:00','2023-02-15 12:24:06.780 +00:00') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cccb5b149478486f8f98f0890006f39b$ LANGUAGE plpgsql; SELECT (testfunc.response)."title", (testfunc.response)."url", (testfunc.response)."order_added", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
Executing (1f807202-8ff2-4fef-b7bc-b7e2b5009c37): COMMIT;
31 40 stderr: WARNING: [youtube:tab] YouTube said: INFO - 24 unavailable videos are hidden
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 10] (Humans Are Space Orcs)	yiWQehOue3w	https://www.youtube.com/watch?v=yiWQehOue3w
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 11] (r/HFY)	5wBmlNbXlPs	https://www.youtube.com/watch?v=5wBmlNbXlPs
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 12] (r/HFY)	hhnUZCTt74s	https://www.youtube.com/watch?v=hhnUZCTt74s
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 13] (r/HFY)	B0RY65GNUBw	https://www.youtube.com/watch?v=B0RY65GNUBw
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 14] (r/HFY)	CGnjROpnkmg	https://www.youtube.com/watch?v=CGnjROpnkmg
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 15] (r/HFY)	X1R2AUvN8sY	https://www.youtube.com/watch?v=X1R2AUvN8sY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 16] (r/HFY)	QyRP89dLWHM	https://www.youtube.com/watch?v=QyRP89dLWHM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 17] (r/HFY)	8aSTrHZvJYI	https://www.youtube.com/watch?v=8aSTrHZvJYI
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 18] (r/HFY)	2wcIgySTNLA	https://www.youtube.com/watch?v=2wcIgySTNLA
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 19] (r/HFY)	zDcjW9Bir1w	https://www.youtube.com/watch?v=zDcjW9Bir1w
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 30] (r/HFY)	snkZ9cQ5Vaw	https://www.youtube.com/watch?v=snkZ9cQ5Vaw
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 31] (r/HFY)	7cUiyhcs3wY	https://www.youtube.com/watch?v=7cUiyhcs3wY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 32] (r/HFY)	Z0KNN2WR7wM	https://www.youtube.com/watch?v=Z0KNN2WR7wM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 33] (r/HFY)	m6VIWhnoJEs	https://www.youtube.com/watch?v=m6VIWhnoJEs
 [
  'stderr: WARNING: [youtube:tab] YouTube said: INFO - 24 unavailable videos are hidden',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 10] (Humans Are Space Orcs)\tyiWQehOue3w\thttps://www.youtube.com/watch?v=yiWQehOue3w',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 11] (r/HFY)\t5wBmlNbXlPs\thttps://www.youtube.com/watch?v=5wBmlNbXlPs',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 12] (r/HFY)\thhnUZCTt74s\thttps://www.youtube.com/watch?v=hhnUZCTt74s',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 13] (r/HFY)\tB0RY65GNUBw\thttps://www.youtube.com/watch?v=B0RY65GNUBw',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 14] (r/HFY)\tCGnjROpnkmg\thttps://www.youtube.com/watch?v=CGnjROpnkmg',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 15] (r/HFY)\tX1R2AUvN8sY\thttps://www.youtube.com/watch?v=X1R2AUvN8sY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 16] (r/HFY)\tQyRP89dLWHM\thttps://www.youtube.com/watch?v=QyRP89dLWHM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 17] (r/HFY)\t8aSTrHZvJYI\thttps://www.youtube.com/watch?v=8aSTrHZvJYI',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 18] (r/HFY)\t2wcIgySTNLA\thttps://www.youtube.com/watch?v=2wcIgySTNLA',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 19] (r/HFY)\tzDcjW9Bir1w\thttps://www.youtube.com/watch?v=zDcjW9Bir1w',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 30] (r/HFY)\tsnkZ9cQ5Vaw\thttps://www.youtube.com/watch?v=snkZ9cQ5Vaw',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 31] (r/HFY)\t7cUiyhcs3wY\thttps://www.youtube.com/watch?v=7cUiyhcs3wY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 32] (r/HFY)\tZ0KNN2WR7wM\thttps://www.youtube.com/watch?v=Z0KNN2WR7wM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 33] (r/HFY)\tm6VIWhnoJEs\thttps://www.youtube.com/watch?v=m6VIWhnoJEs'
] 15
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 10] (Humans Are Space Orcs) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 11] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 12] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 13] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 14] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 15] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 16] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 17] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 18] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 19] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 30] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 31] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 32] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 33] (r/HFY) saved
31 40 stderr: WARNING: [youtube:tab] YouTube said: INFO - 24 unavailable videos are hidden
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 10] (Humans Are Space Orcs)	yiWQehOue3w	https://www.youtube.com/watch?v=yiWQehOue3w
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 11] (r/HFY)	5wBmlNbXlPs	https://www.youtube.com/watch?v=5wBmlNbXlPs
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 12] (r/HFY)	hhnUZCTt74s	https://www.youtube.com/watch?v=hhnUZCTt74s
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 13] (r/HFY)	B0RY65GNUBw	https://www.youtube.com/watch?v=B0RY65GNUBw
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 14] (r/HFY)	CGnjROpnkmg	https://www.youtube.com/watch?v=CGnjROpnkmg
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 15] (r/HFY)	X1R2AUvN8sY	https://www.youtube.com/watch?v=X1R2AUvN8sY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 16] (r/HFY)	QyRP89dLWHM	https://www.youtube.com/watch?v=QyRP89dLWHM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 17] (r/HFY)	8aSTrHZvJYI	https://www.youtube.com/watch?v=8aSTrHZvJYI
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 18] (r/HFY)	2wcIgySTNLA	https://www.youtube.com/watch?v=2wcIgySTNLA
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 19] (r/HFY)	zDcjW9Bir1w	https://www.youtube.com/watch?v=zDcjW9Bir1w
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 30] (r/HFY)	snkZ9cQ5Vaw	https://www.youtube.com/watch?v=snkZ9cQ5Vaw
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 31] (r/HFY)	7cUiyhcs3wY	https://www.youtube.com/watch?v=7cUiyhcs3wY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 32] (r/HFY)	Z0KNN2WR7wM	https://www.youtube.com/watch?v=Z0KNN2WR7wM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 33] (r/HFY)	m6VIWhnoJEs	https://www.youtube.com/watch?v=m6VIWhnoJEs
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 34] (r/HFY)	v2jHNy6vwP0	https://www.youtube.com/watch?v=v2jHNy6vwP0
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 35] (r/HFY)	eX4Ngt0Jam4	https://www.youtube.com/watch?v=eX4Ngt0Jam4
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 36] (r/HFY)	MHzERKXgjcc	https://www.youtube.com/watch?v=MHzERKXgjcc
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 37] (r/HFY)	TYxYIDlI05s	https://www.youtube.com/watch?v=TYxYIDlI05s
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 38] (r/HFY)	Ny_W127x-Kk	https://www.youtube.com/watch?v=Ny_W127x-Kk
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 39] (r/HFY)	gJT9W7YNVq8	https://www.youtube.com/watch?v=gJT9W7YNVq8
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 20](Abridged) (r/HFY)	_KlmacdGLDs	https://www.youtube.com/watch?v=_KlmacdGLDs
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 21] (r/HFY)	J3SwtOGOFRU	https://www.youtube.com/watch?v=J3SwtOGOFRU
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 22] (r/HFY)	qu2NLTEXduI	https://www.youtube.com/watch?v=qu2NLTEXduI
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 23] (r/HFY)	KXcHKNuhf9E	https://www.youtube.com/watch?v=KXcHKNuhf9E
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 24] (r/HFY)	FBu55CyXcwY	https://www.youtube.com/watch?v=FBu55CyXcwY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 25] (r/HFY)	oDKtttICdYo	https://www.youtube.com/watch?v=oDKtttICdYo
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 26] (r/HFY)	xR_RlIpIVak	https://www.youtube.com/watch?v=xR_RlIpIVak
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 27] (r/HFY)	U1hbo-57bvA	https://www.youtube.com/watch?v=U1hbo-57bvA
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 28] (r/HFY)	iI_tVNAmmeM	https://www.youtube.com/watch?v=iI_tVNAmmeM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 29] (r/HFY)	Ffac6Sr1U5E	https://www.youtube.com/watch?v=Ffac6Sr1U5E
 [
  'stderr: WARNING: [youtube:tab] YouTube said: INFO - 24 unavailable videos are hidden',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 10] (Humans Are Space Orcs)\tyiWQehOue3w\thttps://www.youtube.com/watch?v=yiWQehOue3w',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 11] (r/HFY)\t5wBmlNbXlPs\thttps://www.youtube.com/watch?v=5wBmlNbXlPs',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 12] (r/HFY)\thhnUZCTt74s\thttps://www.youtube.com/watch?v=hhnUZCTt74s',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 13] (r/HFY)\tB0RY65GNUBw\thttps://www.youtube.com/watch?v=B0RY65GNUBw',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 14] (r/HFY)\tCGnjROpnkmg\thttps://www.youtube.com/watch?v=CGnjROpnkmg',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 15] (r/HFY)\tX1R2AUvN8sY\thttps://www.youtube.com/watch?v=X1R2AUvN8sY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 16] (r/HFY)\tQyRP89dLWHM\thttps://www.youtube.com/watch?v=QyRP89dLWHM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 17] (r/HFY)\t8aSTrHZvJYI\thttps://www.youtube.com/watch?v=8aSTrHZvJYI',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 18] (r/HFY)\t2wcIgySTNLA\thttps://www.youtube.com/watch?v=2wcIgySTNLA',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 19] (r/HFY)\tzDcjW9Bir1w\thttps://www.youtube.com/watch?v=zDcjW9Bir1w',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 30] (r/HFY)\tsnkZ9cQ5Vaw\thttps://www.youtube.com/watch?v=snkZ9cQ5Vaw',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 31] (r/HFY)\t7cUiyhcs3wY\thttps://www.youtube.com/watch?v=7cUiyhcs3wY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 32] (r/HFY)\tZ0KNN2WR7wM\thttps://www.youtube.com/watch?v=Z0KNN2WR7wM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 33] (r/HFY)\tm6VIWhnoJEs\thttps://www.youtube.com/watch?v=m6VIWhnoJEs',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 34] (r/HFY)\tv2jHNy6vwP0\thttps://www.youtube.com/watch?v=v2jHNy6vwP0',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 35] (r/HFY)\teX4Ngt0Jam4\thttps://www.youtube.com/watch?v=eX4Ngt0Jam4',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 36] (r/HFY)\tMHzERKXgjcc\thttps://www.youtube.com/watch?v=MHzERKXgjcc',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 37] (r/HFY)\tTYxYIDlI05s\thttps://www.youtube.com/watch?v=TYxYIDlI05s',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 38] (r/HFY)\tNy_W127x-Kk\thttps://www.youtube.com/watch?v=Ny_W127x-Kk',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 39] (r/HFY)\tgJT9W7YNVq8\thttps://www.youtube.com/watch?v=gJT9W7YNVq8',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 20](Abridged) (r/HFY)\t_KlmacdGLDs\thttps://www.youtube.com/watch?v=_KlmacdGLDs',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 21] (r/HFY)\tJ3SwtOGOFRU\thttps://www.youtube.com/watch?v=J3SwtOGOFRU',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 22] (r/HFY)\tqu2NLTEXduI\thttps://www.youtube.com/watch?v=qu2NLTEXduI',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 23] (r/HFY)\tKXcHKNuhf9E\thttps://www.youtube.com/watch?v=KXcHKNuhf9E',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 24] (r/HFY)\tFBu55CyXcwY\thttps://www.youtube.com/watch?v=FBu55CyXcwY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 25] (r/HFY)\toDKtttICdYo\thttps://www.youtube.com/watch?v=oDKtttICdYo',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 26] (r/HFY)\txR_RlIpIVak\thttps://www.youtube.com/watch?v=xR_RlIpIVak',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 27] (r/HFY)\tU1hbo-57bvA\thttps://www.youtube.com/watch?v=U1hbo-57bvA',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 28] (r/HFY)\tiI_tVNAmmeM\thttps://www.youtube.com/watch?v=iI_tVNAmmeM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 29] (r/HFY)\tFfac6Sr1U5E\thttps://www.youtube.com/watch?v=Ffac6Sr1U5E'
] 31
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 34] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 35] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 36] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 37] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 38] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 20](Abridged) (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 21] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 22] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 39] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 24] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 25] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 26] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 27] (r/HFY) saved
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 23] (r/HFY) saved
31 40 stderr: WARNING: [youtube:tab] YouTube said: INFO - 24 unavailable videos are hidden
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 10] (Humans Are Space Orcs)	yiWQehOue3w	https://www.youtube.com/watch?v=yiWQehOue3w
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 11] (r/HFY)	5wBmlNbXlPs	https://www.youtube.com/watch?v=5wBmlNbXlPs
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 12] (r/HFY)	hhnUZCTt74s	https://www.youtube.com/watch?v=hhnUZCTt74s
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 13] (r/HFY)	B0RY65GNUBw	https://www.youtube.com/watch?v=B0RY65GNUBw
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 14] (r/HFY)	CGnjROpnkmg	https://www.youtube.com/watch?v=CGnjROpnkmg
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 15] (r/HFY)	X1R2AUvN8sY	https://www.youtube.com/watch?v=X1R2AUvN8sY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 16] (r/HFY)	QyRP89dLWHM	https://www.youtube.com/watch?v=QyRP89dLWHM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 17] (r/HFY)	8aSTrHZvJYI	https://www.youtube.com/watch?v=8aSTrHZvJYI
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 18] (r/HFY)	2wcIgySTNLA	https://www.youtube.com/watch?v=2wcIgySTNLA
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 19] (r/HFY)	zDcjW9Bir1w	https://www.youtube.com/watch?v=zDcjW9Bir1w
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 30] (r/HFY)	snkZ9cQ5Vaw	https://www.youtube.com/watch?v=snkZ9cQ5Vaw
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 31] (r/HFY)	7cUiyhcs3wY	https://www.youtube.com/watch?v=7cUiyhcs3wY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 32] (r/HFY)	Z0KNN2WR7wM	https://www.youtube.com/watch?v=Z0KNN2WR7wM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 33] (r/HFY)	m6VIWhnoJEs	https://www.youtube.com/watch?v=m6VIWhnoJEs
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 34] (r/HFY)	v2jHNy6vwP0	https://www.youtube.com/watch?v=v2jHNy6vwP0
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 35] (r/HFY)	eX4Ngt0Jam4	https://www.youtube.com/watch?v=eX4Ngt0Jam4
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 36] (r/HFY)	MHzERKXgjcc	https://www.youtube.com/watch?v=MHzERKXgjcc
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 37] (r/HFY)	TYxYIDlI05s	https://www.youtube.com/watch?v=TYxYIDlI05s
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 38] (r/HFY)	Ny_W127x-Kk	https://www.youtube.com/watch?v=Ny_W127x-Kk
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 39] (r/HFY)	gJT9W7YNVq8	https://www.youtube.com/watch?v=gJT9W7YNVq8
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 20](Abridged) (r/HFY)	_KlmacdGLDs	https://www.youtube.com/watch?v=_KlmacdGLDs
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 21] (r/HFY)	J3SwtOGOFRU	https://www.youtube.com/watch?v=J3SwtOGOFRU
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 22] (r/HFY)	qu2NLTEXduI	https://www.youtube.com/watch?v=qu2NLTEXduI
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 23] (r/HFY)	KXcHKNuhf9E	https://www.youtube.com/watch?v=KXcHKNuhf9E
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 24] (r/HFY)	FBu55CyXcwY	https://www.youtube.com/watch?v=FBu55CyXcwY
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 25] (r/HFY)	oDKtttICdYo	https://www.youtube.com/watch?v=oDKtttICdYo
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 26] (r/HFY)	xR_RlIpIVak	https://www.youtube.com/watch?v=xR_RlIpIVak
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 27] (r/HFY)	U1hbo-57bvA	https://www.youtube.com/watch?v=U1hbo-57bvA
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 28] (r/HFY)	iI_tVNAmmeM	https://www.youtube.com/watch?v=iI_tVNAmmeM
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 29] (r/HFY)	Ffac6Sr1U5E	https://www.youtube.com/watch?v=Ffac6Sr1U5E
 [
  'stderr: WARNING: [youtube:tab] YouTube said: INFO - 24 unavailable videos are hidden',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 10] (Humans Are Space Orcs)\tyiWQehOue3w\thttps://www.youtube.com/watch?v=yiWQehOue3w',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 11] (r/HFY)\t5wBmlNbXlPs\thttps://www.youtube.com/watch?v=5wBmlNbXlPs',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 12] (r/HFY)\thhnUZCTt74s\thttps://www.youtube.com/watch?v=hhnUZCTt74s',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 13] (r/HFY)\tB0RY65GNUBw\thttps://www.youtube.com/watch?v=B0RY65GNUBw',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 14] (r/HFY)\tCGnjROpnkmg\thttps://www.youtube.com/watch?v=CGnjROpnkmg',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 15] (r/HFY)\tX1R2AUvN8sY\thttps://www.youtube.com/watch?v=X1R2AUvN8sY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 16] (r/HFY)\tQyRP89dLWHM\thttps://www.youtube.com/watch?v=QyRP89dLWHM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 17] (r/HFY)\t8aSTrHZvJYI\thttps://www.youtube.com/watch?v=8aSTrHZvJYI',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 18] (r/HFY)\t2wcIgySTNLA\thttps://www.youtube.com/watch?v=2wcIgySTNLA',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 19] (r/HFY)\tzDcjW9Bir1w\thttps://www.youtube.com/watch?v=zDcjW9Bir1w',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 30] (r/HFY)\tsnkZ9cQ5Vaw\thttps://www.youtube.com/watch?v=snkZ9cQ5Vaw',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 31] (r/HFY)\t7cUiyhcs3wY\thttps://www.youtube.com/watch?v=7cUiyhcs3wY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 32] (r/HFY)\tZ0KNN2WR7wM\thttps://www.youtube.com/watch?v=Z0KNN2WR7wM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 33] (r/HFY)\tm6VIWhnoJEs\thttps://www.youtube.com/watch?v=m6VIWhnoJEs',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 34] (r/HFY)\tv2jHNy6vwP0\thttps://www.youtube.com/watch?v=v2jHNy6vwP0',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 35] (r/HFY)\teX4Ngt0Jam4\thttps://www.youtube.com/watch?v=eX4Ngt0Jam4',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 36] (r/HFY)\tMHzERKXgjcc\thttps://www.youtube.com/watch?v=MHzERKXgjcc',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 37] (r/HFY)\tTYxYIDlI05s\thttps://www.youtube.com/watch?v=TYxYIDlI05s',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 38] (r/HFY)\tNy_W127x-Kk\thttps://www.youtube.com/watch?v=Ny_W127x-Kk',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 39] (r/HFY)\tgJT9W7YNVq8\thttps://www.youtube.com/watch?v=gJT9W7YNVq8',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 20](Abridged) (r/HFY)\t_KlmacdGLDs\thttps://www.youtube.com/watch?v=_KlmacdGLDs',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 21] (r/HFY)\tJ3SwtOGOFRU\thttps://www.youtube.com/watch?v=J3SwtOGOFRU',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 22] (r/HFY)\tqu2NLTEXduI\thttps://www.youtube.com/watch?v=qu2NLTEXduI',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 23] (r/HFY)\tKXcHKNuhf9E\thttps://www.youtube.com/watch?v=KXcHKNuhf9E',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 24] (r/HFY)\tFBu55CyXcwY\thttps://www.youtube.com/watch?v=FBu55CyXcwY',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 25] (r/HFY)\toDKtttICdYo\thttps://www.youtube.com/watch?v=oDKtttICdYo',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 26] (r/HFY)\txR_RlIpIVak\thttps://www.youtube.com/watch?v=xR_RlIpIVak',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 27] (r/HFY)\tU1hbo-57bvA\thttps://www.youtube.com/watch?v=U1hbo-57bvA',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 28] (r/HFY)\tiI_tVNAmmeM\thttps://www.youtube.com/watch?v=iI_tVNAmmeM',
  'Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 29] (r/HFY)\tFfac6Sr1U5E\thttps://www.youtube.com/watch?v=Ffac6Sr1U5E'
] 31
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 28] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Best HFY Reddit Stories: A Job For A Deathworlder [Chapter 29] (r/HFY) saved
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): INSERT INTO "vid_lists" ("url","id","title","downloaded","available","reference","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "url","id","title","downloaded","available","reference","createdAt","updatedAt";
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '0';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '10';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '20';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '30';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '40';
Executing (default): SELECT count(*) AS "count" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC';
Executing (default): SELECT "url", "id", "title", "downloaded", "available", "reference", "createdAt", "updatedAt" FROM "vid_lists" AS "vid_list" WHERE "vid_list"."reference" = 'https://youtube.com/playlist?list=PL4j9sdcFKwqmqZHilHBjn_GkkEkvVLmKC' LIMIT 10 OFFSET '30';
